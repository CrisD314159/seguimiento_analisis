
@inproceedings{10.1145/3677619.3678125,
author = {Buttke, Heike and Krugel, Johannes},
title = {Information Encoding Modeling in Computer Science Education},
year = {2024},
isbn = {9798400710056},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3677619.3678125},
doi = {10.1145/3677619.3678125},
abstract = {Modeling is a major component of Computer Science (CS) education implemented in K-12. We propose Information Encoding Modeling (IEM) to facilitate the development of modeling competencies, emphasizing semiotic competence and the creative representation of complex information. This research situates IEM within the context of existing modeling techniques, evaluates its application through various examples, and proposes an Encoding Diagram as a key representational tool. We present the potential integration of IEM into CS education to enhance students’ understanding of information encoding and Computational Thinking principles.},
booktitle = {Proceedings of the 19th WiPSCE Conference on Primary and Secondary Computing Education Research},
articleno = {28},
numpages = {2},
keywords = {Computational Thinking, K-12 Education, Modeling, Semiotics},
location = {Munich, Germany},
series = {WiPSCE '24}
}

@inproceedings{10.1145/3356393.3365370,
author = {Sinton, Diana S.},
title = {Observations on the Gaps and Opportunities for Geo computation},
year = {2019},
isbn = {9781450369527},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3356393.3365370},
doi = {10.1145/3356393.3365370},
abstract = {Traditional geographical approaches to acquiring new knowledge and understanding problems varies significantly from the primary modus operandi of computational thinking that is practiced by computer scientists. These differences have contributed to a persistent absence of geo computational courses within academic geography departments and an underdeveloped and limited understanding of spatial thinking by computationally-minded scholars.},
booktitle = {Proceedings of the 1st ACM SIGSPATIAL International Workshop on Geo-Computational Thinking in Education},
articleno = {3},
numpages = {4},
keywords = {Geographical thinking, coordinates, enumerations, geo computation, spatial relationships, spatial thinking},
location = {Chicago, IL, USA},
series = {GeoEd'19}
}

@inbook{10.1145/3507951.3519287,
author = {Kopcha, Theodore J. and Wilson, Cheryl Y. and Yang, Dayae},
title = {Improving teacher use of educational robotics to teach computer science in K-5 mathematics},
year = {2022},
isbn = {9781450396158},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3507951.3519287},
abstract = {This paper reports on a professional development (PD) effort in which 12 elementary teachers (K-5) in a rural, under-resourced school were equipped with the skills needed to integrate computer science activity into the regular math curriculum. Over the course of a year, the teachers engaged in a week-long summer workshop and monthly follow-up training with in-classroom support as they integrated educational robots into their math curriculum. Surveys, tests, and teacher lesson plans were analyzed to better understand how the PD contributed to teacher's knowledge and skills. Wilcoxon Signed-Rank tests indicated that teacher rankings on their attitudes towards and planning practices with educational robots were statistically significantly higher at the end of the PD. The improvement was further reflected in the quality of their lesson plans. Implications for preparing teachers to use educational robots to teach computer science in elementary mathematics are discussed.},
booktitle = {Computational Thinking in PreK-5: Empirical Evidence for Integration and Future Directions},
pages = {47–54},
numpages = {8}
}

@inbook{10.1145/3507951.3519290,
author = {Grover, Shuchi and Dominguez, Ximena and Leones, Tiffany and Kamdar, Danae and Vahey, Phil and Gracely, Sara},
title = {Strengthening early STEM learning by integrating CT into science and math activities at home},
year = {2022},
isbn = {9781450396158},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3507951.3519290},
abstract = {While understanding in the field of how CT can be used in early childhood is limited, current CT definitions include skills and practices that align with early mathematics and science learning goals outlined in national frameworks (e.g., Head Start Early Learning Outcomes Framework) and state standards. In order to understand which elements of CT align with the abilities and interests of young children and how they can be integrated with early science and math experiences in a mutually supportive manner, we partnered with preschool teachers and families to co-design and pilot test hands-on (unplugged) and digital activities for classrooms and homes.Our collaborative research identified the following CT skills as productive starting points for our co-design work: (1) problem decomposition; (2) algorithmic thinking; (3) abstraction; and (4) testing and debugging. This paper describes our approach to operationalizing CT for early learning and our empirical research around activities designed to understand how CT can be linked with math and science to create powerful learning experiences for preschool learners. Our work involves actively fostering a home-school connection for promoting CT and prioritized designing for activities that fit the ecology of preschool classrooms and homes (with special attention to family activities). With a view to designing equity-oriented experiences, we partnered with preschools serving historically underserved communities, and centered families' funds of knowledge. This paper focuses specifically on the home component of the program and shares data and analyses about children's and parent's experiences at home---which activities were more successful and resonated with children and families, and which specific synergies emerged between CT skills, math and science concepts and practices. Our findings highlight the promise of introducing early CT to support early learning, and especially involving families in the process. Results from our research also identified challenges that should be addressed in future iterations of this design research We believe our family connection activities are not only a unique part of the research but also an exemplar of what should be an essential piece of STEM education for young learners.},
booktitle = {Computational Thinking in PreK-5: Empirical Evidence for Integration and Future Directions},
pages = {72–84},
numpages = {13}
}

@inproceedings{10.1145/3576882.3617907,
author = {Kafai, Yasmin B.},
title = {Empowering the Next Generation of Computational Thinkers},
year = {2023},
isbn = {9798400700484},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3576882.3617907},
doi = {10.1145/3576882.3617907},
abstract = {Over the past ten years, global efforts have promoted computational thinking in K-12 computer science education. With the increasing prevalence of machine learning and artificial intelligence, there is a pressing need to broaden the scope of computational thinking to enable students to become competent, creative, and critical learners. Future digital literacies should encompass an appreciation of the distinctions between machine and human thinking, an awareness of the social aspects of data production, and an understanding of the values, biases, and historical contexts embedded within digital technologies. This opens up new possibilities for teachers and schools to guide students in actively shaping their digital destinies.},
booktitle = {Proceedings of the ACM Conference on Global Computing Education Vol 1},
pages = {3–4},
numpages = {2},
keywords = {artificial intelligence, computing education, k-12, machine learning},
location = {Hyderabad, India},
series = {CompEd 2023}
}

@inproceedings{10.1145/2307096.2307137,
author = {Hsi, Sherry and Eisenberg, Michael},
title = {Math on a sphere: using public displays to support children's creativity and computational thinking on 3D surfaces},
year = {2012},
isbn = {9781450310079},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2307096.2307137},
doi = {10.1145/2307096.2307137},
abstract = {Math on a Sphere (MoS) is a newly developed Web-based environment that enables children to imagine, program, and share creative designs on a public spherical display, the "Science on a Sphere" system created by the National Oceanic and Atmospheric Administration (NOAA). The MoS software, similar in spirit to the Logo language, was installed at an exhibit located in the Lawrence Hall of Science at the University of California at Berkeley and at the Fiske Planetarium at University of Colorado, Boulder. Twenty-five children ages 8 to 13 in two cohorts tested the MoS software during a half-day workshop held at the Lawrence Hall. In addition to using the MoS software to create beautiful and original works of art, children also engaged in hands-on crafts and inquiry-based math activities to further promote learning of spherical geometry and computational thinking. MoS software workshop had a positive impact on children's engagement, but had mixed results about their understanding of geometry as evidenced by direct observations and results from pre/post-surveys, which are reported here.},
booktitle = {Proceedings of the 11th International Conference on Interaction Design and Children},
pages = {248–251},
numpages = {4},
keywords = {computational thinking, logo, math on a sphere, public displays, spherical geometry},
location = {Bremen, Germany},
series = {IDC '12}
}

@inproceedings{10.1145/2445196.2445372,
author = {Koh, Kyu Han and Repenning, Alexander and Nickerson, Hilarie and Endo, Yasko and Motter, Pate},
title = {Will it stick? exploring the sustainability of computational thinking education through game design},
year = {2013},
isbn = {9781450318686},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2445196.2445372},
doi = {10.1145/2445196.2445372},
abstract = {A strategy exposing middle school students to computer science through game design appears to be a promising means to mitigate the computer science pipeline challenge. Particularly when short game design activities are integrated into already existing middle school courses, research suggests that game design is effective in broadening participation and motivating large numbers of students, along with large percentages of women and minorities. A study with over 10,000 students is exploring the sustainability of this approach and finding positive responses to inquiries such as these: Do teachers continue to use game design? Can they advance beyond extrinsic rewards such as research stipends? After building one game, do students advance, building more games or even STEM simulations?},
booktitle = {Proceeding of the 44th ACM Technical Symposium on Computer Science Education},
pages = {597–602},
numpages = {6},
keywords = {computational thinking, game design, simulation design, sustainability, zone of proximal flow},
location = {Denver, Colorado, USA},
series = {SIGCSE '13}
}

@inproceedings{10.1145/3613905.3650833,
author = {Sung, Ching-Ying and Cherng, Fu-Yin and Chiu, Yi-Lun and Chen, Peng-Hsi and Chen, Bing-Yu},
title = {3CPEs: Concrete Computational Concepts Programming Environments for Elementary Computer Science Education},
year = {2024},
isbn = {9798400703317},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3613905.3650833},
doi = {10.1145/3613905.3650833},
abstract = {This study introduces the Concrete Computational Concepts Programming Environments (3CPEs), an innovative approach designed to help elementary students grasp abstract computational concepts through concrete metaphors using tangible and everyday objects. Traditional programming environments for children focus on concrete programming language syntax and semantics yet often fall short in conveying advanced computational concepts. To address this gap, 3CPEs combine the hands-on appeal of computer-science unplugged activities with the versatility of programming environments, using familiar objects and gamified elements to visualize abstract computational and algorithmic ideas. An example is CT (Computational Thinking) Chef, a 3CPEs implementation to enhance elementary students’ understanding of programming concepts. Through design workshops with five elementary programming teachers, we preliminarily identified teaching challenges and evaluated 3CPEs’ efficacy as an educational tool. The feedback underscores CT Chef’s potential in facilitating the teaching of intricate computational concepts for young learners.},
booktitle = {Extended Abstracts of the CHI Conference on Human Factors in Computing Systems},
articleno = {13},
numpages = {7},
keywords = {Computational Thinking, Concrete Metaphor Design, Elementary Education, Programming Environment},
location = {Honolulu, HI, USA},
series = {CHI EA '24}
}

@inproceedings{10.1145/3626252.3630890,
author = {Hung, Eping E. and Vanderberg, Maggie and Krause, Gladys and Skuratowicz, Eva},
title = {Making Abstraction Concrete in the Elementary Classroom},
year = {2024},
isbn = {9798400704239},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3626252.3630890},
doi = {10.1145/3626252.3630890},
abstract = {In recent years, several research projects have introduced elementary school teachers to computational thinking as a first step in familiarizing students with computer science concepts at an early age. A consistent challenge reported in these initiatives is teaching abstraction. This position paper offers preliminary recommendations for abstraction pedagogy in elementary education. These suggestions stem from an analysis of unplugged abstraction examples showcased during a summer institute on computational thinking.By examining commonalities among abstraction examples, key parts of the process of abstraction pertinent to elementary classrooms were identified: (1) the abstraction process is typically performed in reverse since students in elementary school are given abstractions to start with; (2) evaluation of concrete details to support an abstraction is part of the filtering step of abstraction; (3) in the absence of evaluation criteria, pattern recognition can be applied to a set of concrete examples to extract characteristics of an abstraction; and (4) abstractions can be supported by not only concrete details but other abstractions which students will need to develop an understanding of before fully comprehending the initial concept.Preliminary recommendations for abstraction instruction include having students evaluate examples; engaging students in pattern recognition to extract characteristics of an abstraction; developing student fluency in describing abstractions, their supporting examples, and characteristics; and assessing students by asking not only for examples of abstractions, but for their characteristics as well.},
booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 1},
pages = {540–546},
numpages = {7},
keywords = {abstraction, computational thinking, elementary education, professional development, unplugged computational thinking},
location = {Portland, OR, USA},
series = {SIGCSE 2024}
}

@inproceedings{10.1145/3641555.3705122,
author = {Sawada, Chiyoko and Terazono, Masafumi and Hagino, Tatsuya and Hattori, Takashi},
title = {An Analysis of K-12 Programming Education Utilizing the Minecraft Metaverse Amidst the COVID-19 Pandemic},
year = {2025},
isbn = {9798400705328},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3641555.3705122},
doi = {10.1145/3641555.3705122},
abstract = {In March 2020, all elementary, middle, and high schools in Japan were temporarily closed for approximately one month in response to the COVID-19 pandemic. During this interval, we initiated a programming education program for students ranging from elementary to high school, utilizing the metaverse capabilities of Minecraft. The primary participants in this initiative were educators and students from two private programming institutions. Students engaged in a simulated school experience that leveraged Minecraft's command and Redstone based programming functionalities. Furthermore, the collaborative nature of the metaverse enhanced students' programming and computational thinking abilities. This poster will first delineate the distinctive features of Minecraft's programming environment in contrast to visual programming platforms such as Scratch. Subsequently, we will analyze students' experiences within the metaverse, focusing on peer interaction and the enhancement of motivation towards programming. Finally, we will conduct an evaluation and propose directions for future research.},
booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1615–1616},
numpages = {2},
keywords = {K-12 education, commands, computational thinking, game elements, metaverse},
location = {Pittsburgh, PA, USA},
series = {SIGCSETS 2025}
}

@inproceedings{10.1145/3568813.3600143,
author = {Israel, Maya and Li, Jiehan and Yan, Wei and Elagha, Noor A. and Huggins-Manley, Corinne A. and Luo, Feiya and Franklin, Diana},
title = {How are Elementary Students Demonstrating Understanding of Decomposition within Elementary Mathematics?},
year = {2023},
isbn = {9781450399760},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3568813.3600143},
doi = {10.1145/3568813.3600143},
abstract = {Decomposition is a foundational computational thinking construct that is often introduced early as students are learning computer science in the elementary grades. Although decomposition is often described in early computational activities, little research exists about how to teach and assess students’ understanding of decomposition. In this mixed-methods research study, 173 third-grade students from eight elementary school classrooms in the Midwest were taught eight lessons that integrated decomposition as well as other computational thinking practices into their mathematics instruction. They completed a computational thinking assessment after the first four lessons and again after the second four lessons. Analyses included the distribution of correct decomposition item responses, confirmatory factor analysis, and item-level error analysis. Results indicate wide variability in students’ performance on the decomposition assessment items as well as in performance on items contextualized within mathematics. This study highlights the need for additional considerations about assessing computational understanding, implications for assessment within integrated contexts, and the use of paper-and-pencil tests compared to embedded assessments.},
booktitle = {Proceedings of the 2023 ACM Conference on International Computing Education Research - Volume 1},
pages = {222–235},
numpages = {14},
keywords = {Computational Thinking, Decomposition, Elementary Computer Science, Integration},
location = {Chicago, IL, USA},
series = {ICER '23}
}

@inproceedings{10.1145/3587103.3594152,
author = {Hoobergs, Jesse and van den Berg, Birthe and Schrijvers, Tom},
title = {eTeacher: A Pilot in Flemish Secondary Education},
year = {2023},
isbn = {9798400701399},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3587103.3594152},
doi = {10.1145/3587103.3594152},
abstract = {The Flemish Government has imposed a new and challenging set of learning objectives for secondary education. An important part comprises Computational Thinking for 3rd and 4th year students, and Computer Science for students in their 5th and 6th year. Yet, most teachers, who have mostly not been trained to teach these subjects, do not feel confident in programming-related topics. With eTeacher, we take away this burden from the teacher and allow students to work independently and at their own pace. In particular, we present a platform with an integrated course text for Computational Thinking. eTeacher is available on every device, gives automatic code-feedback both content-wise and on programming style and provides exercises of different types and levels. Teachers can monitor their students individually and consult statistics. The platform was extensively evaluated in a pilot at 20 schools.},
booktitle = {Proceedings of the 2023 Conference on Innovation and Technology in Computer Science Education V. 2},
pages = {593–594},
numpages = {2},
keywords = {K-12 education, computational thinking, online learning environment},
location = {Turku, Finland},
series = {ITiCSE 2023}
}

@inproceedings{10.1145/2493394.2493404,
author = {Basawapatna, Ashok R. and Repenning, Alexander and Koh, Kyu Han and Nickerson, Hilarie},
title = {The zones of proximal flow: guiding students through a space of computational thinking skills and challenges},
year = {2013},
isbn = {9781450322430},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2493394.2493404},
doi = {10.1145/2493394.2493404},
abstract = {This paper presents a novel pedagogical framework, entitled the Zones of Proximal Flow, which integrates Vygotsky's Zone of Proximal Development theory with Csikszentmihalyi's ideas about Flow. Flow focuses on the individual-- an individual is in Flow when challenges are balanced with skills. The Zone of Proximal Development, on the other hand, brings in a social learning aspect focusing on a student's ability to learn concepts with external support. From our research experiences bringing game and simulation design into middle school classrooms, we attempt to provide students with appropriate challenges using a project-first based approach that aims to keep students in Flow. The project-first approach employs inquiry based scaffolding to guide students, with appropriate support by their teachers, through Vygotsky's Zone of Proximal Development, back in to Csikszentmihalyi's state of Flow for an ideal learning experience. We call this space the Zones of Proximal Flow. Data indicate that the Zones of Proximal Flow approach works, keeping classrooms engaged in the act of game design and enabling students to advance to more complex program creations.},
booktitle = {Proceedings of the Ninth Annual International ACM Conference on International Computing Education Research},
pages = {67–74},
numpages = {8},
keywords = {computational thinking, computational thinking patterns, computer science education, flow, scalable game design, simulations, zone of proximal development, zones of proximal flow},
location = {San Diego, San California, USA},
series = {ICER '13}
}

@inproceedings{10.1145/2839509.2850575,
author = {Nickerson, Hilarie and Bush, Jeffrey and Endo, Yasko Chanoki},
title = {We Have Questions: Pedagogical, Technical, and Procedural Assistance Requests in a Large Computational Thinking Curriculum Research Project (Abstract Only)},
year = {2016},
isbn = {9781450336857},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2839509.2850575},
doi = {10.1145/2839509.2850575},
abstract = {As teacher professional development efforts continue to scale to meet the growing demand for computer science educators, more individuals with little formal preparation in the discipline are seeking training. For this reason, it is important to understand the kinds of questions that these teachers, along with administrators and IT staff, are asking professional development providers. This research examines questions received by Scalable Game Design (SGD), a project that engages students in computing through game and simulation design activities. SGD has provided training for more than 300 teachers since 2009. We have found several dimensions of interest in the question pool. The major categories of questions received are pedagogical, technical, and procedural, and we present a generalizable taxonomy of question types plus specific examples. In addition, question content and questioner roles fluctuate throughout the professional development and classroom implementation cycle, from initial inquiries to requests regarding next steps. Knowledge of these factors can lead to adjustments in training content to reduce questions later on and potentially increase teacher confidence; moreover, this information can inform planning for support resources, an especially important activity when project growth is forecast. We also discuss how our support structures have changed over the life of the project and compare them to two other curriculum initiatives that rely on unique software environments. Our future work will investigate the characteristics of teachers who are asking particular kinds of questions, including their disciplinary backgrounds, experience in the classroom, familiarity with SGD, and instructional environments.},
booktitle = {Proceedings of the 47th ACM Technical Symposium on Computing Science Education},
pages = {692},
numpages = {1},
keywords = {classroom implementation, computational thinking, computer science education, experience report, scalable game design, teacher professional development},
location = {Memphis, Tennessee, USA},
series = {SIGCSE '16}
}

@inproceedings{10.1145/3663433.3663459,
author = {Clarke-Midura, Jody and Shumway, Jessica F. and Ashineh, Anahita and Zandi, Alireza and Clawson, Whitney},
title = {What Happened to the Geometry? Examining Spatial and Mathematical Concepts in Computational Toys and Kits for Young Children},
year = {2024},
isbn = {9798400717222},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3663433.3663459},
doi = {10.1145/3663433.3663459},
abstract = {This paper explores the design of computational toys and kits for young children (ages 4-7) as tools for learning integrated mathematical, spatial, and computational thinking concepts. Specifically, we examine how the design features of the toys and kits represent the concepts of rotation on a point and spatial orientation of the agent. We examine toys and kits sold commercially, developed through research, and used in early childhood classrooms. Our findings indicate that the mathematical and spatial concepts are overlooked in some designs. Prior research examined toys for their affordances related to computational thinking, the present study contributes to understanding of how these toys and kits have the potential to foster foundational mathematics and spatial skills. We discuss implications for design of toys and kits as well as recommendations for future research.},
booktitle = {Proceedings of the 2024 Symposium on Learning, Design and Technology},
pages = {47–56},
numpages = {10},
keywords = {Orientation, Tangible Coding Toys, Turn Angle, Turtle Geometry},
location = {Delft, Netherlands},
series = {LDT '24}
}

@article{10.1145/3657303,
author = {Pessoa, Larissa and Martins, Lia and Hsu, Meng and de Freitas, Rosiane},
title = {ZoAM GameBot: A Journey to the Lost Computational World in the Amazonia},
year = {2024},
issue_date = {September 2024},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {17},
number = {3},
issn = {1556-4673},
url = {https://doi.org/10.1145/3657303},
doi = {10.1145/3657303},
abstract = {The search for alternative teaching–learning processes that attract more interest and involvement of young people has inspired the development of a game with a chatbot architecture based on interactive storytelling and multiple learning paths. Thus, we introduce in this article the GameBot ZoAm, developed for the Discord instant messaging and social platform. ZoAm offers a unique learning experience centered around storytelling, focusing on fundamental computing concepts and logical challenges that enhance computational thinking skills. Furthermore, the game also promotes an appreciation for Amazonian culture and folklore, with decision-making with human values. An action research study was conducted involving students from the last years of the end of elementary school. The research utilized a heuristic analysis based on the Gameplay Heuristics (PLAY) by Desurvire and Wiberg (ANO) and the evaluation model proposed by Korhonen and Koivisto (ANO) for mobile devices. The analysis employed a reduced and merged set of heuristics from these models, suited for the GameBot's context, focusing on (I) usability, (II) gameplay and immersion, and (III) mobility. Regarding the reliability coefficient used to evaluate the survey applied to students after playing the GameBot, Cronbach's Alpha and Guttman Lambda-6 (G6(smc)) coefficients were applied. These metrics were chosen to ensure the internal consistency and reliability of survey items, reflecting on how effectively the questions measured the focuses proposed by the heuristic analysis. The findings indicate that the game has the potential to facilitate the assimilation of the integrated concepts and sustain student interest throughout gameplay.},
journal = {J. Comput. Cult. Herit.},
month = sep,
articleno = {48},
numpages = {21},
keywords = {Conversation simulation applications, educational digital games, narratives and storytelling, computational thinking}
}

@inproceedings{10.1145/3617650.3624939,
author = {Satavlekar, Spruha and Mishra, Shitanshu and Iyer, Sridhar},
title = {AuthentiCT: Making CT Authentic to Learners},
year = {2023},
isbn = {9798400703744},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3617650.3624939},
doi = {10.1145/3617650.3624939},
abstract = {Novice learners initiating computational Thinking face challenges of complexity and have a longer learning curve to understand the interfaces. The contexts in an introductory CT lesson are seldom situated in the learners' real-life. In order to make CT authentic to learners, the environment AuthentiCT has been designed with activities rooted in learners' everyday tasks to make CT skills meaningful. A study with 16 middle-schoolers performing AuthentiCT activities showed that learners found CT relevant and applied problem-solving in similar contexts in their everyday life.},
booktitle = {Proceedings of the ACM Conference on Global Computing Education Vol 2},
pages = {205},
numpages = {1},
keywords = {computational thinking, everyday computing, situated learning},
location = {Hyderabad, India},
series = {CompEd 2023}
}

@inproceedings{10.1145/1463689.1463767,
author = {Weller, Michael Philetus and Do, Ellen Yi-Luen and Gross, Mark D},
title = {Escape machine: teaching computational thinking with a tangible state machine game},
year = {2008},
isbn = {9781595939944},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1463689.1463767},
doi = {10.1145/1463689.1463767},
abstract = {We present a methodology for building objects-to-think-computationally-with and illustrate its application in developing our Escape Machine game. The input mechanism for this game is a tangible state machine built with Posey, our computationally enhanced construction kit. Through manipulating this state machine children create an algorithmic specification for the behavior of both the avatar and its enemies in an attempt to navigate a maze without being eaten. We outline several strategies for success at Escape Machine and discuss how it embeds an important computational thinking concept in interaction with a tangible device.},
booktitle = {Proceedings of the 7th International Conference on Interaction Design and Children},
pages = {282–289},
numpages = {8},
location = {Chicago, Illinois},
series = {IDC '08}
}

@inproceedings{10.1145/3617650.3624948,
author = {Kalluri, Balaji and Prasad, Prajish and Sharma, Prakrati},
title = {Making CS Education Relevant to the 21st Century: Blending Critical Thinking into an Introductory Programming Course},
year = {2023},
isbn = {9798400703744},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3617650.3624948},
doi = {10.1145/3617650.3624948},
abstract = {In this poster, we describe a theoretical model aimed at developing future human computational thinking in students. We describe a blended pedagogy drawing approaches from multiple disciplines such as social sciences, design, ethics, and computing to develop a new undergraduate introductory programming course. We describe how we introduced this pedagogy in an introductory programming course, taught in a university in India and summarise our preliminary findings.},
booktitle = {Proceedings of the ACM Conference on Global Computing Education Vol 2},
pages = {194},
numpages = {1},
keywords = {21st-century skills, CS1, Python programming, critical thinking},
location = {Hyderabad, India},
series = {CompEd 2023}
}

@inproceedings{10.1145/2538862.2544300,
author = {Marghitu, Daniela and Thomas, Lavaris and Rawajfih, Yasmeen and Hall, Jillian and Marshall, Andrew},
title = {Kodu alice and computer science unplugged: a model of effective introducing middle school students to computer science and computational thinking (abstract only)},
year = {2014},
isbn = {9781450326056},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2538862.2544300},
doi = {10.1145/2538862.2544300},
abstract = {This poster describes the "Computer Science for All Bulldogs (CS4ALL-B) pilot, a 7-week long course taught in Fall 2013 at Opelika Middle School, located in the Auburn- Opelika, Alabama Metropolitan Area (https://cs4allb.eng.auburn.edu). The program marks the first time a formal Computer Science (CS) course has been taught in an Alabama middle school. The CS4ALL-B curriculum builds upon the Auburn University innovative 'three-step' model of K-12 computing and robotics instruction that introduces CS and Computational Thinking (CT) concepts for K-12 students. This model uses programming frameworks such as Kodu, Alice, App Inventor, Lego NXT-G and Tetrix, and Computer Science Unplugged (CSU) activities. While moving between the three steps, students explore the fundamentals of CS/CT concepts. The CS4ALL-B curriculum is structured in four main sections: First, introduction to Kodu for 7th graders and Alice for 8th graders; Second, introduction to CS/CT Concepts; Third, participation in selected CSU activities, then students develop their programs to demonstrate their abilities to design and create Kodu or Alice worlds that implement the concepts learned while participating in CSU activities; Fourth, students build their own course project that includes all concepts and skills grasped throughout their training. This model helps maintain high levels of motivation, concentration, and engagement during the entire course. The results of the pilot assessment, including tools such as traditional written assessments (e.g. quizzes, tests) as well as alternative assessments tools (e.g. projects and blog posts), will be presented. We have found that our methods foster the learners' nascent development in CS.},
booktitle = {Proceedings of the 45th ACM Technical Symposium on Computer Science Education},
pages = {712},
numpages = {1},
keywords = {computational thinking, computer science, middle school formal computer science class},
location = {Atlanta, Georgia, USA},
series = {SIGCSE '14}
}

@inproceedings{10.1145/3677619.3677646,
author = {Repenning, Alexander},
title = {Escaping the Turing Tar-Pit with AI Programming Blocks},
year = {2024},
isbn = {9798400710056},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3677619.3677646},
doi = {10.1145/3677619.3677646},
abstract = {Game design is often considered a motivational approach to get young children interested in programming and computational thinking. However, while the idea of game programming may be compelling from an educational point of view, creating games with interesting interactions that are actually fun to play remains challenging. Modern tools aimed at novice programmers should empower their users to create games, such as Pac-Man, that approach or even exceed the gameplay of 1980's arcade games. By adding a high-level AI pathfinding block to the RULER.game tool, 13 students in grades 1-4 attempted to build Pac-Man-like games. The findings suggest that all students were able to create Pac-Man-like games with compelling gameplay interactions, including ghosts finding the shortest path through complex mazes to Pac-Man, multiple ghosts collaborating with each other, and sophisticated game world topologies featuring toroidal portals.},
booktitle = {Proceedings of the 19th WiPSCE Conference on Primary and Secondary Computing Education Research},
articleno = {29},
numpages = {2},
keywords = {Computer science education, artificial intelligence, computational thinking, mobile programming tools, programming for children},
location = {Munich, Germany},
series = {WiPSCE '24}
}

@inproceedings{10.1145/3629296.3629315,
author = {Hinterplattner, Sara and Schmidthaler, Eva and Skog\o{}, Jakob Sebelin and Leitner, Sarah and Sabitzer, Barbara},
title = {Once Upon a Time there was an Ozobot: Storytelling with Educational Robots},
year = {2024},
isbn = {9798400709111},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3629296.3629315},
doi = {10.1145/3629296.3629315},
abstract = {This paper shows a way to introduce computational thinking in early childhood teaching based on scientific results within Neurodidactics. This approach offers children to explore and develop their creativity. Aiming to raise the children's interest in STEAM and to prevent prejudices in this field, the educational Robots, Ozobots, can be used in elementary and primary school to tell fairy tales. In order to connect basic computer science concepts by means of Storytelling, a workshop for very young researchers was designed and presented.},
booktitle = {Proceedings of the 15th International Conference on Education Technology and Computers},
pages = {120–126},
numpages = {7},
keywords = {Computational thinking, Neurodidactics, STEAM education, STEM education, creativity, educational robots},
location = {Barcelona, Spain},
series = {ICETC '23}
}

@inproceedings{10.1145/3568739.3568752,
author = {Kanaki, Kalliopi and Kalogiannakis, Michail},
title = {Algorithmic thinking in early childhood},
year = {2023},
isbn = {9781450398091},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3568739.3568752},
doi = {10.1145/3568739.3568752},
abstract = {The rising interest of educators, researchers, and policymakers around the world as far as the development of computational thinking skills in compulsory education is concerned is echoed in the plethora of research studies discussed in the pertinent literature. However, the successful injection of computation thinking in formal educational settings demands the construction of developmentally appropriate assessment tools. In this paper, we discuss a novel framework for assessing computational thinking skills in early childhood settings. The proposed framework was employed in a relevant quantitative research study conducted in the city of Heraklion, Crete, from February to June 2019, with a sample of 435 first and second graders and within the context of the Environmental Study course. This paper also provides evidence regarding the examination of age, gender, and learning achievements in the Environmental Study course as predictive factors of one of the core computational thinking competencies, namely algorithmic thinking. The research findings revealed that age and learning achievements in the Environmental Study course constitute predictive factors for algorithmic thinking skills in the first and second grade level of primary school. On the contrary, algorithmic thinking skills are not related to first and second graders’ gender. The results of this study provide a solid background for designing and implementing developmentally appropriate tools for cultivating and assessing computational thinking skills in the early years of schooling.},
booktitle = {Proceedings of the 6th International Conference on Digital Technology in Education},
pages = {66–71},
numpages = {6},
keywords = {Age, Algorithmic thinking, Early childhood education, Gender},
location = {Hangzhou, China},
series = {ICDTE '22}
}

@inproceedings{10.1145/3629296.3629313,
author = {Xi, Feifei and Xiao, Tianyu and Li, Xiaofei and Hu, Yafei and Ma, Hongliang},
title = {The effects of a progressive scaffolding approach on middle school students'computational thinking skills and self-efficacy},
year = {2024},
isbn = {9798400709111},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3629296.3629313},
doi = {10.1145/3629296.3629313},
abstract = {Computational thinking (CT) is considered a necessary skill for the 21st century. Researchers have increasingly focused on how to effectively enhance students’ CT in programming courses. This study proposes a progressive scaffolding approach with flowcharts and visual programming codes applied to a visual programming course based on an open-source hardware platform to improve CT skills and self-efficacy in middle school students. Forty-five middle school students in grades 7 and 8 participated in this study. Both quantitative and qualitative data were collected by using CT tests, scales, and semi-structured interviews. A repeated measures analysis of variance (ANOVA) examined differences in CT skills and self-efficacy on the pre-test, mid-test, and post-test. The results indicated that the progressive scaffolding approach significantly improved middle school students’ CT skills and self-efficacy. These results reveal the effectiveness of the progressive scaffolding approach in improving the computational thinking of middle school students in a visual programming course with an open-source hardware platform, which helps to extend the design of progressive scaffolding.},
booktitle = {Proceedings of the 15th International Conference on Education Technology and Computers},
pages = {107–112},
numpages = {6},
keywords = {Computational thinking self-efficacy, Computational thinking skills, Flowchart, Progressive scaffolding approach, Visual programming},
location = {Barcelona, Spain},
series = {ICETC '23}
}

@inproceedings{10.1145/3641554.3701855,
author = {Zhang, Shan and Hutchins, Nicole M. and Barrett, Joanne R. and Botelho, Anthony F. and Israel, Maya},
title = {Introducing K-12 Teachers to Computer Science Education through an Online Micro-credential: An Experience Report},
year = {2025},
isbn = {9798400705311},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3641554.3701855},
doi = {10.1145/3641554.3701855},
abstract = {As efforts to incorporate Computer Science (CS) and Computational Thinking (CT) into K-12 classrooms continue to expand, there is a growing need for programs that prepare teachers for the effective teaching and integration of CS and CT into their instruction. An ongoing challenge is preparing current and future teachers to develop the skills and confidence needed to teach and integrate CS and CT. Micro-credentials, designed as a short, focused course, offer opportunities for teachers to build skills and confidence through targeted study. This experience report examines a self-paced online micro-credential developed and implemented within a university-based college of education. The micro-credential was designed to equip both pre-service and in-service teachers with the skills and knowledge necessary to teach and integrate CS and CT into K-12 teaching and learning. We describe the micro-credential, including its structure, sequencing, and content. We then present an exploration of teachers' experiences in the micro-credential. Findings from surveys and CS autobiographies show increases in participants' attitudes, beliefs, and perceptions toward the conceptual and technical aspects of teaching CS, with a particular focus on designing clear and actionable plans for integration. The results from this study provide valuable insights for the development of future CS- and CT-focused micro-credentials.},
booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 1},
pages = {1316–1322},
numpages = {7},
keywords = {computational thinking, computer science education, k-12 teacher, micro-credential, teacher preparation},
location = {Pittsburgh, PA, USA},
series = {SIGCSETS 2025}
}

@inproceedings{10.1145/3587103.3594187,
author = {Kaarto, Heidi and Hyyr\"{o}, Heikki and Parviainen, Marika},
title = {BeLLE: Multinational Research Collaboration on Bebras &amp; ViLLE},
year = {2023},
isbn = {9798400701399},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3587103.3594187},
doi = {10.1145/3587103.3594187},
abstract = {The annual Bebras challenge aims to grow students' interest in computer science via engaging problem solving tasks whereas ViLLE is a widely used digital learning environment with a built-in assessment tool and analytics for large number of students. The BeLLE collaboration connects the two by adapting ViLLE's assessment tool in the Bebras challenge. The goal is to analyze the interplay of computer science education and students' computational thinking development in the participating countries. BeLLE welcomes new interested countries to join the collaboration.},
booktitle = {Proceedings of the 2023 Conference on Innovation and Technology in Computer Science Education V. 2},
pages = {669},
numpages = {1},
keywords = {K-12, assessment, computational thinking, computer science},
location = {Turku, Finland},
series = {ITiCSE 2023}
}

@inproceedings{10.1145/2538862.2544312,
author = {Anton, Gabriella and Berland, Matthew},
title = {Studio K: a game development environment designed for gains in computational thinking (abstract only)},
year = {2014},
isbn = {9781450326056},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2538862.2544312},
doi = {10.1145/2538862.2544312},
abstract = {Studio K is a game design curriculum constructed to provide middle school students an engaging entry into computer science and programming. Developed at the University of Wisconsin-Madison, the program employs Microsoft's 3D programming environment, Kodu, in tandem with support and analytic tools for facilitators, and an online community that provides players with a support system. These key features are bolstered with incorporation of telemetry data gathered through design sessions that are used to improve site functioning, curriculum relevancy, and administrative tools. This program is applied across contexts, with applications in formal classrooms, informal extracurricular clubs or camps, and alternative learning environments such as library systems or home schools. Studio K provides a well-supported, unique entry into computer science in which programming knowledge becomes a tool that supports learners' goals in designing and developing games.},
booktitle = {Proceedings of the 45th ACM Technical Symposium on Computer Science Education},
pages = {723},
numpages = {1},
keywords = {computer science education, game design},
location = {Atlanta, Georgia, USA},
series = {SIGCSE '14}
}

@inproceedings{10.1145/3613904.3642229,
author = {Chen, Liuqing and Xiao, Shuhong and Chen, Yunnong and Song, Yaxuan and Wu, Ruoyu and Sun, Lingyun},
title = {ChatScratch: An AI-Augmented System Toward Autonomous Visual Programming Learning for Children Aged 6-12},
year = {2024},
isbn = {9798400703300},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3613904.3642229},
doi = {10.1145/3613904.3642229},
abstract = {As Computational Thinking (CT) continues to permeate younger age groups in K-12 education, established CT platforms such as Scratch face challenges in catering to these younger learners, particularly those in the elementary school (ages 6-12). Through formative investigation with Scratch experts, we uncover three key obstacles to children’s autonomous Scratch learning: artist’s block in project planning, bounded creativity in asset creation, and inadequate coding guidance during implementation. To address these barriers, we introduce ChatScratch, an AI-augmented system to facilitate autonomous programming learning for young children. ChatScratch employs structured interactive storyboards and visual cues to overcome artist’s block, integrates digital drawing and advanced image generation technologies to elevate creativity, and leverages Scratch-specialized Large Language Models (LLMs) for professional coding guidance. Our study shows that, compared to Scratch, ChatScratch efficiently fosters autonomous programming learning, and contributes to the creation of high-quality, personally meaningful Scratch projects for children.},
booktitle = {Proceedings of the 2024 CHI Conference on Human Factors in Computing Systems},
articleno = {649},
numpages = {19},
keywords = {Children Aged 6-12, Computational Thinking, Large Language Model, Scratch},
location = {Honolulu, HI, USA},
series = {CHI '24}
}

@inproceedings{10.1145/3700297.3700345,
author = {Zhang, Yifan and Rutherford, Teomara},
title = {Scaffolding Expertise: Evaluating Scaffolds for Block-Based Coding Among Experts and Novices},
year = {2024},
isbn = {9798400707100},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3700297.3700345},
doi = {10.1145/3700297.3700345},
abstract = {Coding for computer programming is a common way to support and assess computational thinking (CT) skills, a set of problem-solving skills essential for computer science (CS) and STEM more broadly. We designed a coding platform, Fox and Field, to determine what kinds of scaffolds can encourage novice coders to behave more like experts. We compared actions between 221 upper-division undergraduate CS/engineering (expert, n=106) and social science (novice, n=115) majors randomized to scaffolding conditions from four universities in the United States. Overall, experts used statistically significantly more practices aligned with CT skills, such as those that increased code efficiency (e.g., non-right angle turns, loops). This difference disappeared when novices were scaffolded by being told to use fewer codes or by priming with critical features. Both experts and novices were equally likely to be swayed by purposefully distracting features within the platform, such as a drawn path to deflect them from the most efficient solution. Results present initial evidence regarding which features of coding platforms can direct students to exercise CT-linked practices, leading to recommendations regarding platform development to better support learning.},
booktitle = {Proceedings of the 2024 International Symposium on Artificial Intelligence for Education},
pages = {277–282},
numpages = {6},
keywords = {computational thinking, game-based learning, scaffolding},
location = {
},
series = {ISAIE '24}
}

@inproceedings{10.1145/3626253.3633421,
author = {Perrone Smith, Corrina and Repenning, Nadia},
title = {Moving Beyond Game Design: Building Teacher Confidence with Scientific Modeling by Transitioning from Game Design to EcoSystem Programming},
year = {2024},
isbn = {9798400704246},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3626253.3633421},
doi = {10.1145/3626253.3633421},
abstract = {Scalable Game Design (SGD) instruction, vetted and researched over more than a decade, enables educators with little or no programming experience to teach students to program games with AgentCubes. SGD has been used successfully with learners from upper elementary grades to high school to motivate and teach computer science and STEM topics, including sophisticated techniques such as Artificial Intelligence.The concepts of Scalable Game Design (SGD), and the tools for Computational Thinking Patterns (CTPs), and Computational Thinking Pattern Assessment (CTPA) are directly applicable to satisfying Upper Elementary and Middle School CS and Science Standards. Common roadblocks teachers encounter with transitioning from game design to simulation programming will be explained with solutions, including classroom management tools, tutorial materials, and pedagogy will be presented.},
booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1904},
numpages = {1},
keywords = {computational thinking, computational thinking pattern assessment, computational thinking patterns, cs middle school, cs upper elementary, programming, scalable game design, stem, student motivation},
location = {Portland, OR, USA},
series = {SIGCSE 2024}
}

@inproceedings{10.1145/3544548.3581261,
author = {Rocha, Filipa and Correia, Filipa and Neto, Isabel and Pires, Ana Cristina and Guerreiro, Jo\~{a}o and Guerreiro, Tiago and Nicolau, Hugo},
title = {Coding Together: On Co-located and Remote Collaboration between Children with Mixed-Visual Abilities},
year = {2023},
isbn = {9781450394215},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3544548.3581261},
doi = {10.1145/3544548.3581261},
abstract = {Collaborative coding environments foster learning, social skills, computational thinking training, and supportive relationships. In the context of inclusive education, these environments have the potential to promote inclusive learning activities for children with mixed-visual abilities. However, there is limited research focusing on remote collaborative environments, despite the opportunity to design new modes of access and control of content to promote more equitable learning experiences. We investigated the tradeoffs between remote and co-located collaboration through a tangible coding kit. We asked ten pairs of mixed-visual ability children to collaborate in an interdependent and asymmetric coding game. We contribute insights on six dimensions - effectiveness, computational thinking, accessibility, communication, cooperation, and engagement - and reflect on differences, challenges, and advantages between collaborative settings related to communication, workspace awareness, and computational thinking training. Lastly, we discuss design opportunities of tangibles, audio, roles, and tasks to create inclusive learning activities in remote and co-located settings.},
booktitle = {Proceedings of the 2023 CHI Conference on Human Factors in Computing Systems},
articleno = {606},
numpages = {14},
keywords = {Accessible, Children, Collaboration, Computational thinking, Mixed-visual ability, Robot, Tangible, Visually impaired},
location = {Hamburg, Germany},
series = {CHI '23}
}

@inproceedings{10.1145/3430665.3456307,
author = {Musaeus, Line Have and Musaeus, Peter},
title = {Computing and Gestures in High School Biology Education},
year = {2021},
isbn = {9781450382144},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3430665.3456307},
doi = {10.1145/3430665.3456307},
abstract = {This video-study explored the types of gestures used by students as they engage in learning activities of computational thinking and modeling in Biology. Participants were twenty-eight students (twenty female, eight male) randomly sampled from five different High School Biology classes. Students were given the educational task of modeling protein synthesis in NetLogo. The design was a concurrent mixed-methods study. The study was situated in a constructivist and embodied cognitive perspective. The objective of the study was to develop a taxonomy table of gestures versus elements of computational thinking. Results showed a significant difference in the distribution of gestures across five concepts of computational thinking. Students used gestures adaptively in order to learn concepts of computational thinking. The findings indicate that students benefit from participating in a learning community where gesturing is seen as an important means of engaging with computing. The taxonomy is a first step towards linking computational thinking concepts with gestures as a means of better understanding student's engagement with computing.},
booktitle = {Proceedings of the 26th ACM Conference on Innovation and Technology in Computer Science Education V. 1},
pages = {533–539},
numpages = {7},
keywords = {computational biology education, computational thinking, computing education, embodied cognition, gestures, mixed-methods study, non-verbal communication},
location = {Virtual Event, Germany},
series = {ITiCSE '21}
}

@inproceedings{10.1145/3696762.3698039,
author = {Vergara, Katherine},
title = {A Physical Computing Workshop to Engage Girls from Low-Income Backgrounds},
year = {2024},
isbn = {9798400712784},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3696762.3698039},
doi = {10.1145/3696762.3698039},
abstract = {The persistent gender gap in computer science, especially among women from low-income backgrounds, continues to limit diversity and innovation within the technological sector. This underrepresentation also restricts access to career paths that can enhance social mobility, particularly for women in developing countries. Physical computing offers a hands-on approach that can improve programming skills and computational thinking through interaction with tangible hardware. This research focuses on developing a short physical computing workshop tailored to young girls from low-income communities. The study combines education, tangible interfaces, and coding. Through a series of classroom-based studies and laboratory experiments, this PhD work will assess the impact of the workshop on self-efficacy and learning in programming and computational thinking. The anticipated contributions of this research include insights into the effectiveness of tangible, user-friendly physical computing workshops in increasing engagement among underrepresented groups in computer science.},
booktitle = {Companion Proceedings of the 2024 Conference on Interactive Surfaces and Spaces},
pages = {1–3},
numpages = {3},
keywords = {CS Education, Physical Computing, girls},
location = {Vancouver, BC, Canada},
series = {ISS Companion '24}
}

@inproceedings{10.1145/3545947.3576338,
author = {Ottenbreit-Leftwich, Anne and Moore, Tamara J. and Tank, Kristina M. and Kim, Jiyoung and Fagundes, B\'{a}rbara and Chu, Lin and Wafula, Zarina},
title = {Rethinking Circle Time: Development of K-2 CT Literacy Integrated Curriculum},
year = {2023},
isbn = {9781450394338},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3545947.3576338},
doi = {10.1145/3545947.3576338},
abstract = {Students can begin to lose interest in CS as early as 2nd grade, indicating the importance of engaging students in CS as early as possible. This study examined the integration of computational thinking (CT) into literacy activities in early childhood education (K-2). We describe the co-design process of developing computational thinking literacy integrated curriculum for K-2, and preliminary results of K-2 student engagement in CT and literacy activities},
booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1394},
numpages = {1},
keywords = {co-design, computational thinking, early childhood, literacy},
location = {Toronto ON, Canada},
series = {SIGCSE 2023}
}

@inproceedings{10.1145/3587103.3594142,
author = {Landman, Martina},
title = {Impact and Achievements of School Workshops as a University Outreach Activity in Computer Science},
year = {2023},
isbn = {9798400701399},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3587103.3594142},
doi = {10.1145/3587103.3594142},
abstract = {With an ever increasing number of computing initiatives trying to engage and motivate children of all ages, we need to ask ourselves what these initiatives achieve and deliver. We therefore intend to investigate whether participation in a workshop setting changes students' approaches to solving selected computational thinking problems and extends their repertoire of problem-solving strategies. Methods used will include video analysis to collect data on the solutions and strategies, and a design-based research approach to create an effective task design for the workshop activities given to the students.},
booktitle = {Proceedings of the 2023 Conference on Innovation and Technology in Computer Science Education V. 2},
pages = {619–620},
numpages = {2},
keywords = {computational thinking, hands-on activities, problem solving skills, school activities, school workshops, teaching algorithms},
location = {Turku, Finland},
series = {ITiCSE 2023}
}

@inproceedings{10.1145/3626253.3635579,
author = {Albert, Jennifer and Joswick, Candace and Joshi, Deepti and Jocius, Robin and Blanton, Melanie and Petrulis, Robert},
title = {Elementary Teachers Engaging with Learning Trajectories to Create Professional Learning Goals around Computer Science Integration},
year = {2024},
isbn = {9798400704246},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3626253.3635579},
doi = {10.1145/3626253.3635579},
abstract = {In this poster, we present our efforts to engage elementary teachers with learning trajectories as a tool for developing both their own and their students' comprehension of computational thinking (CT) and strategies for integrating CT learning in their classroom. Eleven teachers, who voluntarily joined a teacher professional development (PD) program to develop teacher leaders for CT integration in the elementary context, attended a one-day PD session aimed at reviewing their knowledge of CT, participating in CT-infused lessons, and engaging with CT learning trajectories. Over the next year, teachers will participate in monthly virtual PD to continue to grow both their CT content knowledge and pedagogical knowledge. Our goal is to develop these teachers as teacher leaders who will support others as they integrate CT. This poster will show our current progress on CT learning trajectories and teacher leaders' responses to the tool.},
booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1554–1555},
numpages = {2},
keywords = {computational thinking, elementary computer science education, learning trajectories, teacher professional development},
location = {Portland, OR, USA},
series = {SIGCSE 2024}
}

@inproceedings{10.1145/3593663.3593677,
author = {Willert, Nico and Eriksson, Janik},
title = {Towards a feature-based didactic framework for generating individualized programming tasks for an e-learning environment},
year = {2023},
isbn = {9781450399562},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3593663.3593677},
doi = {10.1145/3593663.3593677},
abstract = {Adaptive programming tasks are a promising approach for personalized learning that adapts to each student’s unique needs and abilities. However, developing effective adaptive programming tasks can be challenging, particularly when it comes to selecting the appropriate changes and adapting the difficulty of the exercise. In this paper, we propose a model for tracking student knowledge and adapting programming exercises to guide the selection and implementation of task features. Our model combines aspects of cognitive load, computational thinking and feature-oriented software product line engineering to identify core and optional features, so that they can be used in conjunction to adapt to the specific needs and abilities of each student. We provide an overview over the insights gained from an exploratory study with students. To support the creation process of feature-based programming tasks, we present an approach using a template-based generator.},
booktitle = {Proceedings of the 5th European Conference on Software Engineering Education},
pages = {246–255},
numpages = {10},
keywords = {adaptivity, assessment, computational thinking, instructional design},
location = {Seeon/Bavaria, Germany},
series = {ECSEE '23}
}

@article{10.5555/1791129.1791144,
author = {Toth, David},
title = {Flipping coins: an activity for introducing computational thinking to non-computer science majors: demonstration},
year = {2010},
issue_date = {June 2010},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {25},
number = {6},
issn = {1937-4771},
abstract = {In this demo, I will present an activity that I use to introduce computational thinking in my non-majors course and outreach talks at high schools. I do this by first talking about what modeling and simulation are and why they are useful. Following this explanation, I introduce a variant of a problem about Alice and Bob. In the original problem, Alice and Bob take turns flipping a coin until one of them gets heads and wins. If Alice goes first, what is the probability that she wins? In class, I introduce this variant of the problem: "Bob suggests to Alice that they play a game. They will take turns flipping a coin until one of them wins by getting heads. The winner will then receive a dollar from the loser. If Bob says he will always let Alice go first, should Alice play the game?" While this problem is trivial for those comfortable with basic probability and familiar with geometric sequences, most of my students who are not computer science majors are not comfortable with math. Thus, I explain that although the problem can be solved with some math, instead we should first model the problem. Once we have modeled the problem, I have my students get some intuition by pairing off and having each pair play the game 20 times. I collect the results and discuss how so few trials are not sufficient to draw conclusions. Finally, I run a simulation that runs the game one million times and demonstrates that Alice should win 2/3 of the time and thus should play the game.},
journal = {J. Comput. Sci. Coll.},
month = jun,
pages = {73},
numpages = {1}
}

@article{10.5555/3717781.3717798,
author = {Dogan, Gulustan and Sahin, Elif and Wilkinson, Catherine Fay and Moody, Amelia K. and Song, Yang},
title = {BlueAI: Designing Artificial Intelligence for Environment Science and Climate Change Learning Experiences for K12 Students},
year = {2024},
issue_date = {November 2024},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {40},
number = {5},
issn = {1937-4771},
abstract = {The subject of teaching artificial intelligence (AI) in K-12 settings is rapidly expanding and will significantly affect computer education. While AI is currently a required part of computing curricula at universities, there are unique challenges in incorporating AI into K-12 education. The goal of BlueAI is to prepare K-12 educators to use game-based lessons to teach computational thinking, AI, and computer science skills that will interest children while incorporating important environmental and marine science subjects. We conducted assessments where we taught lessons at two different schools, and presented our findings.},
journal = {J. Comput. Sci. Coll.},
month = nov,
pages = {127–137},
numpages = {11}
}

@inproceedings{10.1145/3478431.3499333,
author = {Yadav, Aman and Israel, Maya and Bouck, Emily and Cobo, Alexis and Samuels, John},
title = {Achieving CSforAll: Preparing Special Education Pre-service Teachers to Bring Computing to Students with Disabilities},
year = {2022},
isbn = {9781450390705},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3478431.3499333},
doi = {10.1145/3478431.3499333},
abstract = {While computational thinking has gained popularity in K-12 schools to increase access to computing tools and practices, there is still limited understanding on how to broaden participation of students with disabilities in computational thinking (CT). One approach to increasing access to computing to students with disabilities is to educate future special education teachers to bring CT into their instruction. This study examined the influence of integrating CT into assistive technology course for special education pre-service teachers. Our results suggest that integrating CT into special educa- tion teacher preparation coursework can have a positive impact on how pre-service teachers see the value of bringing computational practices to students with disabilities.},
booktitle = {Proceedings of the 53rd ACM Technical Symposium on Computer Science Education - Volume 1},
pages = {196–201},
numpages = {6},
keywords = {computational thinking, pre-service teachers},
location = {Providence, RI, USA},
series = {SIGCSE 2022}
}

@inproceedings{10.1145/3587103.3594181,
author = {Monahan, Robert and Vandenberg, Jessica and Gupta, Anisha and Smith, Andy and Elsayed, Rasha and Fox, Kimkinyona and Hubbard Cheuoua, Aleata and Ringstaff, Cathy and Minogue, James and Oliver, Kevin and Mott, Bradford},
title = {Multimodal CS Education Using a Scaffolded CSCL Environment},
year = {2023},
isbn = {9798400701399},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3587103.3594181},
doi = {10.1145/3587103.3594181},
abstract = {There is a growing need for 21st-century workers to be digitally literate and to possess computational thinking and collaborative problem-solving skills. Computer-supported collaborative learning (CSCL) focused on computational thinking can guide students toward the co-development of these skills. In this work, we present our approach to integrating virtual and physical learning modalities into InfuseCS, a CSCL environment. InfuseCS uses problem-based learning scenarios to situate upper elementary school students (ages 8 to 11) in a CSCL setting to foster their computational thinking and science knowledge construction as they collaborate to create digital narratives.},
booktitle = {Proceedings of the 2023 Conference on Innovation and Technology in Computer Science Education V. 2},
pages = {645},
numpages = {1},
keywords = {CSCL, collaboration, digital narrative, elementary, makerspace},
location = {Turku, Finland},
series = {ITiCSE 2023}
}

@inproceedings{10.1145/3649405.3659486,
author = {Dion, Lisa and Neumann, Maureen D.},
title = {Creating Art with JavaScript: A Bridget Riley Inspired Coding Lesson},
year = {2024},
isbn = {9798400706035},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3649405.3659486},
doi = {10.1145/3649405.3659486},
abstract = {The purpose of this poster presentation is to demonstrate how we can bring art into computational thinking and computer programming spaces. Op-Artist Bridget Riley used geometrical shapes and patterns to express motion across the canvas. The example of Bridget Riley's art inspired U.S. middle and high school students to express their own artistic motions in unplugged and computer coded learning activities.This interdisciplinary lesson began with introducing Bridget Riley's artwork and how she arranged different triangles to create the illusion of movement [1]. Students then recreated one of her works by drawing triangles on graph paper with pencils, mimicking Riley's black-and-white compositions. After this unplugged activity, students transferred this understanding of drawing different triangles to the computer using JavaScript. Students used the gridlines behind their drawn triangles to map the pixel coordinates on a computer screen. Students used commands such as fill to set the color of the triangles and p5js.com's built-in triangle command to draw the triangles by specifying the (x, y) coordinates of each of the three vertices on the computer screen. Students then customized and expanded their code to express their interests (e.g., by picking different colors or effects) and to make it interactive for the user (e.g., by having the triangles' top vertices move left and right with the cursor of the screen). By the end of the lesson, each student created different works of Bridget Riley inspired art through their written code.},
booktitle = {Proceedings of the 2024 on Innovation and Technology in Computer Science Education V. 2},
pages = {795},
numpages = {1},
keywords = {arts integration, computational thinking, computer science education, javascript programming language},
location = {Milan, Italy},
series = {ITiCSE 2024}
}

@inproceedings{10.1145/3605468.3609772,
author = {Vielsack, Annika and Klein, Miriam and Niesenhaus, Thomas and Ulbrich, Mattias},
title = {The ’Choc-Machine’ - an Introduction to Algorithmic Thinking using Finite State Machines},
year = {2023},
isbn = {9798400708510},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3605468.3609772},
doi = {10.1145/3605468.3609772},
abstract = {Computational thinking, in particular its central component algorithmic thinking, is one of the more important skills in the 21st century. Therefore it should be taught at school. This work proposes a low-threshold course to introduce algorithmic thinking to students in lower secondary education using the concept of finite state machines. The course is action-based and transitions from unplugged to plugged and even into the real world while sticking to the same topic and using the same visualisations throughout the entire course. It revolves around a chocolate vending machine, the Choc-Machine, which teaches the basics of finite state machines and eventually enables the students to design and formulate their own algorithms that then drive a physical hardware machine.},
booktitle = {Proceedings of the 18th WiPSCE Conference on Primary and Secondary Computing Education Research},
articleno = {25},
numpages = {2},
keywords = {algorithmic thinking, automata, chocolate, education, finite state machines, modeling and design, teaching concept},
location = {Cambridge, United Kingdom},
series = {WiPSCE '23}
}

@inproceedings{10.1145/3545947.3576357,
author = {Gardner-McCune, Christina and Jimenez, Yerika and Magda, David and Kulkarni, Abhishek and Chu, Sharon},
title = {Towards an Adaptable Curriculum-Driven Block-based Learning Environment},
year = {2023},
isbn = {9781450394338},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3545947.3576357},
doi = {10.1145/3545947.3576357},
abstract = {In this poster, we present the design of a browser-based Arduino programming tool, CASMM, to support computational thinking and making in science classrooms. This tool allows for unique integration of research tools, lesson planning, and scaffolding for learning computational thinking concepts and block-based programming. This poster will describe four key features of a block-based LMS: (1) reduced-scoped programming toolbox, (2) block locking, (3) lesson plans and starter code templates; and (4) low-tech code replay for researchers. Through discussion of this tool, we aim to catalyze conversations about integrating new scaffolding techniques into block-based programming environments to better support classroom use and research.},
booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1414},
numpages = {1},
keywords = {arduino, block-based programming environment, computational thinking, computing education, k-12, learning mangement system (lms), programming, scaffolding, science integration},
location = {Toronto ON, Canada},
series = {SIGCSE 2023}
}

@inproceedings{10.1145/3627217.3631584,
author = {Yadav, Aman},
title = {Computing Education for Primary Schooling: Developing Teacher Knowledge},
year = {2023},
isbn = {9798400708404},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3627217.3631584},
doi = {10.1145/3627217.3631584},
abstract = {The push for computer science education to primary schooling requires training teachers and developing their knowledge to teach computing. However, computing goals within primary schooling need to move away from teaching coding to curricular and pedagogical goals teachers have. In this talk, Dr. Aman Yadav will discuss how to support teachers to see the relevance of computing to their core curriculum and how teachers take advantage of computation to support their core instruction. Using classroom examples from his work with elementary teachers, he will share evidence-based ways to develop teachers’ competencies and skills to integrate computational thinking in their classrooms. Dr. Yadav will also discuss how teachers use computational thinking as a way to explicitly teach metacognitive strategies to their students and improve their core learning outcomes.},
booktitle = {Proceedings of the 16th Annual ACM India Compute Conference},
pages = {3},
numpages = {1},
location = {Hyderabad, India},
series = {COMPUTE '23}
}

@inproceedings{10.1145/3649405.3659515,
author = {Nolan, Keith and O'Farrell, Amanda and Quille, Keith and Nolan, Karen and Faherty, Roisin and Jaiswal, Rajesh and Hensman, Svetlana and Collins, Michael and Harte, Miriam and Becker, Brett A.},
title = {Enabling Digital Technology in Primary Schools},
year = {2024},
isbn = {9798400706035},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3649405.3659515},
doi = {10.1145/3649405.3659515},
abstract = {In 2024, the National Council for Curriculum and Assessment (NCCA) in Ireland released a draft curriculum which intends to introduce Digital Technology (DT) into the Primary School Curriculum. While this is a positive step in terms of Computer Science education pipeline, the teachers who will be charged with delivering this are, for the most part, completely out-of-field and anecdotally are lacking in confidence in delivering DT in the classroom. We are proposing a project to enhance teachers competencies around DT concepts (skills, processes and dispositions). The project plans to develop targeted activities for teachers to deliver DT. These activities will incorporate real-world applications of DT, computational thinking, problem-solving, and creative skills all delivered through play-based pedagogies. To ensure that no teacher or school will be negatively impacted due to technological requirements, AWS In Communities are going to send every Primary School in Ireland a Digital Technology kit comprising of a plugged device and an unplugged computational thinking game.},
booktitle = {Proceedings of the 2024 on Innovation and Technology in Computer Science Education V. 2},
pages = {823},
numpages = {1},
keywords = {curriculum change, digital technology, teacher professional development},
location = {Milan, Italy},
series = {ITiCSE 2024}
}

@inproceedings{10.1145/3661904.3661925,
author = {Zhao, Chenguang and Fang, Qizhi and Sun, Yanpeng},
title = {Research and Design of Blended Learning of EDA Technology Course Based on CDIO},
year = {2024},
isbn = {9798400717895},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3661904.3661925},
doi = {10.1145/3661904.3661925},
abstract = {In view of the strong practical characteristics of EDA(Electronic Design Automation) technology and the insufficient integration between courses, the concept and method of CDIO(Conceive, Design, Implement, Operate) are introduced to deepen the reform of blended learning in EDA course . Taking students as the main body to seek solutions to the problem, improve students' ability to solve complex engineering problems. Designing the teaching means of the "EDA Technology" course, and explore its implementation process, teaching measures and evaluation methods. The case study of CDIO teaching shows that the blended teaching method trained the computational thinking, which integrates the dual experience of traditional classroom and online resource, has reasonable assessment standard, and better teaching objectives than the original teaching method, achieving good teaching results, and continuously improving the blended learning effect of EDA technology course. Besides, in the teaching of undergraduate professional courses, teachers can use information technology to reconstruct the precision teaching process, obtain real-time data of the teaching process through the classification and decomposition of teaching objectives, the classification and construction of teaching resources, and the continuous evaluation of learning objects, and implement precise teaching intervention according to the data processing results, so as to maximize the learning effect of students.},
booktitle = {Proceedings of the 2024 10th International Conference on Education and Training Technologies},
pages = {16–21},
numpages = {6},
keywords = {Blended Learning, CDIO, Computational Thinking, EDA technology},
location = {Macau, China},
series = {ICETT '24}
}

@inproceedings{10.1145/3287324.3287346,
author = {Peteranetz, Markeya S. and Soh, Leen-Kiat and Ingraham, Elizabeth},
title = {Building Computational Creativity in an Online Course for Non-Majors},
year = {2019},
isbn = {9781450358903},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3287324.3287346},
doi = {10.1145/3287324.3287346},
abstract = {In recent years, a growing number of universities have begun to offer specialized courses as a way to make computer science (CS) more accessible to students with little or no prior CS or programming experience, especially non-CS majors. One of the ways courses have been modified for these students is by supplementing the core problem solving and coding aspects of the curriculum with explicit instruction on computational thinking principles. These "computational thinking" courses are promising in that they ground computational thinking in discipline-specific contexts and emphasize application of computational principles. However, there is little empirical research evaluating the extent to which students learn computational thinking from these courses. The purpose of this study was to evaluate the impact of an online Computational Creativity course on students' computational thinking skills, creative competencies, and self-efficacy. Students in the Computational Creativity course were predominantly non-CS majors, and they completed four Computational Creativity Exercises (CCEs) that have previously been shown to improve learning and achievement. Results indicate that the Computational Creativity course was effective in increasing students' computational thinking knowledge and self-efficacy for applying computational thinking in their fields, but it did not have an impact on students' creative competencies. Additionally, students' reactions to the course and the CCEs were mostly positive. Thus, this study provides initial evidence that non-CS majors can learn computational thinking through the online Computational Creativity course.},
booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
pages = {442–448},
numpages = {7},
keywords = {collaborative learning, computational creativity, computational thinking, creativity, non-majors},
location = {Minneapolis, MN, USA},
series = {SIGCSE '19}
}

@inproceedings{10.1145/3544548.3580981,
author = {Dietz, Griffin and Tamer, Nadin and Ly, Carina and Le, Jimmy K and Landay, James A.},
title = {Visual StoryCoder: A Multimodal Programming Environment for Children’s Creation of Stories},
year = {2023},
isbn = {9781450394215},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3544548.3580981},
doi = {10.1145/3544548.3580981},
abstract = {Computational thinking (CT) education reaches only a fraction of young children, in part because CT learning tools often require expensive hardware or fluent literacy. Block-based programming environments address these challenges through symbolic graphical interfaces, but users often need instructor support to advance. Alternatively, voice-based tools provide direct instruction on CT concepts but can present memory and navigation challenges to users. In this work, we present Visual StoryCoder, a multimodal tablet application that combines the strengths of each of these approaches to overcome their respective weaknesses. Visual StoryCoder introduces children ages 5–8 to CT through creative storytelling, offers direct instruction via a pedagogical voice agent, and eases use through a block-like graphical interface. In a between-subjects evaluation comparing Visual StoryCoder to a leading block-based programming app for this age group (N = 24), we show that Visual StoryCoder is more understandable to independent learners, leads to higher-quality code after app familiarization, and encourages personally meaningful projects.},
booktitle = {Proceedings of the 2023 CHI Conference on Human Factors in Computing Systems},
articleno = {96},
numpages = {16},
keywords = {children, computational thinking, multimodal interface, storytelling},
location = {Hamburg, Germany},
series = {CHI '23}
}

@inproceedings{10.1145/3628516.3659855,
author = {Liu, Yu-Yu},
title = {Computational Empowerment in K-12 Education: Formative Assessment Strategies for Educational and Design Practices through Dialogic Learning Approaches},
year = {2024},
isbn = {9798400704420},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3628516.3659855},
doi = {10.1145/3628516.3659855},
abstract = {In response to the evolving digitized society, it is crucial to equip children with essential skills for critically and reflectively navigating this environment. Child-Computer Interaction (CCI) researchers have established rich research to advance educational practices and technology development for computational thinking education and introduced a new concept of computational empowerment. However, the absence of effective formative assessment in the research and practices within computational education hinders the facilitation of continuous learning and the enhancement of computational empowerment. Considering this, this doctoral study will explore the core research question of how to develop formative assessment strategies for computational empowerment through the lens of dialogic learning. The research aims to conceptualize a research-based formative assessment model for educators, formative assessment design principles for computational education toolkits and provide instances through illustrative case studies. The study includes literature reviews, learning intervention case studies and participatory design workshops, stimulating discussions and innovative formative assessment strategies for computational empowerment within the CCI community and among practitioners. This doctoral study addresses the need for effective formative assessment in computational education to understand learning, foster learning and enhance computational empowerment in wider implementation. The practical research outcomes will benefit toolkit designers and educators, while the theoretical contributions aim to fill gaps of formative assessment in CCI research and pedagogies, advancing the broader landscape of computational education.},
booktitle = {Proceedings of the 23rd Annual ACM Interaction Design and Children Conference},
pages = {976–979},
numpages = {4},
keywords = {Computational empowerment, K-12 education, computing education, formative assessment},
location = {Delft, Netherlands},
series = {IDC '24}
}

@article{10.5555/1791129.1791164,
author = {Morreale, Patricia and Joiner, David and Chang, George},
title = {Connecting undergraduate programs to high school students: teacher workshops on computational thinking and computer science},
year = {2010},
issue_date = {June 2010},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {25},
number = {6},
issn = {1937-4771},
abstract = {The high school preparation of future computer science undergraduates can be varied and depends strongly on the experiences and subject knowledge of their high school teachers. In an effort to connect undergraduate computer science programs to high schools for future student success in college, a public comprehensive university is hosting high school teacher workshops to help teachers enhance their teaching effectiveness. This has established a pathway from the university to the high school. Pre- and post- workshop surveys show that these teacher workshops have changed the perceptions high school teachers had regarding careers in computer science.},
journal = {J. Comput. Sci. Coll.},
month = jun,
pages = {191–197},
numpages = {7}
}

@inproceedings{10.1145/3626253.3635569,
author = {Burke, Quinn and Coenraad, Merijke and Rangel, Alessandra and Dunbar, Kyle and Mills, Kelly},
title = {Integrating &amp; Implementing K-12 Computing Pathways across Six School Districts-Challenges &amp; Opportunities},
year = {2024},
isbn = {9798400704246},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3626253.3635569},
doi = {10.1145/3626253.3635569},
abstract = {This SIGCSE poster presents a landscape study of six school districts across six different states in terms of their individual teachers' and administrators' capacity to integrate and implement computational thinking (CT) into their own schools and classrooms. This landscape evaluation represents the baseline start of a wider, four-year national study around district capacity to collaboratively develop consistent and comprehensive K-12 computing pathways for their students and schools. The early landscape work we present here not only represents a starting point for comparing district educators' comprehension of CT (and computer science [CS]), but also acts as an early indicator as to what extent K-12 computing is a school and district-based priority, and to what degree teachers feel they have the capacity to meaningfully implement it. This poster relies on two data sources in a mixed-methods design: Districtwide surveys of teachers and administrators on their familiarity and prioritization of CT, coupled with subsequent hour-long focus group discussions with educators to expand upon their respective district landscape survey responses. Results point to all districts perceiving the broad applicability of CT as a skill set and its integrative potential in a range of subjects. Yet in terms of classroom implementation, teachers find such CT integration decidedly less clear, recognizing it to be a priority but also reporting as less confident about creating their own curricular materials, where CT situates with their district's ongoing initiatives, and where they can find curricular resources and tools specific to their own areas of curricular integration.},
booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1582–1583},
numpages = {2},
keywords = {computational thinking, computing pathways, k-12 education},
location = {Portland, OR, USA},
series = {SIGCSE 2024}
}

@inproceedings{10.1145/3408877.3432444,
author = {Repenning, Alexander and Basawapatna, Ashok},
title = {Smacking Screws with Hammers: Experiencing Affordances of Block-based Programming through the Hourglass Challenge},
year = {2021},
isbn = {9781450380621},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3408877.3432444},
doi = {10.1145/3408877.3432444},
abstract = {Block-based programming languages effectively address syntactic difficulties allowing users to more easily create code. Syntactic code support is no doubt a crucial step in enabling the next generation of programmers. However, in what other ways do these tools support the computational thinking (CT) process? For example, how is CT supported in both the semantic and pragmatic levels? Most users do not just want to write code?they want to create interesting artifacts such as video games, simulations, stories and robots. No doubt that users must code to build these artifacts, but just as important, though often overlooked, is that users must also have an understanding of tool affordances to effectively build these artifacts. The position presented in this paper is that the comprehension of affordances is essential to each stage of the computational thinking process. To that end, we introduce the Hourglass Challenge as a way for students to experience affordances through a programming challenge based on mis-aligned tools and problems. The results from a study, with 54 preservice elementary school teachers, indicate that the affordances of tools can have profound consequences on computational thinking. For instance, the affordances various tools provide can be the difference between creating a simulation versus an animation. But just as hammers are not intrinsically better tools than screwdrivers, the contribution of this position paper is not to compare tools, but to promote efforts that enable learners to develop a better understanding of computational thinking tool affordances as essential mediators between problems and tools.},
booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
pages = {267–273},
numpages = {7},
keywords = {affordances, animations, block-based programming, computational thinking, computational thinking tools, simulations},
location = {Virtual Event, USA},
series = {SIGCSE '21}
}

@inproceedings{10.1145/3478432.3499076,
author = {Coenraad, Merijke and Burke, Quinn and Ruiz, Pati and Mills, Kelly and Roschelle, Jeremy},
title = {Developing Inclusive Computing with the CT Pathways Toolkit},
year = {2022},
isbn = {9781450390712},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3478432.3499076},
doi = {10.1145/3478432.3499076},
abstract = {To promote inclusion of students with marginalized identities, districts need to develop comprehensive inclusive computing pathways across grade levels. Working in a Research Practice Partnership (RPP), we have co-designed a district-facing toolkit to support the creation of these pathways. In this poster, we present both the CT Pathways Toolkit and results from four districts piloting it. We examine the experiences of the pilot districts and analyze trends in the toolkit's use. This work expands knowledge about building inclusive computing pathways and computational thinking (CT) integration within K-12 schools.},
booktitle = {Proceedings of the 53rd ACM Technical Symposium on Computer Science Education V. 2},
pages = {1089},
numpages = {1},
keywords = {computational thinking, computing pathways, k-12 education},
location = {Providence, RI, USA},
series = {SIGCSE 2022}
}

@inproceedings{10.1145/3699538.3699588,
author = {Pereira Cipriano, Bruno and Silva, Miguel and Correia, Rodrigo and Alves, Pedro},
title = {Towards the Integration of Large Language Models and Automatic Assessment Tools: Enhancing Student Support in Programming Assignments},
year = {2024},
isbn = {9798400710384},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3699538.3699588},
doi = {10.1145/3699538.3699588},
abstract = {The rise of Large Language Models (LLMs) has sparked discussion in Computer Science Education (CSE) due to their ability to generate code from text prompts. Students may rely on these tools, neglecting core skills like computational thinking and program design. Thus, it’s crucial to responsibly integrate them into computer science courses.To address this, we integrated an open-source Automatic Assessment Tool with GPT, enabling students to receive LLM assistance on their programming assignments. This tool can be adopted and improved by educators, promoting more responsible integration of LLMs in CSE.},
booktitle = {Proceedings of the 24th Koli Calling International Conference on Computing Education Research},
articleno = {52},
numpages = {2},
keywords = {large language models, automatic assessment tools, feedback},
location = {
},
series = {Koli Calling '24}
}

@inproceedings{10.1145/3529372.3530976,
author = {Barboza, Luiz},
title = {Thesis plan: the effect of data science teaching for non-STEM students},
year = {2022},
isbn = {9781450393454},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3529372.3530976},
doi = {10.1145/3529372.3530976},
abstract = {In recent years, the interest in Data Science has increased in both industry and academia. Historically, access to this discipline has been redirected to STEM professionals. However, the ubiquity of cloud computing and the simplicity of modern programming languages such as Python and R have enabled non-STEM students and professionals to leverage it especially to analyze data. Similarly, with what has been conveyed with computational thinking in terms of enabling non-STEM students with com technological competencies, this article aims to present a proposal for improving the teaching of data science specifically to non-stem students.},
booktitle = {Proceedings of the 22nd ACM/IEEE Joint Conference on Digital Libraries},
articleno = {48},
numpages = {2},
keywords = {computational thinking, data science, non-STEM},
location = {Cologne, Germany},
series = {JCDL '22}
}

@inproceedings{10.1145/3459990.3460706,
author = {Grizioti, Marianthi and Kynigos, Chronis},
title = {Children as players, modders, and creators of simulation games: A design for making sense of complex real-world problems: Children as players, modders and creators of simulation games},
year = {2021},
isbn = {9781450384520},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3459990.3460706},
doi = {10.1145/3459990.3460706},
abstract = {Could computational thinking be a strong tool for children to understand complex 21st-century issues? Our knowledge is limited since most designs focus on sequential programming and on the cognitive aspects of computational thinking. This paper discusses a design that integrates ill-structured socio-scientific issues with programming and other computational concepts, in a playful and meaningful context. The design, called ChoiCo (Choices with Consequences), builds on the idea of "integrated affordances" that enables layered computational access, allowing children to be players and designers of choice-driven simulation games. We elaborate on a design-based research that studied children's activity, who progressively played, modified and co-created games that simulated real-world issues. We describe four strategies developed by the children to make sense of the simulated problems through a systems thinking approach. We also discuss how they formulated these strategies by utilizing the affordances of map design, data manipulation and coding.},
booktitle = {Proceedings of the 20th Annual ACM Interaction Design and Children Conference},
pages = {363–374},
numpages = {12},
keywords = {block-based programming, computational thinking, game-based learning, real-world problems, simulation games, systems thinking},
location = {Athens, Greece},
series = {IDC '21}
}

@inproceedings{10.1145/3626253.3635547,
author = {Bumbacher, Engin and Brender, J\'{e}r\^{o}me and Davis, Richard Lee},
title = {A Comparative Analysis of Tools &amp; Task Types for Measuring Computational Problem-Solving},
year = {2024},
isbn = {9798400704246},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3626253.3635547},
doi = {10.1145/3626253.3635547},
abstract = {How to measure students' Computational Problem-Solving (CPS) competencies is an ongoing research topic. Prevalent approaches vary by measurement tools (e.g., interactive programming, multiple-choice tests, or programming-independent tests) and task types (e.g., debugging problems or Parson problems). However, few studies have examined the measurement tools of CPS competencies themselves: affordances and limitations of the measurement tools and how they compare, or whether different task types might elicit CPS competencies differently. Research needs to address these questions in order to better understand how to design robust, generalizable, and effective measurement tools for CPS competencies. This paper presents an exploratory study that contributes to this research direction. It is part of a larger international project to develop an open-access formative assessment platform for CPS, which includes a novel authoring tool for a wide range of task types for interactive block-based programming. We used the tool to create an interactive programming experience with multiple task types and gave it to more than 300 secondary school students from different countries. We also administered a validated multiple-choice measurement of Computational Thinking with block-based programs. We focused on task complexity as a characteristic of task type, using a classification scheme based on task design features. Comparing students' performances on tasks of different complexity and using two distinct measurement tools, we found that the multiple-choice measurement only partially predicts performance in the interactive programming task. Additionally, its predictive capacity varies significantly between task types of differing complexity.},
booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1580–1581},
numpages = {2},
keywords = {block-based programming, computational thinking and problem-solving, interactive assessment, k-12 education, mixed-effects models},
location = {Portland, OR, USA},
series = {SIGCSE 2024}
}

@inproceedings{10.1145/3328778.3372674,
author = {Bain, Connor and Wilensky, Uri},
title = {Vectors of CT-ification: Integrating Computational Activities in STEM Classrooms},
year = {2020},
isbn = {9781450367936},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3328778.3372674},
doi = {10.1145/3328778.3372674},
abstract = {While the Next Generation Science Standards set an expectation for developing computer science and computational thinking (CT) practices in the context of science subjects, it is an open question as to how to create curriculum and assessments that develop and measure these practices. In this poster, we show one possible solution to this problem: to introduce students to computer science through infusing computational thinking practices ("CT-ifying") science classrooms. To address this gap, our group has worked to explicitly characterize core CT-STEM practices as specific learning objectives and we use these to guide our development of science curriculum and assessments. However, having these learning objectives in mind is not enough to actually create activities that engage students in CT practices. We have developed along with science teachers, a strategy of examining a teacher's existing curricula and identifying potential activities and concepts to "CT-ify", rather than creating entirely new curricula from scratch by using the concept of scale as an "attack vector'' to design science units that integrate computational thinking practices into traditional science curricula. We demonstrate how we conceptualize four different versions of scale in science, 1. Time, 2. Size, 3. Number, and 4. Repeatability. We also present examples of these concepts in traditional high school science curricula that hundreds of students in a large urban US school district have used.},
booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
pages = {1361},
numpages = {1},
keywords = {agent-based modeling, computational thinking, science education},
location = {Portland, OR, USA},
series = {SIGCSE '20}
}

@inproceedings{10.1145/3641555.3705267,
author = {Zabir, Zubair and Tisha, Sirazum Munira},
title = {The Role of Virtual Reality in Enhancing Computer Science Education},
year = {2025},
isbn = {9798400705328},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3641555.3705267},
doi = {10.1145/3641555.3705267},
abstract = {This paper examines the application of Virtual Reality (VR) in com- puter science education through a review of 28 academic papers. The study investigates VR's effectiveness in teaching complex topics such as finite state machines, computational thinking, and algo- rithms. The authors highlight VR's advantages, including immersive learning experiences and intuitive visualization of abstract concepts, while also noting challenges such as high costs and limited acces- sibility. The analysis reveals critical research gaps, including the need to evaluate VR's cost-effectiveness, scalability, integration with AI for adaptive learning, and support for diverse learners. To address these gaps, the paper proposes research questions for future investigations. While underscoring VR's potential to revolutionize computer science education, the study emphasizes the need for further research to optimize its implementation and effectiveness.},
booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1673–1674},
numpages = {2},
keywords = {artificial intelligence, computer science education, immersive learning, virtual reality},
location = {Pittsburgh, PA, USA},
series = {SIGCSETS 2025}
}

@inproceedings{10.1145/3629296.3629358,
author = {Schwinghammer, Michaela and Milisic, Daniela and Schmidthaler, Eva and Sabitzer, Barbara},
title = {"The \"COOL Clubs\": Supporting gifted primary school students in STEAM"},
year = {2024},
isbn = {9798400709111},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3629296.3629358},
doi = {10.1145/3629296.3629358},
abstract = {The rapid rise of computational technologies has heightened the demand for proficient computer scientists. A strong foundation in Computer Science (CS) and Digital Education (German: Digitale Grundbildung DGB) has become crucial, even for young learners. Despite the growing importance of CS and DGB in Austria, a gap remains in comprehensive understanding among students and educators. This study aims to bridge this gap by making CS accessible to primary school students and teachers. The solution, COOL Lab, is an active learning center offering diverse STEAM (Science, Technology, Engineering, Arts, and Mathematics) programs. These programs facilitate cross-disciplinary education, supported by innovative CS technologies, nurturing computational thinking (CT) as a problem-solving tool, and enhancing digital skills. Focusing on COOL Lab Clubs, tailored for gifted primary school students, specifically the 'Girls* Only IT-Club' and 'Mini Club', this research first introduces these clubs and then presents insights from four club activities, along with methodologies enhancing CS and CT comprehension. Early results from a questionnaire involving 20 participants aged 9-10 were analyzed. At the outset, almost half of the participants, particularly girls, lacked exposure to CT and CS yet showed eagerness to learn. Initial findings of the club evaluations indicate a strong interest in STEM (Science, Technology, Engineering, and Mathematics) as well as CS and a positive response to the COOL Clubs.},
booktitle = {Proceedings of the 15th International Conference on Education Technology and Computers},
pages = {384–390},
numpages = {7},
keywords = {Computer science, STEAM, computational thinking, creativity, digital education, gifted education, primary education},
location = {Barcelona, Spain},
series = {ICETC '23}
}

@inproceedings{10.1145/3430665.3456361,
author = {Billingsley, William and Vitale, Jonathan},
title = {An Accelerated CS0 for Online Mature-Age Part-Time Students},
year = {2021},
isbn = {9781450382144},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3430665.3456361},
doi = {10.1145/3430665.3456361},
abstract = {In this paper, we present the design of a "CS0" Computational Thinking course at an Australian regional university, that is also offered to non-enrolled students via the Open Universities Australia network. Unlike many CS0 courses, this targets a predominantly mature age and part-time demographic, although high school leavers are also included. Our design attempts to recognise that computational thinking experiences are increasingly incorporated into school experiences, both through curricula and outreach. Consequently, a CS0 course no longer has the sole purpose of introducing students to computing. It also serves a bridging role, giving a compressed form of outreach and school experiences to adult learners who might have missed them. It also brings brings opportunities to compress the introduction of programming, so that more time can be spent in challenges that stretch students' experience, and in demonstrating its application to areas such as robotics and social AI.},
booktitle = {Proceedings of the 26th ACM Conference on Innovation and Technology in Computer Science Education V. 1},
pages = {526–532},
numpages = {7},
keywords = {computational thinking, cs0, online education},
location = {Virtual Event, Germany},
series = {ITiCSE '21}
}

@inproceedings{10.1145/3017680.3017718,
author = {Shell, Duane F. and Soh, Leen-Kiat and Flanigan, Abraham E. and Peteranetz, Markeya S. and Ingraham, Elizabeth},
title = {Improving Students' Learning and Achievement in CS Classrooms through Computational Creativity Exercises that Integrate Computational and Creative Thinking},
year = {2017},
isbn = {9781450346986},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3017680.3017718},
doi = {10.1145/3017680.3017718},
abstract = {Our research is based on an innovative approach that integrates computational thinking and creative thinking in computer science courses to improve student learning and performance. Referencing Epstein's Generativity Theory, we designed and deployed Computational Creativity Exercises (CCEs) with linkages to concepts in computer science and computational thinking. Prior studies with earlier versions of the CCEs in CS1 courses found that completing more CCEs led to higher grades and increased learning of computational thinking principles. In this study, we extended the examination of CCEs to by deploying revised CCEs across two lower division (freshmen, sophomore) and three upper division (junior, senior) CS courses. We found a linear "dosage effect" of increasingly higher grades and computational thinking/CS knowledge test scores with completion of each additional CCE. This dosage effect was consistent across lower and upper division courses. Findings supported our contention that the merger of computational and creative thinking can be realized in computational creativity exercises that can be implemented and lead to increased student learning across courses from freshmen to senior level. The effect of the CCEs on learning was independent of student general academic achievement and individual student motivation. If students do the CCEs, they appear to benefit, whether or not they are self-aware of the benefit or personally motivated to do them. Issues in implementation are discussed.},
booktitle = {Proceedings of the 2017 ACM SIGCSE Technical Symposium on Computer Science Education},
pages = {543–548},
numpages = {6},
keywords = {CS course achievement, computational thinking, creative thinking},
location = {Seattle, Washington, USA},
series = {SIGCSE '17}
}

@inproceedings{10.1145/3446871.3469792,
author = {Yan, Wei and Israel, Maya and Liu, Tongxi},
title = {Elementary Students’ Debugging Behaviors in a Game-based Environment},
year = {2021},
isbn = {9781450383264},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3446871.3469792},
doi = {10.1145/3446871.3469792},
abstract = {This basic interpretive qualitative study investigated four students’ debugging behaviors in Zoombinis, a game-based computational thinking (CT) environment. Analysis involved deductive coding of students’ debugging behaviors using videos of students’ computer screens. The findings revealed a range of debugging behaviors and strategies. Findings also indicated that students could articulate an intermediate understanding of debugging as related to the debugging LT [7].},
booktitle = {Proceedings of the 17th ACM Conference on International Computing Education Research},
pages = {441–442},
numpages = {2},
keywords = {Computational Thinking, Debugging, elementary education},
location = {Virtual Event, USA},
series = {ICER 2021}
}

@inproceedings{10.1145/3556787.3556808,
author = {Assaf, Dorit and Reyes Mury, Sophia and Negrini, Lucio and Skweres, Melissa},
title = {”Roteco” - a Swiss teacher community for educational robotics},
year = {2022},
isbn = {9781450398534},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3556787.3556808},
doi = {10.1145/3556787.3556808},
abstract = {Computer Science has been introduced as a new subject in the compulsory school curriculum in Switzerland. Research on educational robotics has highlighted potentials of using robots as a hands-on tool to foster computational thinking skills. However, to date these kind of activities are not carried out systematically in schools. To support teachers, a teacher community for educational robotics and computer science education ”Roteco” has been established. Teachers can register for free to a digital platform to find classroom-ready activities, news, articles, and information about training and workshops in their region. Roteco further organizes webinars and events to build the community. Within two years, more than 1,400 teachers have joined the community. In this abstract, we present Roteco, our experiences in establishing the community, platform analytics data as well as a short summary of results from two surveys conducted in 2020 with 87 and in 2021 with 48 teachers. Detailed results can be found in the corresponding journal article [11].},
booktitle = {Proceedings of the 17th Workshop in Primary and Secondary Computing Education},
articleno = {18},
numpages = {2},
keywords = {Educational Robotics, community, computational thinking},
location = {Morschach, Switzerland},
series = {WiPSCE '22}
}

@inproceedings{10.1145/3501712.3529742,
author = {Fernandez, Cassia and Freitas, Jo\~{a}o Adriano and Lopes, Roseli de Deus and Blikstein, Paulo},
title = {Using video analysis and learning analytics to understand programming trajectories in data science activities with Scratch},
year = {2022},
isbn = {9781450391979},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3501712.3529742},
doi = {10.1145/3501712.3529742},
abstract = {In this paper, we describe a new automated tool to analyze how students create their projects on Scratch 3.0, with the goal of understanding learning trajectories in a way that considers students’ programming processes and practices, moving beyond the analysis of computational thinking concepts as evidence of learning. Drawing on a combination of qualitative video analysis and temporal learning analytics, we also present preliminary data from a pilot study that illustrates some possibilities afforded by this type of analytical tool. We expect that our tool can help researchers to better understand learning in the context of data visualization activities with block-based programming languages by shedding light on processes that are usually invisible and, thus, better support students in their diverse learning pathways.},
booktitle = {Proceedings of the 21st Annual ACM Interaction Design and Children Conference},
pages = {253–260},
numpages = {8},
keywords = {Scratch, computational thinking, data science, learning analytics, temporal analysis},
location = {Braga, Portugal},
series = {IDC '22}
}

@inproceedings{10.1145/3478431.3499405,
author = {Kalathas, Paris and Parham-Mocello, Jennifer and Elliot, Rebekah and Lockwood, Elise},
title = {Exploring Math + CS in a Secondary Education Methods Course},
year = {2022},
isbn = {9781450390705},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3478431.3499405},
doi = {10.1145/3478431.3499405},
abstract = {There is wide-spread agreement that K-12 students need opportunities to explore computer science (CS) concepts and computational thinking within a wide array of disciplines for advancing, broadening, and diversifying the participation in CS. Programs such as "Computer Science for All" were created by the US government to motivate and help students of all ages to engage with CS, which was described as the "new basic skill for economic opportunity and social mobility". However, what is less understood is how to prepare teachers to engage with CS concepts and computational thinking, expanding their specialized and pedagogical content knowledge on these concepts. This study explores this gap in the context of a graduate-level secondary math education methods course in a university environment. To reduce the cognitive load for the teacher candidates as well as their students, we utilize the secondary mathematics curriculum to explore CS concepts infused into mathematics, avoiding at the same time an increase to the teaching hours to the extent that it is detrimental to the existing K-12 curriculum. Our study uses hybrid block-text programming-based teaching modules specifically designed to expose the similarities and the differences between mathematics and CS. We utilize the concept of variable and operations around it to explore how the teacher candidates' conceptions and misconceptions about CS make the understanding of those concepts easy or challenging, and how that affects their ability to incorporate them into their teaching.},
booktitle = {Proceedings of the 53rd ACM Technical Symposium on Computer Science Education - Volume 1},
pages = {689–695},
numpages = {7},
keywords = {computational thinking, computer science, integrated curriculum, interdisciplinary, k-12, math + cs, mathematics, preservice teachers, programming, secondary education, teacher candidates, teacher development, variables},
location = {Providence, RI, USA},
series = {SIGCSE 2022}
}

@inproceedings{10.1145/3428029.3428063,
author = {Kahila, Juho and Parkki, Tuomo and Gr\"{o}hn, Anssi and Karvinen, Atte and Telimaa, Elmeri and Riikonen, Pekka and Tiitta, Riku and Haantio, Pasi and Kein\"{a}nen, Anssi and Kerkk\"{a}nen, Tero and Jormanainen, Ilkka and Penttinen, Silja and Tedre, Matti},
title = {Escape Room Game for CT Learning Activities in the Primary School},
year = {2020},
isbn = {9781450389211},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3428029.3428063},
doi = {10.1145/3428029.3428063},
abstract = {This systems short paper presents the design and implementation of an escape room game for practicing computational thinking (CT) skills in the primary school. The game, which can be packed into two small suitcases and set up anywhere, combines physical and virtual elements in order to engage learners into exploring the room. Aural elements with spoken tracks and background soundscape are combined with smart lighting to intensify the immersion. The game’s CT puzzles are modified from Bebras Challenge, and escaping the room requires solving all of them. This paper describes the game disposition and design, the room setup, design and implementation of computational thinking minigames, and the system architecture.},
booktitle = {Proceedings of the 20th Koli Calling International Conference on Computing Education Research},
articleno = {9},
numpages = {5},
keywords = {Computational thinking, K-12, escape room, game-based learning, primary school},
location = {Koli, Finland},
series = {Koli Calling '20}
}

@inproceedings{10.1145/3628516.3659418,
author = {Abelda\~{n}o, Romina and Bakala, Ewelina and Hitta, Santiago and Pires, Ana Cristina},
title = {"This is like a toy, it already got me": Results of Two Usability Studies of Robotito VPL App with Teachers: Robotito VPL Usability Evaluations},
year = {2024},
isbn = {9798400704420},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3628516.3659418},
doi = {10.1145/3628516.3659418},
abstract = {The relevance of computational thinking (CT) in early education is globally recognized, with Uruguay already incorporating it into kindergarten curricula. However, there is a notable disconnect: existing CT tools, primarily devised for small home groups, fall short in larger classroom settings. To bridge this gap, we developed Robotito VPL – an innovative, free, open-source application tailored to teachers with no programming background. Robotito VPL enables teachers to guide young children in CT learning with Robotito, a robot that engages with its surroundings, supporting a playful, hands-on learning experience for children. This paper presents the results of two usability evaluations with seven teachers. We then translated the outcomes of these evaluations into valuable lessons learned and specific design requirements.},
booktitle = {Proceedings of the 23rd Annual ACM Interaction Design and Children Conference},
pages = {919–923},
numpages = {5},
keywords = {Educational robotics, Educators, Mobile Application, Usability},
location = {Delft, Netherlands},
series = {IDC '24}
}

@inproceedings{10.1145/3531073.3531128,
author = {Abdollahinami, Sevda and Ducceschi, Luca and Zancanaro, Massimo},
title = {End-user Development and Closed-Reading: an Initial Investigation},
year = {2022},
isbn = {9781450397193},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3531073.3531128},
doi = {10.1145/3531073.3531128},
abstract = {In this work, we explore the idea of designing a tool to augment the practice of closed-reading a literary text by employing end-user programming practices. The ultimate goal is to help young humanities students learn and appreciate computational thinking skills. The proposed approach is aligned with other methods of applying computer science techniques to explore literary texts (as in digital humanities) but with original goals and means. An initial design concept has been realised as a probe to prompt the discussion among humanities students and teachers. This short paper discusses the design ideas and the feedback from interviews and focus groups involving 25 participants (10 teachers in different humanities fields and 15 university students in humanities as prospective teachers and scholars).},
booktitle = {Proceedings of the 2022 International Conference on Advanced Visual Interfaces},
articleno = {36},
numpages = {5},
keywords = {Closed reading, Computational Thinking, Digital Humanities, End-User Development, Natural language processing},
location = {Frascati, Rome, Italy},
series = {AVI '22}
}

@inproceedings{10.1145/3459990.3465189,
author = {Im, Hyejin and Rogers, Chris},
title = {Draw2Code: Low-Cost Tangible Programming for Creating AR Animations},
year = {2021},
isbn = {9781450384520},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3459990.3465189},
doi = {10.1145/3459990.3465189},
abstract = {Computational thinking is nowadays considered an essential skill in the K-12 educational curriculum. Many tangible computational kits designed for early childhood are either too expensive to benefit a wide range of children or only provide predetermined challenges with limited creative content creation opportunities. In this paper, we investigated low-cost and expressive tangible interfaces that foster computational literacy. We present Draw2Code, a paper-based computational kit for young children to create an interactive AR animation. Children use Draw2Code to make their paper drawing alive as an animated virtual sprite and control it using hand gestures. It exposes children to basic programming concepts through playful and tangible interaction. Results from our initial evaluation with nine child-parent dyads indicate that children ages 5 to 12 successfully used Draw2Code and played with Draw2Code in 33 minutes on average while creating 2 to 5 diverse AR animations based on their ideas. Throughout the session, all children were engaged in computational thinking concepts and practices and learned drawing and gesture-based interactions.},
booktitle = {Proceedings of the 20th Annual ACM Interaction Design and Children Conference},
pages = {427–432},
numpages = {6},
keywords = {Augmented Reality, Computational Thinking, K-12 Education, Tangible User Interfaces},
location = {Athens, Greece},
series = {IDC '21}
}

@inproceedings{10.1145/3641555.3705235,
author = {Gonzalez, Elias and Chan, Joel and Weintrop, David},
title = {Quack! Configuring Large Language Models to Serve as Rubber Duck Coding Assistants},
year = {2025},
isbn = {9798400705328},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3641555.3705235},
doi = {10.1145/3641555.3705235},
abstract = {The emergence of Generative Artificial Intelligence (GenAI) tools broadly, and Large Language Models (LLMs) specifically, are equipping introductory programming instructors with a whole new class of pedagogical tools. While GenAI certainly poses threats to time-honored instructional techniques, it also provides opportunities for new forms of instructional support. In this work, we introduce our strategy for configuring an LLM to serve as a ''rubber duck debugging'' coding assistant to help novice programmers when they encounter difficulties in programming assignments. The key contribution of this work is not in the idea of using LLMs for debugging itself (which has already been demonstrated elsewhere, e.g., [3]) but to demonstrate the ease, flexibility, and pedagogical potential of the strategy. In particular, through carefully crafted prompts and easily accessible platforms, rubber duck LLMs can assist learners with specific questions while also situating those questions alongside larger computer science concepts and computational thinking practices. This work contributes an easily replicated and model-agnostic instructional strategy that productively and responsibly leverages the power of LLMs to assist novice programmers in developing foundational programming skills.},
booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1463–1464},
numpages = {2},
keywords = {computer science education, generative ai, introductory programming, large language models},
location = {Pittsburgh, PA, USA},
series = {SIGCSETS 2025}
}

@article{10.1145/3688854,
author = {Liao, Yin-Chan and Kim, Jiyoung and Ottenbreit-Leftwich, Anne T. and Karlin, Michael and Guo, Meize},
title = {Voices of Elementary Computer Science Teachers: Computer Science Integration Rationales and Practices},
year = {2024},
issue_date = {December 2024},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {24},
number = {4},
url = {https://doi.org/10.1145/3688854},
doi = {10.1145/3688854},
abstract = {Objectives. Computer Science (CS) education has become increasingly prevalent in elementary schools because of multiple rationales, such as the importance of computational literacy and the growing demand for CS-related workforce preparation. As elementary CS standards continue to be adopted by many states, more examples and voices from the field may help educators understand what effective computational thinking (CT)/CS integration looks like in practice. Method. We employed a descriptive qualitative approach to study eight award-winning K-8 CS teachers and aimed to answer three research questions: (1) What were elementary CS teachers’ rationales for CT/CS integration? (2) How do elementary CS teachers integrate CT/CS into their classroom practices? (3) What are the needs of CS teachers for meaningful CT/CS integration in elementary schools? Data were collected through interviews, a questionnaire, and artifacts and analyzed using thematic analysis. Findings. Our findings of elementary CS teachers’ rationales for CT/CS integration encompassed its essential nature as a literacy skill, its potential to promote equity in education, and its alignment with standards across various disciplines. To support CT/CS integration at the elementary level, CS teachers described important aspects with examples from their instructional practices: (a) Real-world applications; (b) hands-on activities; (c) strategies to scaffold and guide student learning; (d) collaboration with classroom teachers; and (e) support from professional development (PD). Conclusion. The study results shared CS teachers’ voices from practice and shed light on the urgent need for more support and PD opportunities for both homeroom teachers and CS teachers in elementary schools, as well as the crucial need for multiple levels of support within K-12 school systems. Continuous efforts in creating systematic and sustainable PD plans and supporting collaborative professional communities for teachers within the instructional context are a must to help prepare our elementary students with the essential CS knowledge and skills they need to thrive in this technology-rich society.},
journal = {ACM Trans. Comput. Educ.},
month = oct,
articleno = {43},
numpages = {26},
keywords = {Computer science education, Computational thinking, Elementary education, Integrated computing}
}

@inproceedings{10.1145/3501709.3544276,
author = {Du, Hanxiang and Xing, Wanli and Zhang, Yuanlin},
title = {Misconception of Abstraction: When to Use an Example and When to Use a Variable?},
year = {2022},
isbn = {9781450391955},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3501709.3544276},
doi = {10.1145/3501709.3544276},
abstract = {Abstraction, which is considered the most important computational thinking skill, can be learned from programming or computational thinking learning activities. We implemented a 8-week long course to teach high school students statistics and programming. A pre- and post-test was designed to measure students’ understandings of computing and statistics. This work reports some interesting observations we made on students’ misconception of abstraction while examining students’ responses to test questions.},
booktitle = {Proceedings of the 2022 ACM Conference on International Computing Education Research - Volume 2},
pages = {28–29},
numpages = {2},
keywords = {Abstraction, misconception},
location = {Lugano and Virtual Event, Switzerland},
series = {ICER '22}
}

@article{10.1145/3690177.3690180,
author = {Alpizar-Chacon, Isaac},
title = {Extraction of Knowledge Models from Textbooks},
year = {2024},
issue_date = {Summer 2024},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {2024},
number = {Summer},
issn = {1931-1745},
url = {https://doi.org/10.1145/3690177.3690180},
doi = {10.1145/3690177.3690180},
abstract = {Isaac Alpizar-Chacon is an assistant professor in the Software Technology for Learning and Teaching group at the Department of Information and Computing Sciences, Utrecht University. In addition to his primary role, he is also an associate professor at the Instituto Tecnol\'{o}gico de Costa Rica. His research interests focus on the impact of GenAI tools in computing education, the integration of these tools into the classroom, the teaching and learning of computational thinking skills, and knowledge extraction. Dr. Alpizar-Chacon holds a MSc degree in Computer Science from Saarland University (Saarbr\"{u}cken, Germany) and a PhD degree in Information and Computing Sciences from Utrecht University (Utrecht, Netherlands).Homepage: https://isaacalpizar.info/},
journal = {SIGWEB Newsl.},
month = oct,
articleno = {3},
numpages = {4}
}

@article{10.1145/3702332,
author = {Geyser, Hanli},
title = {Decoloniality, Digital-coloniality and Computer Programming Education},
year = {2024},
issue_date = {December 2024},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {24},
number = {4},
url = {https://doi.org/10.1145/3702332},
doi = {10.1145/3702332},
abstract = {Like digital technologies themselves, programming education is embedded in the colonial matrix of power, and access to programming knowledge demands immersion in the epistemologies of the Global North. While there is a growing body of work exploring ways to decolonise programming education, far more needs to be done. Current research focuses on the language of instruction and contextual curricula; outward-facing engagements with decolonisation. However, to move towards digital-decoloniality involves scrutinising how programming knowledge is recontextualised within curricula. Part of the project should be equipping both educators and students with the tools to recontextualise programming itself. To dismantle the colonial logic embedded in programming education, attention must be given to the knowledge formation of the discipline to identify moments of disruption. One such moment is the difficulty students face when recontextualising their mental models of computing, from programming skills to programming concepts. This occurs at the moment of reading, tracing and writing code. Programming requires one to refocus computational thinking and engage with a specific semiotic system, translating the authors’ intention into an executable computational process. Disrupting this moment using the strategies of critical literacies opens computer programming and its resulting code to critical examination, allowing an inward-facing decolonial engagement with the discipline.},
journal = {ACM Trans. Comput. Educ.},
month = dec,
articleno = {54},
numpages = {30},
keywords = {Introductory programming education, decoloniality, digital-colonialism, digital literacy, critical literacy, language}
}

@inproceedings{10.1145/3626253.3635481,
author = {del Vado V\'{\i}rseda, Rafael},
title = {Introducing Theoretical Computer Science Education in Social Sciences and Economics Degrees},
year = {2024},
isbn = {9798400704246},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3626253.3635481},
doi = {10.1145/3626253.3635481},
abstract = {The aim of this poster is to present and discuss a curricular methodology to introduce computability topics to social sciences and economics students during the study of their CS subjects in the first courses. These TCS topics give rise to algorithmic impossibility and computational undecidability results which serve to increase students' motivation in their CSE in relation to their university studies. In addition, it allows them to acquire paradoxical and computational thinking skills, with which to deepen and raise computability questions in later courses. To support the impact of the new methodology with evidence, we have analyzed preliminary student results.},
booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1620–1621},
numpages = {2},
keywords = {computational economics, impossibility theorems, theoretical computer science, uncomputability, undecidability problems},
location = {Portland, OR, USA},
series = {SIGCSE 2024}
}

@inproceedings{10.1145/3572549.3572576,
author = {Rottenhofer, Marina and Leitner, Sandra and Emara, Mona and Sabitzer, Barbara and Rankin, Thomas},
title = {Vocabulary Acquisition through Computer Science Modeling: A Comparative Study on Visual and Textual Vocabulary Instruction},
year = {2023},
isbn = {9781450397766},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3572549.3572576},
doi = {10.1145/3572549.3572576},
abstract = {In Computer Science (CS), modeling with diagrams is a well-known practice to visualize complex software systems or database structures. However, modeling with e.g., entity-relationship diagrams or UML (Unified Modeling Language) is also helpful in other disciplines. In this research, CS models are used as a teaching and learning tool in foreign language acquisition. The field of computer science offers a variety of models that can visualize states, as well as processes and, are therefore very suitable for the different areas of language teaching (e.g., reading, writing, grammar-, or vocabulary acquisition). With CS modeling as a teaching and learning strategy, two main objectives are addressed: enhancing learning and retention and fostering computational thinking skills. This paper presents best practice examples on how to meet these two objectives as well as the results of a crossover study, where we investigated whether vocabulary acquisition is facilitated when it is thematically preorganized in class diagrams. The results illustrate that pupils who studied with the class diagram strategy had significantly higher recall performance than pupils who studied with the list of words. A qualitative analysis of the participants’ feedback after the intervention revealed decisive criteria for their preferences regarding the learning format.},
booktitle = {Proceedings of the 14th International Conference on Education Technology and Computers},
pages = {163–169},
numpages = {7},
keywords = {computational thinking, computer science-supported learning, digital education, foreign language learning, visualization},
location = {Barcelona, Spain},
series = {ICETC '22}
}

@inproceedings{10.1145/3605468.3605498,
author = {Greifenstein, Luisa and Brune, Markus and Fuchs, Tobias and Heuer, Ute and Fraser, Gordon},
title = {Impact of Hint Content on Performance and Learning: A Study with Primary School Children in a Scratch Course},
year = {2023},
isbn = {9798400708510},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3605468.3605498},
doi = {10.1145/3605468.3605498},
abstract = {The implementation of computational thinking concepts in primary school curricula usually includes programming activities. As primary school teachers often lack subject knowledge, they may struggle to help students during these programming activities. Additional support can be provided by automated program analysis, for example in terms of hints on conceptual knowledge related to bad coding patterns observed, or procedural hints on how to solve the task at hand. However, care has to be taken since these hints need to balance (1) helping students to perform a specific task successfully, while nevertheless (2) ensuring a learning effect beyond the specific task. To understand the effects of different types of hints we therefore conducted a study with 36 children aged 7–12 in 10 programming courses. After being introduced to basic programming structures in three units, the children were tasked to debug six Scratch programs using different types of hints, where we observed that procedural hints have the strongest impact on performance. In order to examine an impact on the transfer of learned knowledge, we observed the children’s difficulties during the successive fifth unit, in which they created their own projects. The results of the fifth unit show that having received a procedural hint on a specific pattern during the fourth unit leads to slightly fewer bad related code patterns but also to slightly fewer good code patterns. Considering these results together with the subjective perceptions of the children, we can derive insights into how to best support performance and learning using (automated) feedback.},
booktitle = {Proceedings of the 18th WiPSCE Conference on Primary and Secondary Computing Education Research},
articleno = {7},
numpages = {10},
keywords = {analysis tools, block-based programming feedback, bug patterns, computational thinking, elementary school},
location = {Cambridge, United Kingdom},
series = {WiPSCE '23}
}

@inproceedings{10.1145/3545947.3576321,
author = {Popov, Aleksandr},
title = {Motivation and Practices of Teaching Computational Social Science to Undergraduate Political Science Students},
year = {2023},
isbn = {9781450394338},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3545947.3576321},
doi = {10.1145/3545947.3576321},
abstract = {The introductory course in basics of programming aims to teach second-year political science students the basic skills of applied programming that are crucial for transferring their research ideas into computational models. As one of students' first interactions with computer science concepts, the course assists in overcoming their barriers in programming, and introduces them to ways of applying computational thinking. In addition, the course material can serve as a launching pad for further development in the areas of modelling social problems, its simulations and quantitative analysis. This paper presents course design considerations, shares findings in assignment design, and raises questions to consider when designing CS0 and CS1 courses for social science students.},
booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1376},
numpages = {1},
keywords = {computational social science, teaching computational thinking},
location = {Toronto ON, Canada},
series = {SIGCSE 2023}
}

@inproceedings{10.1145/3569173.3569179,
author = {De Bruin, Lucas and Nijenhuis-Voogt, Jacqueline and Yeni, Sabiha},
title = {Integrating CT into economics: Simulating monetary policy through computer models in spreadsheets by using a Use-Modify-Create strategy},
year = {2023},
isbn = {9781450397476},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3569173.3569179},
doi = {10.1145/3569173.3569179},
abstract = {Integrating computational thinking (CT) into the learning of school subjects is receiving increased attention. Developing students’ CT skills may not only advance their digital literacy but it may deepen subject specific learning as well. It is therefore interesting to investigate the learning of CT from a multidisciplinary perspective. This study describes the design of a CT integrated lesson for economics in which computer models in spreadsheets are used to simulate monetary policy. The lesson is structured according to the Use-Modify-Create strategy. The aim of this exploratory study is to evaluate the learning outcomes of this CT integrated lesson and students’ attitudes towards such a lesson. For this purpose, students’ exit tickets, feedback forms, supervisor observations and interviews with students have been analyzed. This qualitative analysis revealed that students perceived the lesson as difficult, especially during the Modify and Create phases. In addition, the results suggest that all phases are dependent on taking enough time to finish the Use phase to get familiar with the computational steps. Several suggestions have been given to improve the lesson, for instance, to use a simpler topic of economics. Furthermore, the analysis of students’ attitudes revealed that connections to CT could be made more explicit rather than implicitly embedded in the instructional strategy.},
booktitle = {Proceedings of the 11th Computer Science Education Research Conference},
pages = {46–53},
numpages = {8},
keywords = {CT education, Use-Modify-Create, computational thinking, computer models, economics, spreadsheets},
location = {Leiden, Netherlands},
series = {CSERC '22}
}

@inproceedings{10.1145/3701268.3701273,
author = {Conway, Brian and Nolan, Keith and Quille, Keith},
title = {HCAI Block Model: A competence model for Human Centred Artificial Intelligence at K-12},
year = {2024},
isbn = {9798400711596},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3701268.3701273},
doi = {10.1145/3701268.3701273},
abstract = {Artificial Intelligence (AI) is becoming a common topic within the computing K-12 curricula worldwide. While much of the focus of research is on the use of Generative AI in and for education, AI as a core subject area is still gaining popularity, with much of this research focusing on content and tools that effectively support the teaching of AI. However, as we grow as a field, there is a need currently unmet to provide foundations (in the form of a block model as there exists for programming) to allow researchers to build strong pedagogies and methodologies from, and even a base to design activities and content. Compounding this, as ethics and its relationship to AI in the K-12 classroom grows stronger, there is a further need to provide scaffolding to educators and researchers not only on traditional AI concepts, but also on how they link with ethical knowledge, skills and dispositions. In this paper, the Human Centered Artificial Intelligence (HCAI) Block Model is developed and introduced. This is a competence-based model to guide effective teaching and learning of Human Centered Artificial Intelligence, as well as research in the K-12 space. The HCAI Block model’s foundation is developed/adapted from the programming Block model and has been adapted and developed using two lenses. The first was through the data science lens through interaction with Computational Thinking 2.0 and competency-based learning. The second lens was through a human-centred lens. The outcome was a ground-up K-12 model where traditional and technical AI concepts have been developed from the start, integrating ethical considerations and human-centred approaches.},
booktitle = {Proceedings of the 2024 Conference on Human Centred Artificial Intelligence - Education and Practice},
pages = {22–28},
numpages = {7},
keywords = {Computing Education, Machine Learning, Human-Centered AI, Block Model, Ethics, Computational Thinking 2.0},
location = {
},
series = {HCAIep '24}
}

@inproceedings{10.1145/3649409.3691089,
author = {Gupta, Anisha and Monahan, Robert and Vandenberg, Jessica and Smith, Andy and Elsayed, Rasha and Fox, Kimkinyona and Minogue, James and Oliver, Kevin and Hubbard Cheuoua, Aleata and Ringstaff, Cathy and Mott, Bradford},
title = {Leveraging Large Language Models for Automated Assessment of Elementary Students' Block-Based Narrative Programs},
year = {2024},
isbn = {9798400706042},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3649409.3691089},
doi = {10.1145/3649409.3691089},
abstract = {Recent years have seen increasing awareness of the need to engage young learners in computational thinking (CT). Integrating digital storytelling, where students create short narratives, and CT offers significant potential for promoting interdisciplinary learning for students; however, it is critical to provide both teachers and students with automated support. A promising approach for enabling support is to leverage advances in Large Language Models (LLMs), which have demonstrated considerable potential for assessing both programming and natural language artifacts. In this work, we investigate the capabilities of LLMs to automatically assess student-created block-based programs developed using a narrative-centered learning environment that engages upper elementary students (ages 9 to 11) in learning CT and physical science through the creation of interactive science narratives. Using the narrative programs created by 28 students, we explore the efficacy of LLMs to assess the programs across two dimensions.},
booktitle = {Proceedings of the 2024 on ACM Virtual Global Computing Education Conference V. 2},
pages = {318–319},
numpages = {2},
keywords = {k-12 education, natural language processing},
location = {Virtual Event, NC, USA},
series = {SIGCSE Virtual 2024}
}

@inproceedings{10.1145/3183440.3195062,
author = {Russo, Daniel and Missiroli, Marcello and Ciancarini, Paolo},
title = {A conceptual model for cooperative thinking},
year = {2018},
isbn = {9781450356633},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3183440.3195062},
doi = {10.1145/3183440.3195062},
abstract = {Training computer scientists to address wicked problems means to focus respectively on the individual capability to think in a computational-oriented way (i.e., Computational Thinking), and on the social dimension of coding (i.e., Agile Values). In this study we propose the conceptual model of Cooperative Thinking, a new education construct of team-based computational problem solving. Cooperative Thinking is not only the sum of Computational Thinking and Agile Values, rather it is a new overarching competence suitable to deal with complex software engineering problems. We suggest to tackle the Cooperative Thinking construct as an education goal, to train new generations of software developers to Pareto-optimize both their individual and teaming performances.},
booktitle = {Proceedings of the 40th International Conference on Software Engineering: Companion Proceeedings},
pages = {157–158},
numpages = {2},
keywords = {agile values, computational thinking, cooperative thinking},
location = {Gothenburg, Sweden},
series = {ICSE '18}
}

@article{10.1145/3500918,
author = {Jacob, Sharin Rawhiya and Montoya, Jonathan and Nguyen, Ha and Richardson, Debra and Warschauer, Mark},
title = {Examining the What, Why, and How of Multilingual Student Identity Development in Computer Science},
year = {2022},
issue_date = {September 2022},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {22},
number = {3},
url = {https://doi.org/10.1145/3500918},
doi = {10.1145/3500918},
abstract = {Developing student interest is critical to supporting student learning in computer science. Research indicates that student interest is a key predictor of persistence and achievement. While there is a growing body of work on developing computing identities for diverse students, little research focuses on early exposure to develop multilingual students’ interest in computing. These students represent one of the fastest growing populations in the US, yet they are dramatically underrepresented in computer science education. This study examines identity development of upper elementary multilingual students as they engage in a year-long computational thinking curriculum, and follows their engagement across multiple settings (i.e., school, club, home, community). Findings from pre- and post-surveys of identity showed significant differences favoring students’ experiences with computer science, their perceptions of computer science, their perceptions of themselves as computer scientists, and their family support for computer science. Findings from follow-up interviews and prior research suggest that tailored instruction provides opportunities for connections to out-of-school learning environments with friends and family that may shift students’ perceptions of their abilities to pursue computer science and persist when encountering challenges.},
journal = {ACM Trans. Comput. Educ.},
month = sep,
articleno = {29},
numpages = {33},
keywords = {Computer science, computational thinking, identity, multilingual, English learner}
}

@inproceedings{10.1145/3605468.3609754,
author = {Musaeus, Line Have and Caspersen, Michael E. and Musaeus, Peter},
title = {A Template for Teaching Computational Modelling in High School},
year = {2023},
isbn = {9798400708510},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3605468.3609754},
doi = {10.1145/3605468.3609754},
abstract = {Computing education is becoming increasingly important in high schools. Computational modelling is important in computing and many sciences, but there is a lack of research on how teachers should teach computational modelling in high schools. This study was a design-based research study with 86 teachers teaching 12 different subjects at 44 Danish high schools. The study aimed to develop a template to help design and classify didactical questions on computational modelling. Teachers participated in one of two courses on computational modelling. The intervention group (Prog+) included an introduction to agent-based modelling and programming in NetLogo. The comparison group (Prog-) included a general introduction to agent-based modelling. A template consisting of 16 modelling parameters was developed with teachers. Results showed that the template was helpful for teachers to design didactical questions and for the research team to classify the taxonomical levels of these questions. A total of 51 teaching activities were developed by teachers and didactical questions were derived. The strength of this design based research study was that it included a control group and inspired teachers to design and evaluate didactical questions in computational modelling in a wide range of high school subjects. Future studies are needed to evaluate the validity of the template.},
booktitle = {Proceedings of the 18th WiPSCE Conference on Primary and Secondary Computing Education Research},
articleno = {11},
numpages = {10},
keywords = {Computational modelling, Computational thinking, Design-based research, High school education, K-12 education, Professional development},
location = {Cambridge, United Kingdom},
series = {WiPSCE '23}
}

@inproceedings{10.1145/3585088.3589364,
author = {Cheng, Ruijia and Dangol, Aayushi and Ello, Frances Marie Tabio and Wang, Lingyu and Dasgupta, Sayamindu},
title = {Concepts, practices, and perspectives for developing computational data literacy: Insights from workshops with a new data programming system},
year = {2023},
isbn = {9798400701313},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3585088.3589364},
doi = {10.1145/3585088.3589364},
abstract = {In this paper, we present a new visual block-based programming system designed for children to process, analyze, and visualize data. We introduce the system and describe how it was used during a series of 7 workshops with 27 children. During the workshops, children played the role of investigators and followed a storyline as part of the system to conduct data analyses to help the story’s protagonist locate a missing family member. We present our findings as a framework of computational data literacy that builds on the dimensions of Computational Thinking proposed by Brennan and Resnick [8], with a focus on aspects that are specific to using programming for data processing, analysis, and visualization. We conclude with a series of recommendations for future designers of systems to support the development of computational data literacy.},
booktitle = {Proceedings of the 22nd Annual ACM Interaction Design and Children Conference},
pages = {100–111},
numpages = {12},
keywords = {block-based programming, data literacy, visualization},
location = {Chicago, IL, USA},
series = {IDC '23}
}

@inproceedings{10.1145/3123514.3123515,
author = {Hug, Daniel and Petralito, Serge and Hauser, Sarah and Lamprou, Anna and Repenning, Alexander and Bertschinger, Didier and St\"{u}ber, Nadine and Cslovjecsek, Markus},
title = {Exploring Computational Music Thinking in a Workshop Setting with Primary and Secondary School Children},
year = {2017},
isbn = {9781450353731},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3123514.3123515},
doi = {10.1145/3123514.3123515},
abstract = {Motivated by the essential role of music in children's lives, the potential of sound as sensory modality, and the importance of teaching Computational Thinking, there is great pedagogical potential in the integration of musical and computational thinking into "Computational Music Thinking". In this paper we report a pilot study exploring research and design approaches in creating learning environments and tools, which stimulate the interest of children and adolescents for both computer science and music in a sustainable way in the context of creative, self-guided activities. For the purposes of the study, two online tools, AgentCubes online, a 3D game design environment, and Ludosonica, an interactive music composition and performance system, were employed in a series of workshops designed for primary and secondary school children. Results from the study generally confirm the pedagogical potential of Computational Music Thinking and point toward promising future research directions.},
booktitle = {Proceedings of the 12th International Audio Mostly Conference on Augmented and Participatory Sound and Music Experiences},
articleno = {21},
numpages = {8},
keywords = {Computational thinking, STEAM education, music education},
location = {London, United Kingdom},
series = {AM '17}
}

@inproceedings{10.1145/3478432.3499233,
author = {McSkimming, Brian M. and Decker, Adrienne},
title = {Exploring Threshold Concepts for Intermediate Students},
year = {2022},
isbn = {9781450390712},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3478432.3499233},
doi = {10.1145/3478432.3499233},
abstract = {This lightning talk describes our current efforts to isolate and identify potential threshold concepts and threshold capabilities which are experienced by intermediate computer science undergraduate students. We are utilizing the theoretical framework as described by Meyer, Land, Bowden, and Baillie. Two of the key identifiable characteristics surrounding a threshold concept are (1) the transformation one undergoes as a result of incorporating the concept into their knowledge and (2) the state of uncertainty (liminality) experienced as the learner develops this understanding. As a result of this transformation and the resultant traversal of a liminal state, elements of an identity are often developed. For the computer science undergraduate, we hypothesize that advanced computational thinking skills are developed along with these transformations leading to the development of a computer scientist identity. Through identification of the threshold concepts/capabilities experienced by intermediate students the potential corollary concepts behind computational thinking may be uncovered as well. The overall project intends to integrate elements of threshold concepts, liminality, and transformative learning to produce a framework through which computational thinking can be probed and students' progression can be better assessed and supported. These efforts are only beginning - curious faculty and students are invited to attend our presentation and consider potential collaborative participation in our endeavors.},
booktitle = {Proceedings of the 53rd ACM Technical Symposium on Computer Science Education V. 2},
pages = {1025},
numpages = {1},
keywords = {computational thinking, intermediate students, learning theory, threshold concepts},
location = {Providence, RI, USA},
series = {SIGCSE 2022}
}

@inproceedings{10.1145/3424953.3426629,
author = {Vieira, Jos\'{e} M. F. and Zaina, Luciana A. M.},
title = {Representation, navigation and exploration: a three layered approach on learning trajectories},
year = {2020},
isbn = {9781450381727},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3424953.3426629},
doi = {10.1145/3424953.3426629},
abstract = {Learning trajectories are paths that students may follow in order to achieve their learning goals. Although the literature has addressed the subject, little has been done in the way of exploring how to visualize learning trajectories. In this paper, we present three forms of interactive learning trajectories visualizations linked to the context of computational thinking. As the interactions on visualizations involved different aspects, our proposal comprises three layers: the data representation, the reactions to the navigation and data exploration where more details of the data can be seen. Due to visualizations being tightly related to the context from which the data comes, we analyzed the data types available in Code.org, a well-known platform commonly used to teach computational thinking. To assess the three visualizations, we carried out usability and user experience evaluation with 23 Brazilian elementary schools teachers. The results revealed that the three visualizations achieved an average of 72% of overall understanding by the audience. Besides, our findings showed the visualizations were well accepted among the participants. We also found out that the user experience reported by the participants is in some way associated with the level of understanding of the visualizations.},
booktitle = {Proceedings of the 19th Brazilian Symposium on Human Factors in Computing Systems},
articleno = {31},
numpages = {10},
keywords = {computational thinking, learning trajectories, visualizations},
location = {Diamantina, Brazil},
series = {IHC '20}
}

@article{10.5555/3606388.3606396,
author = {Azhar, Mohammad Q. and Haynes, Ada and Day, Marisa and Wissinger, Elizabeth},
title = {Implementation and Evaluation of a Virtual Hackathon in an Urban HSI Community College during COVID-19},
year = {2023},
issue_date = {April 2023},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {38},
number = {6},
issn = {1937-4771},
abstract = {This paper shares the analysis of our quantitative findings regarding the impact of a virtual informal collaborative experiential learning activity on diverse students' computational thinking, critical thinking, and self-efficacy in STEM activities. Designed as part of an ongoing National Science Foundation sponsored project to provide underrepresented minority (URM) students from underserved economic backgrounds with real-world career preparation and technical education across disciplines through collaborative project activities using cutting-edge technologies, the Hackathon for Social Good was implemented during the COVID-19 shutdowns in a New York City community college in lower Manhattan. Students worked in teams to innovate practical solutions to global problems with mentor support from both academia and the tech industry. This intervention drew 36 students from Computer Science, Business, and Sociology classes, who worked with volunteers and alumni during a full-day event in the Fall of 2021, using AI and data science to design culturally sensitive data-driven solutions for real-world problems. The tracks covered the following topics: Zero Hunger, Clean Water, and Sanitation, Green Consumption, Racial Justice, Quality Education, Good Health, and Well Being. The two main objectives of this project are as follows: (1) Design a remote interdisciplinary one-day experiential collaborative learning environment to engage URM teams of students from a community college in applying computational thinking to develop solutions for social good. (2) Conduct research on our intervention to study its effect on students' self-efficacy, as well as their knowledge of, and comfort with, computational thinking, critical thinking, problem-solving, and STEM. The evidence gathered from qualitative and quantitative data indicates that using these mechanisms to infuse CT into student learning across disciplines has several positive outcomes. Students reported increased leadership skills, comfort with teamwork, problem-solving, and critical thinking. A quantitative study specifically showed a positive impact on student confidence in their ability to do CT and improved their sense of efficacy in impacting the world outside of the hackathon.},
journal = {J. Comput. Sci. Coll.},
month = apr,
pages = {72–84},
numpages = {13}
}

@inproceedings{10.1145/3502718.3524790,
author = {Rachmatullah, Arif and Vandenberg, Jessica and Wiebe, Eric},
title = {Toward More Generalizable CS and CT Instruments: Examining the Interaction of Country and Gender at the Middle Grades Level},
year = {2022},
isbn = {9781450392013},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3502718.3524790},
doi = {10.1145/3502718.3524790},
abstract = {The lack of gender diversity in the computer science (CS) field and workforce is a well-documented challenge that many, but not all, countries face. Such a challenge may tie to socio-cultural issues that have impacted K-12 CS education, eventually creating a gender gap in CS performance and attitudes. The current study compared American and Indonesian middle school students' computational thinking (CT) skills and CS attitudes. Concurrently, this study also examined whether the items in the instruments we used exhibit country, gender, or prior CS experience measurement biases. A total of 592 American n = 242 and Indonesian n = 350 middle school students took a CT assessment and CS attitudes scale. Differential item functioning (DIF) was used to detect biased items, and a two-way ANOVA was utilized to examine the interaction effects of country and gender in the two constructs. The results showed some items were flagged as having country-specific DIF. The results also indicated that the American students had higher CT scores than Indonesian students. However, Indonesian students obtained higher CS attitudes scores compared to American students. Further results showed a significant gender difference in CS attitudes in the American samples; however, such a significant difference was not found in the Indonesian sample. These findings underscore the importance of a country's socio-cultural context in influencing gender diversity in the CS field.},
booktitle = {Proceedings of the 27th ACM Conference on on Innovation and Technology in Computer Science Education Vol. 1},
pages = {179–185},
numpages = {7},
keywords = {computational thinking, cs attitudes, gender, international study},
location = {Dublin, Ireland},
series = {ITiCSE '22}
}

@article{10.1145/3486642,
author = {Repenning, Alexander and Basawapatna, Ashok},
title = {Explicative programming},
year = {2021},
issue_date = {November 2021},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {64},
number = {11},
issn = {0001-0782},
url = {https://doi.org/10.1145/3486642},
doi = {10.1145/3486642},
abstract = {Making Computational Thinking relevant to schools.},
journal = {Commun. ACM},
month = oct,
pages = {30–33},
numpages = {4}
}

@inproceedings{10.1145/3386527.3406747,
author = {Nandan, Vrinda and Spittlemeister, Andrew and Brubacher, Federico},
title = {Pixasso: A Development Stage-Based Learning Application for Children},
year = {2020},
isbn = {9781450379519},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3386527.3406747},
doi = {10.1145/3386527.3406747},
abstract = {This paper describes an educational tool developed to teach coding and computational thinking to children. We designed and implemented an adaptive, interactive learning game application (mobile and web) called "Pixasso". In this application, children will write a simple program to color the 'pixels' of an image. Through the game application, they will learn programming commands, sequencing and debugging. This educational application was built using prevailing research on child centered design knowledge regarding child user interface and experience and aims to help scale initiatives dedicated towards introducing children to computer science at an early age.},
booktitle = {Proceedings of the Seventh ACM Conference on Learning @ Scale},
pages = {361–364},
numpages = {4},
keywords = {coding, computational thinking, educational technology, child centered design},
location = {Virtual Event, USA},
series = {L@S '20}
}

@inproceedings{10.1145/3408877.3439578,
author = {Crasto, Ethan and Mirakhur, Zitsi},
title = {Computer Science Instruction and Academic Outcomes in Other Subjects},
year = {2021},
isbn = {9781450380621},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3408877.3439578},
doi = {10.1145/3408877.3439578},
abstract = {Participation in computer science (CS) education is growing across the K-12 spectrum. This enthusiasm for CS is driven, in part, by the belief that through CS instruction, students will learn computational thinking (CT) skills, which can also be applied to domains outside CS. We add to this literature by examining whether or not there is a relationship between receiving CS instruction and students' academic performance in non-CS subject areas. Using a fixed-effects regression methodology with course-taking records from New York City, we examine the association between CS instruction and course grades for high school students. We find small positive associations between CS instruction and end-of-year grades in English, Math, Science, and Social Studies.},
booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
pages = {1333},
numpages = {1},
keywords = {computational thinking, computing education, k-12 course enrollment, student success},
location = {Virtual Event, USA},
series = {SIGCSE '21}
}

@inproceedings{10.1145/3486011.3486417,
author = {Conde, Miguel \'{A}ngel and Fern\'{a}ndez, Camino and Rodr\'{\i}guez-Sedano, Francisco and Gonz\'{a}lez-Barrientos, Covadonga and Ramos, Maria and Jesus, Manuel and Gon\c{c}alves, Jos\'{e} and Reimann, Daniela and Garc\'{\i}a Pe\~{n}alvo, Francisco Jos\'{e} and Jormanainen, Ilkka},
title = {RoboSTEAM project the pilot phases},
year = {2021},
isbn = {9781450390668},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3486011.3486417},
doi = {10.1145/3486011.3486417},
abstract = {Digital society demands very qualified professionals ready to this environment challenges. This makes necessary to foster the development of competences related to such context such as Computational Thinking or STEAM related skills. However, this is not an easy task, especially because integrating subjects that covers the necessary topics and competences. New active pedagogical approaches are required and this what RoboSTEAM project provides. The application of Challenge Based Learning and Physical Devices and Robotics facilitate the so named twenty first century skills. The project has been developed by several universities and schools and one of most critical parts was testing the methodology and tools, this was done into pilot phases that are described in the present work. The results show that there are important differences between partners socioeconomical context, but that the outcomes of the project are flexible enough to be applied successfully in any of them.},
booktitle = {Ninth International Conference on Technological Ecosystems for Enhancing Multiculturality (TEEM'21)},
pages = {44–50},
numpages = {7},
keywords = {Computational Thinking, Evaluation, Physical Devices, Pilots, Robotics, STEAM},
location = {Barcelona, Spain},
series = {TEEM'21}
}

@article{10.1145/3578523,
author = {Yal\c{c}\i{}n, \"{O}zge Nilay and Lall\'{e}, S\'{e}bastien and Conati, Cristina},
title = {The Impact of Intelligent Pedagogical Agents’ Interventions on Student Behavior and Performance in Open-Ended Game Design Environments},
year = {2023},
issue_date = {September 2023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {13},
number = {3},
issn = {2160-6455},
url = {https://doi.org/10.1145/3578523},
doi = {10.1145/3578523},
abstract = {Research has shown that free-form Game-Design (GD) environments can be very effective in fostering Computational Thinking (CT) skills at a young age. However, some students can still need some guidance during the learning process due to the highly open-ended nature of these environments. Intelligent Pedagogical Agents (IPAs) can be used to provide personalized assistance in real-time to alleviate this challenge. This paper presents our results in evaluating such an agent deployed in a real-word free-form GD learning environment to foster CT in the early K-12 education, Unity-CT. We focus on the effect of repetition by comparing student behaviors between no intervention, 1-shot, and repeated intervention groups for two different errors that are known to be challenging in the online lessons of Unity-CT. Our findings showed that the agent was perceived very positively by the students and the repeated intervention showed promising results in terms of helping students make fewer errors and more correct behaviors, albeit only for one of the two target errors. Building from these results, we provide insights on how to provide IPA interventions in free-form GD environments.},
journal = {ACM Trans. Interact. Intell. Syst.},
month = sep,
articleno = {11},
numpages = {29},
keywords = {Pedagogical agent, real-time support, game design, computational thinking, open-ended learning environments}
}

@inproceedings{10.1145/3711403.3711485,
author = {Zhao, Wei and Nie, Zhenhua and Li, Xiaoming},
title = {Teaching Practice of C Language Programming under the Constructivist Learning Paradigm},
year = {2025},
isbn = {9798400717468},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3711403.3711485},
doi = {10.1145/3711403.3711485},
abstract = {The construction of new engineering disciplines and the “Double Tops” initiative have put forward new requirements for the training of engineering professionals. Taking the course of C language programming as an example, this paper analyzes the pain points in current course teaching, combines the characteristics of students’ learning situation, takes students as the center, and based on the knowledge graph, an effective tool for organizing resources, carries out a modular teaching practice of C language programming design under the constructivist learning paradigm. Integrating the OBE (Outcomes-Based Education) concept into teaching, it enhances students’ practical ability, cultivates their computational thinking, and highlights the training of students’ ability to analyze and solve complex engineering problems and creative thinking. The exploration and practice of this course teaching can provide reference and reference for the teaching design of other programming courses.},
booktitle = {Proceedings of the 2024 7th International Conference on Educational Technology Management},
pages = {504–508},
numpages = {5},
keywords = {Program design, constructivist learning, teaching mode, teaching reform and practice},
location = {
},
series = {ICETM '24}
}

@inproceedings{10.1145/3328778.3366906,
author = {Nanavati, Amal and Owens, Aileen and Stehlik, Mark},
title = {Pythons and Martians and Finches, Oh My! Lessons Learned from a Mandatory 8th Grade Python Class},
year = {2020},
isbn = {9781450367936},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3328778.3366906},
doi = {10.1145/3328778.3366906},
abstract = {As computing technologies continue to have a greater impact on daily life, it becomes increasingly important for the K-12 education system to prepare students for the computerized world. In this paper, we present the curriculum design, implementation, and results from a one-trimester introductory Python course that is mandatory for all 8th graders in our school district. This course is a crucial component of the K-12 computational thinking pathways we are developing at our school district, which take students from block-based programming and computational thinking (elementary school) to text-based programming and applications of computer science (high school). Our mandatory 8th grade course serves as a bridge between these two components. We present qualitative results that highlight the challenges that arose from teaching a course for all students -- not just those with a prior interest in computing -- and how the instructor overcame those challenges. We also present quantitative results that demonstrate the course's positive impact on students' attitudes towards computer science, their intent to re-engage with computer science in the future, and the gender gap with regards to confidence in computer science.},
booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
pages = {811–817},
numpages = {7},
keywords = {computational thinking, k-12 computer science education, robotics},
location = {Portland, OR, USA},
series = {SIGCSE '20}
}

@inproceedings{10.1145/3626253.3635522,
author = {Ruiz, Pati and Rangel, Alessandra and Coenraad, Merijke},
title = {Using Generative AI to Support PK-12 Teaching and Learning: Developing Sample Lessons and More},
year = {2024},
isbn = {9798400704246},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3626253.3635522},
doi = {10.1145/3626253.3635522},
abstract = {North Salem Central School District (North Salem) has worked with researchers as part of a larger Research Practice Partnership (RPP) to design and implement an inclusive PK-12 computing pathway in their district. This poster describes how teachers used Generative AI (GenAI) tools in three areas: (1) the development of sample computational thinking (CT) lesson plans; (2) initial brainstorming; and (3) professional learning.As North Salem reflected on their use of GenAI tools, they named two AI tools specifically: OpenAI's ChatGPT-4 and Bing's Image Creator. Teachers also describe ethical dilemmas that they faced when integrating GenAI tools as well as other concerns that will be described below. This work builds on the growing literature on the use of Generative AI tools to support the day-to-day work of teachers.},
booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1800–1801},
numpages = {2},
keywords = {K-12 computer science education, ducational equity, formative assessment},
location = {Portland, OR, USA},
series = {SIGCSE 2024}
}

@inproceedings{10.1145/3639631.3639651,
author = {Liang, Yuan and Wang, Mei},
title = {Multiple Kernel Learning for Learner Classification},
year = {2024},
isbn = {9798400709203},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3639631.3639651},
doi = {10.1145/3639631.3639651},
abstract = {Abstract:At present, educational researchers are continuously exploring new ways of learner models. To solve the problems of data bias and feature mismatch that may occur in learner modeling on heterogeneous data, this paper uses the method of Multiple Kernel Learning (MKL) to accurately portray the features of learners' thinking skills and construct a classification model for top talents. First, by analyzing the thinking skills that have the greatest impact on top talents, the features of critical thinking skills, logical thinking skills and computational thinking skills are extracted separately. Then, a learner classification model for top talents was constructed by MKL method. Finally, the model was validated on the dataset and compared with the results of single-kernel learning. The experimental results show that the accuracy of the classification model for top talents based on MKL is significantly better than that of ordinary single-kernel learning, which indicates that the method of MKL performs better in the learner classification model.},
booktitle = {Proceedings of the 2023 6th International Conference on Algorithms, Computing and Artificial Intelligence},
pages = {113–118},
numpages = {6},
keywords = {Learner Classification, Multiple Kernel Learning, Thinking Skills, Top Talents},
location = {Sanya, China},
series = {ACAI '23}
}

@article{10.1145/3336126,
author = {Merkouris, Alexandros and Chorianopoulos, Konstantinos},
title = {Programming Embodied Interactions with a Remotely Controlled Educational Robot},
year = {2019},
issue_date = {December 2019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {19},
number = {4},
url = {https://doi.org/10.1145/3336126},
doi = {10.1145/3336126},
abstract = {Contemporary research has explored educational robotics, but it has not examined the development of computational thinking in the context of programming embodied interactions. Apart from the goal of the robot and how the robot will interact with its environment, another important aspect that should be taken into consideration is whether and how the user will physically interact with the robot. We recruited 36 middle school students to participate in a six-session robotics curriculum in an attempt to expand their learning in computational thinking. Participants were asked to develop interfaces for the remote control of a robot using diverse interaction styles from low-level to high-level embodiment, such as touch, speech, and hand and full-body gestures. We measured students’ perception of computing, examined their computational practices, and assessed the development of their computational thinking skills by analyzing the sophistication of the projects they created during a problem-solving task. We found that students who programmed combinations of low embodiment interfaces or interfaces with no embodiment produced more sophisticated projects and adopted more sophisticated computational practices compared to those who programmed full-body interfaces. These findings suggest that there might be a tradeoff between the appeal and the cognitive benefit of rich embodied interaction with a remotely controlled robot. In further work, educational robotics research and competitions might be complemented with a hybrid approach that blends the traditional autonomous robot movement with student enactment.},
journal = {ACM Trans. Comput. Educ.},
month = jul,
articleno = {40},
numpages = {19},
keywords = {Embodied learning, assessment, children, computational thinking, educational robotics, embodiment, human–robot interaction}
}

@inproceedings{10.1145/3545947.3576246,
author = {Damle, Param and Bull, Glen and Watts, Jo and Nguyen, N. Rich},
title = {Automated Structural Evaluation of Block-based Coding Assignments},
year = {2023},
isbn = {9781450394338},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3545947.3576246},
doi = {10.1145/3545947.3576246},
abstract = {As computer science is integrated into a wider variety of fields, block-based programming languages like Snap!, which assemble code with visual blocks rather than text syntax, are increasingly used to teach computational thinking (CT) to students from diverse backgrounds. Although automated evaluators (autograders) for programming assignments usually focus on runtime efficiency and output accuracy, effective evaluation of a student's CT skills requires assessing coding best practices, such as decomposition, abstraction, and algorithm design. While autograders are commonplace for text languages like Python, we present a machine learning approach to assess how effectively block-based code demonstrates understanding of CT fundamentals. Our dataset consists of Snap! programs written by students new to coding and evaluated by instructors using a CT rubric. We explore how to best transform these programs into low-dimensional features to allow encapsulation and repetition patterns to emerge. Experimentation involves comparing the effectiveness of a suite of clustering models and similarity metrics by analyzing how directly automated feedback correlates to the course staff's manual evaluation. Lastly, we demonstrate the practical application of the autograder in a classroom setting and discuss scalability and feasibility in other domains of CS education.},
booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1300},
numpages = {1},
keywords = {block-based coding, clustering, computational thinking, machine learning, student assessment, visual programming},
location = {Toronto ON, Canada},
series = {SIGCSE 2023}
}

@inproceedings{10.1145/3466725.3466767,
author = {Negrini, Lucio and Reyes Reyes Mury, Sophia and Skweres, Melissa and Kollegger, Nina},
title = {Demonstration of Roteco - the robotic teacher community: An informative, collaborative platform with a unique community ecosystem},
year = {2021},
isbn = {9781450389891},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3466725.3466767},
doi = {10.1145/3466725.3466767},
abstract = {Today the digital society in which we live requires the acquisition of new computer-related skills, such as computational thinking or coding skills, as well as cross-curricular skills, such as communication, collaboration and creativity. Preparing and inspiring educators to discover, learn and contribute to child-centered innovative ideas and emerging technologies is at the heart of our mission. Within the framework of the project, a teacher training concept, a collaboration platform and various pedagogical resources have been developed. The demonstration will present the DNA of the Roteco project, the collaborative platform and its contents and how Roteco is currently supporting its community of educators. Roteco encourages synergies with FabLearn Europe / MakeEd and in the spirit of open-ended exploration encourages the possibilities.},
booktitle = {FabLearn Europe / MakeEd 2021 - An International Conference on Computing, Design and Making in Education},
articleno = {22},
numpages = {3},
keywords = {Coding, Community, Computational thinking, Educational Robotics, FabLearn, Informatic, K-12 education, Programming, STEM education, constructivism, socio-constructivism&nbsp;},
location = {St. Gallen, Switzerland},
series = {FabLearn Europe / MakeEd 2021}
}

@inproceedings{10.1145/3641555.3705157,
author = {Servin, Christian and Becker, Brett A. and Garcia, Emiliano},
title = {Cultivating Sense of Belonging in Computing Education: Identifying Servingness Traits Among Community College Population},
year = {2025},
isbn = {9798400705328},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3641555.3705157},
doi = {10.1145/3641555.3705157},
abstract = {Adversarial Thinking (AT) is essential in cybersecurity, fostering strategic problem-solving by anticipating worst-case scenarios. However, its integration into early computing education, especially in the first two years, remains underexplored. Introductory courses like CS 0 build foundational skills but are challenging to implement in resource-limited community colleges. Strengthening AT in these students can enhance their workforce readiness and support transfers to four-year programs. Servingness describes how Hispanic-Serving Institutions (HSIs) go beyond merely enrolling Latinx students to address their specific cultural, academic, and social needs. It involves creating inclusive environments where students feel a strong sense of belonging, supported by culturally relevant practices, leadership opportunities, and community engagement. These environments generate feelings of being accepted, valued, and included within a community or group, also called a sense of belonging. This work presents research focused on the incorporation of AT within the first two years of computer science education at community colleges, in particular to a course CS 0. By examining the integration of AT principles in early coursework, the study identifies key characteristics and a sense of belonging that are instrumental in cultivating AT capabilities among students. The findings aim to offer actionable insights for educators in community colleges, enabling them to more effectively prepare students for the complexities of modern computing careers and to address the broader needs of the cybersecurity field. Through this targeted educational approach, students can develop a more robust understanding of adversarial strategies, enhancing their overall computational thinking and problem-solving skills.},
booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1617–1618},
numpages = {2},
keywords = {CS 1, adversarial thinking, community colleges, sense of belonging, servingness},
location = {Pittsburgh, PA, USA},
series = {SIGCSETS 2025}
}

@inproceedings{10.1145/3631802.3631835,
author = {Kunz, Katrin},
title = {Developing, Validating, and Implementing a Mental Model Test for Primary School Students (Doctoral Consortium)},
year = {2024},
isbn = {9798400716539},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3631802.3631835},
doi = {10.1145/3631802.3631835},
abstract = {This doctoral research aims to address the lack of empirical studies on identifying mental models in primary school students, particularly in relation to programming concepts such as loops and conditionals. The objective is to develop and validate a mental model test and explore its potential in enhancing programming competence. The research will employ a mixed methods approach, utilizing an online questionnaire and interviews with primary school students attending computational thinking courses. The test will be validated by subject matter experts, and its correlation with other instruments will be assessed for criterion validation. Subsequently, the validated test will be implemented within a conceptual change teaching approach to evaluate its applicability and impact through a randomized controlled field trial.},
booktitle = {Proceedings of the 23rd Koli Calling International Conference on Computing Education Research},
articleno = {30},
numpages = {2},
keywords = {mental model, mixed methods, test instrument validation},
location = {Koli, Finland},
series = {Koli Calling '23}
}

@inproceedings{10.1145/3544548.3581035,
author = {Cen, Jingyao and Xu, Tian and Yu, Junnan},
title = {Examining Gender-oriented Design Features in Computational Toys and Kits for Young Children},
year = {2023},
isbn = {9781450394215},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3544548.3581035},
doi = {10.1145/3544548.3581035},
abstract = {Computational toys and apps, or coding kits, are the primary learning media for young children to engage in Computational Thinking concepts and skills. However, how coding kits are designed to welcome children of different genders remains unclear, a critical research gap given that computing is mostly a male-dominated field. Drawing on relevant literature, we develop a framework of gender-related design features in toys (i.e., boy-oriented, girl-oriented, or gender-neutral features) and employ it to examine gender-related design features in commercially available coding kits for young children aged seven and under (N=110). The findings reveal the lopsided gender representation in coding kits, e.g., their physical forms and supported coding activities are predominantly boy-oriented. We discuss design and research implications for coding kits to welcome participation from children of different genders, especially young girls whose preferred design features are underrepresented in current designs.},
booktitle = {Proceedings of the 2023 CHI Conference on Human Factors in Computing Systems},
articleno = {303},
numpages = {19},
keywords = {Coding kits, gendered design features, inclusiveness, young children},
location = {Hamburg, Germany},
series = {CHI '23}
}

@inproceedings{10.1145/3328778.3366808,
author = {Salehi, Shima and Wang, Karen D. and Toorawa, Ruqayya and Wieman, Carl},
title = {Can Majoring in Computer Science Improve General Problem-solving Skills?},
year = {2020},
isbn = {9781450367936},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3328778.3366808},
doi = {10.1145/3328778.3366808},
abstract = {Teaching students to become skillful problem solvers is a goal of university education, but it has been difficult to measure such skill or demonstrate the benefits of particular educational experiences. This paper presents a study of college students solving a problem unrelated to their academic majors. The analysis suggests that the educational experiences of Computer Science (CS) students may better train them in problem-solving than the experiences of other majors. In this study, students from a variety of undergraduate majors and grade levels were given a 15-minute problem-solving task embedded in an interactive science simulation. The complex task calls upon many problem-solving practices needed by scientists and engineers in their professions. Although this task has little resemblance to the problems encountered in a computer science course, CS students performed significantly better than students in any other major. In addition, only for CS students was there an indication of improvement in problem-solving from lower to upper grade levels. We propose that general problem-solving and computational thinking share some common practices, such as problem decomposition and comprehensive data collection. Furthermore, we present preliminary evidence that training in computational thinking is transferable to problem-solving tasks across domains and discuss how the unique features of CS programming assignments could be generalized to other science and engineering courses to foster students' general problem-solving skills.},
booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
pages = {156–161},
numpages = {6},
keywords = {computational thinking, computer science education, problem solving, simulations, student assessment},
location = {Portland, OR, USA},
series = {SIGCSE '20}
}

@inproceedings{10.1145/3459990.3460711,
author = {Chakarov, Alexandra Gendreau and Bush, Jeffrey and Biddy, Quentin L and Jacobs, Jennifer and Elliott, Colin Hennessy and Sumner, Tamara},
title = {Challenges and Unexpected Affordances of Physical Computing Going Remote},
year = {2021},
isbn = {9781450384520},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3459990.3460711},
doi = {10.1145/3459990.3460711},
abstract = {Engaging in physical computing activities involving both hardware and software provides a hands-on introduction to computer science. The move to remote learning for primary and secondary schools during the 2020-2021 school year due to COVID-19 made implementing physical computing activities especially challenging. However, it is important that these activities are not simply eliminated from the curriculum. This paper explores how a unit centered around students investigating how programmable sensors that can support data-driven scientific inquiry was collaboratively adapted for remote instruction. A case study of one teacher’s experience implementing the unit with a group of middle school students (ages 11 to 14) in her STEM elective class examines how her students could still engage in computational thinking practices around data and programming. The discussion includes both the challenges and unexpected affordances of engaging in physical computing activities remotely that emerged from her implementation.},
booktitle = {Proceedings of the 20th Annual ACM Interaction Design and Children Conference},
pages = {276–282},
numpages = {7},
keywords = {Computational Thinking, Data Science, K-12 Computing Education, Physical Computing},
location = {Athens, Greece},
series = {IDC '21}
}

@inproceedings{10.1145/3649405.3659482,
author = {Maximova, Alexandra},
title = {Teaching Programming through Multi-Context Physical Computing},
year = {2024},
isbn = {9798400706035},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3649405.3659482},
doi = {10.1145/3649405.3659482},
abstract = {With the growing demand for computational skills in the job market, it's imperative that lower secondary school students grasp basic programming concepts such as repetition, modularity, conditionals, and variables. Yet, many students perceive computer science as daunting and irrelevant. Physical computing offers a promising solution to this motivational gap. It enhances intrinsic motivation, self-efficacy, and positive attitudes towards technology. Moreover, they engage students who may not identify as typical programmers and foster essential computational thinking skills.This research investigates the efficacy of employing the same educational robot in different contexts, such as music, images, colors, and simple video games, while teaching basic programming concepts. We call this approach "multi-context physical computing'' to emphasize the focus on the different application scenarios. We believe that this could benefit students for two reasons. Firstly, by presenting the same concept across different contexts, learners can better grasp the essence of the concept, disentangling it from extraneous contextual associations. Secondly, catering to individual interests by offering diverse contexts may enhance motivation, consequently fostering improved learning outcomes, as predicted by the expectancy-value theory.In order to assess the benefits of the multi-context approach on learning outcomes and motivation, we will compare it to a more traditional single-context approach centered on robot locomotion in a randomized controlled study.},
booktitle = {Proceedings of the 2024 on Innovation and Technology in Computer Science Education V. 2},
pages = {850–851},
numpages = {2},
keywords = {algorithmic thinking, educational robotics, physical computing, secondary school},
location = {Milan, Italy},
series = {ITiCSE 2024}
}

@inproceedings{10.1145/3291533.3291537,
author = {Merkouris, Alexandres and Chorianopoulos, Konstantinos},
title = {Programming touch and full-body interaction with a remotely controlled robot in a secondary education STEM course},
year = {2018},
isbn = {9781450366106},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3291533.3291537},
doi = {10.1145/3291533.3291537},
abstract = {Contemporary research has introduced educational robotics in the classroom, but there are few studies about the effects of alternative embodied interaction modalities on computational thinking and science education. Twenty-six middle school students were asked to program interfaces for controlling the heading and speed of a robot using two types of embodied interaction modalities. We compared touch and full-body gestures to autonomous control, which does not require any embodied interaction. We assessed the development of their computational thinking skills by analyzing the projects they created during a problem-solving task and examined their understandings of science concepts related to kinematics. We found that novice students preferred full-body interfaces, while advanced students moved to more disembodied and abstract computational thinking. These findings might be applied to focus computing and science education activities to the right age and abilities groups of students.},
booktitle = {Proceedings of the 22nd Pan-Hellenic Conference on Informatics},
pages = {225–229},
numpages = {5},
keywords = {assessment, children, computational thinking, educational robotics, embodied learning, human-robot interaction},
location = {Athens, Greece},
series = {PCI '18}
}

@inproceedings{10.1145/3450329.3476860,
author = {Fronza, Ilenia and Corral, Luis and Iaccarino, Gennaro and Pahl, Claus},
title = {Enabling Peer-Led Coding Camps by Creating a Seed Effect in Young Students},
year = {2021},
isbn = {9781450383554},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3450329.3476860},
doi = {10.1145/3450329.3476860},
abstract = {During peer-led intensive events (such as hackathons and coding camps), students actively assist others to learn and, in turn, benefit from an effective learning environment. In this paper, we present the results of an observational study, having as a working setting a coding camp based on Computational Thinking (CT), to explore how peer-led coding camps can create a seed effect in young students. In particular, we analyze how a practical approach to convey CT skills motivates and effectively prepares student tutors. Moreover, we compare the previous and next edition of the camp to identify the specific contribution of the tutors. We observed that students benefit in particular from CT perspectives and develop the necessary motivation to eventually serve as tutors, creating a multiplier effect that benefits a larger number of students of future cohorts. Moreover, our results show that student tutors contributed positively to the facilitation of the subsequent edition of the coding camp.},
booktitle = {Proceedings of the 22nd Annual Conference on Information Technology Education},
pages = {117–122},
numpages = {6},
keywords = {coding camp, computational thinking, peer-assisted learning},
location = {SnowBird, UT, USA},
series = {SIGITE '21}
}

@inproceedings{10.1145/3408877.3432376,
author = {Parker, Miranda C. and Kao, Yvonne S. and Saito-Stehberger, Dana and Franklin, Diana and Krause, Susan and Richardson, Debra and Warschauer, Mark},
title = {Development and Preliminary Validation of the Assessment of Computing for Elementary Students (ACES)},
year = {2021},
isbn = {9781450380621},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3408877.3432376},
doi = {10.1145/3408877.3432376},
abstract = {As reliance on technology increases in practically every aspect of life, all students deserve the opportunity to learn to think computationally from early in their educational experience. To support the kinds of computer science curriculum and instruction that makes this possible, there is an urgent need to develop and validate computational thinking (CT) assessments for elementary-aged students. We developed the Assessment of Computing for Elementary Students (ACES) to measure the CT concepts of loops and sequences for students in grades 3-5. The ACES includes block-based coding questions as well as non-programming, Bebras-style questions. We conducted cognitive interviews to understand student perspectives while taking the ACES. We piloted the assessment with 57 4th grade students who had completed a CT curriculum. Preliminary analyses indicate acceptable reliability and appropriate difficulty and discrimination among assessment items. The significance of this paper is to present a new CT measure for upper elementary students and to share its intentional development process.},
booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
pages = {10–16},
numpages = {7},
keywords = {assessment, computational thinking, elementary education},
location = {Virtual Event, USA},
series = {SIGCSE '21}
}

@inproceedings{10.1145/3311890.3311907,
author = {Lee, Victor R. and Vincent, Heidee},
title = {An Expansively-framed Unplugged Weaving Sequence Intended to Bear Computational Fruit of the Loom},
year = {2019},
isbn = {9781450362443},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3311890.3311907},
doi = {10.1145/3311890.3311907},
abstract = {We report on a late-breaking project that centralizes the Maker practice of loom-based weaving as a locus for unplugged computational thinking. While unplugged activities are appealing for making computation accessible, they also come with the risk of developing inert knowledge. To address and mitigate that risk, we introduce a new framework that we are developing called "Expansively-framed Unplugged" (EfU) computing education. We report on some initial testing and refinement of a learning sequence that starts with weaving on a loom and ends with optimizing code in Scratch. The testing was done with a school librarian who is will be implementing a coding program with students at a middle school library using this EfU sequence.},
booktitle = {Proceedings of FabLearn 2019},
pages = {124–127},
numpages = {4},
keywords = {Computational Thinking, Expansive Framing, Looms, Unplugged, Weaving},
location = {New York, NY, USA},
series = {FL2019}
}

@inproceedings{10.1145/3664934.3664940,
author = {Ponticorvo, Michela and Dell'Aquila, Elena},
title = {Robots at schools: telerobotics, coding and teaching embodied artificial intelligence},
year = {2024},
isbn = {9798400716409},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3664934.3664940},
doi = {10.1145/3664934.3664940},
abstract = {Robots have entered schools and are currently used to achieve different educational goals, as supporting computational thinking, and improving interaction between peers. In this paper we describe 3 uses of robots at schools from European projects practice: we start from telerobotics, where robots are used to support interaction at distance, if students cannot attend lesson. The second example describes how to build an educational pathway with robots to favor inclusion. Then we describe how to use robotics to introduce young students to Embodied Artificial Intelligence. These examples show that robots can be a flexible and effective tool in education as they exploit embodiment.},
booktitle = {Proceedings of the 2024 9th International Conference on Information and Education Innovations},
pages = {1–6},
numpages = {6},
location = {Verbania, Italy},
series = {ICIEI '24}
}

@inproceedings{10.1145/3501712.3535291,
author = {Guler, Sibel Deren and Sotelo, Sheryl and Iwabuchi, Masa},
title = {Tekniverse: Towards a connected future for sensors, education, and action: Fostering Environmental Literacy with IoT and Physical Computing},
year = {2022},
isbn = {9781450391979},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3501712.3535291},
doi = {10.1145/3501712.3535291},
abstract = {The Internet of Things (IoT) is an innovation that is rapidly transforming industries from agriculture to medicine, enabling advances such as real-time data monitoring and remote control. However, IoT's infiltration into education has been much slower, and educational tools that embody these features are few and far between. Together with the Chugach School District in Alaska, we investigated methods to teach middle-school aged students how to use IoT to drive change in their communities and collaborate in a digital world, tied to real time environmental data. The objective of this work is to provide rural, K-12 Alaskan students and teachers with opportunities that will help build an understanding of what is happening in their local environments, increase overall scientific and climate literacy, and contribute to community resilience and connectedness. Rural Alaskan students live in some of the most vulnerable regions of the planet, regions that are highly susceptible to the impacts of climate change. In this work-in-progress paper, we first discuss the design and adaptation of Tekniverse, a hardware and software ecosystem that provides a gateway for students to code and connect hardware projects and data. We then discuss the finding of our initial study of Tekniverse as a learning tool for computational thinking, data analysis, and social responsibility in rural and remote areas with students in Alaska. Lastly, we propose future directions for this research and computational collaborative tools.},
booktitle = {Proceedings of the 21st Annual ACM Interaction Design and Children Conference},
pages = {583–589},
numpages = {7},
keywords = {Computational Thinking, IoT Environmental Literacy, Physical Computing},
location = {Braga, Portugal},
series = {IDC '22}
}

@inproceedings{10.1145/3291279.3341207,
author = {Milgram, Aaron and Jain, Shruti and Ichinco, Michelle},
title = {Identifying Learning Trajectories in Self-Directed Programming},
year = {2019},
isbn = {9781450361859},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3291279.3341207},
doi = {10.1145/3291279.3341207},
abstract = {Many children begin to learn to code in a self-directed context, such as by creating an animation, game or phone app. Recent research has begun to investigate and evaluate the results of this process: children's projects. However, little is known about the different trajectories novices have during the long-term process of self-directed programming learning. Our aim is to identify the existing types of trajectories and be able to determine a specific child's trajectory. If that trajectory does not lead to significant progress or continued motivation, we might be able to nudge them toward a different trajectory.We hypothesized that there may be several main types of trajectories. To explore this, we clustered children's programming progression in order to identify trends. We used a data set of Scratch programs for its large sample size and diverse population [1,3]. We used Dr. Scratch's scoring of computational thinking skills as our initial feature set [2]. Our clustering analysis identified two main groups of users. The first group, 55.8% of users, generally progressed upward over time in their computational thinking skill score. The second group, 44.2% of users, showed little to no improvement over time.These preliminary results raise many questions about these two high-level groupings of trajectories of computational thinking skill demonstration in Scratch projects. In the future we want to further explore the trajectory clusters and what they could mean for supporting self-directed learning of programming.},
booktitle = {Proceedings of the 2019 ACM Conference on International Computing Education Research},
pages = {311},
numpages = {1},
keywords = {coding, computational thinking, novice programming, programming progression, self-directed learning, time-series clustering},
location = {Toronto ON, Canada},
series = {ICER '19}
}

@inproceedings{10.1145/3364510.3364526,
author = {Liebe, Christine and Camp, Tracy},
title = {An Examination of Abstraction in K-12 Computer Science Education},
year = {2019},
isbn = {9781450377157},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3364510.3364526},
doi = {10.1145/3364510.3364526},
abstract = {Computer scientists have been working towards a common definition of abstraction; however, the instruction and assessment of abstraction remain categorically under-researched. Abstraction is often cited as a component of computational thinking and can be likened to a higher order thinking skill. Most K-12 educators have studied critical thinking (e.g., Bloom's taxonomy, Marzano &amp; Kendall's new taxonomy) more than computational thinking. Overlapping characteristics of abstraction and critical thinking can provide educators with instructional guidance. The qualitative examination of how teachers determine curriculum, deliver instruction, and design assessments in K-12 computer science education contributes insights into current instructional practices and variables for future quantitative study. The instructional strategies, objectives, and assessments of 12 K-12 computer science teachers from three states in the United States were examined in this descriptive qualitative examination of instruction using thematic coding analysis. The majority of teachers interviewed had little to no professional development regarding teaching abstraction. All teachers in the study were unsure what student abstraction abilities should be according to grade level. Teachers' understanding of abstraction ranged from very little knowledge to very knowledgeable. The majority of teachers interviewed did not assess abstraction intentionally. Teachers described successfully teaching abstraction through multiple instructional practices and spiraling curriculum. This examination of abstraction in K-12 computer science education offers practical descriptive insights and illuminates additional variables for researching the instruction of abstraction qualitatively and quantitatively. Anecdotal instructional successes are included in the results.},
booktitle = {Proceedings of the 19th Koli Calling International Conference on Computing Education Research},
articleno = {9},
numpages = {9},
keywords = {abstraction, computational thinking, curriculum, instruction},
location = {Koli, Finland},
series = {Koli Calling '19}
}

@inproceedings{10.1145/3459990.3460699,
author = {Rocha, Filipa and Pires, Ana Cristina and Neto, Isabel and Nicolau, Hugo and Guerreiro, Tiago},
title = {Accembly at Home: Accessible Spatial Programming for Children with Visual Impairments and their Families},
year = {2021},
isbn = {9781450384520},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3459990.3460699},
doi = {10.1145/3459990.3460699},
abstract = {Accessible introductory programming environments are scarce, and their study within ecological settings (e.g., at home) is almost non-existent. We present ACCembly, an accessible block-based environment that enables children with visual impairments to perform spatial programming activities. ACCembly allows children to assemble tangible blocks to program a multimodal robot. We evaluated this approach with seven families that used the system autonomously at home. Results showed that both the children and family members learned from what was an inclusive and engaging experience. Children leveraged fundamental computational thinking concepts to solve spatial programming challenges; parents took different roles as mediators, some actively teaching and scaffolding, others learning together with their child. We contribute with an environment that enables children with visual impairments to engage in spatial programming activities, an analysis of parent-child interactions, and reflections on inclusive programming environments within a shared family experience.},
booktitle = {Proceedings of the 20th Annual ACM Interaction Design and Children Conference},
pages = {100–111},
numpages = {12},
keywords = {Accessible, Children, Collaboration, Computational thinking, Robot, Tangible, Visually impaired},
location = {Athens, Greece},
series = {IDC '21}
}

@inproceedings{10.1145/3687311.3687374,
author = {Lv, Cheng},
title = {Course construction based on FD-QM standards and analysis and mining of course data},
year = {2024},
isbn = {9798400709920},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3687311.3687374},
doi = {10.1145/3687311.3687374},
abstract = {In response to the shortcomings of the SPOC course "Introduction to Computational Thinking" at Beijing University of Civil Engineering and Architecture, the teaching team has transformed and improved the course design and practice based on the existing High quality undergraduate courses in Beijing universities and Beijing Curriculum Ideological and Political Demonstration Course. We aim to maintain consistency and linkage in learning objectives, learning assessments, teaching materials, learning activities, and course technology under the principle of consistent construction. Learning objectives are clearer and more measurable; learning assessment is more scientific, diverse, and reliable; Curriculum resources can meet the needs of students at different levels and majors; learning activities can fully mobilize students' subjective initiative; Curriculum technology helps to achieve learning objectives, and can reflect the characteristics of the discipline, with universality and progressiveness. Through the construction and practice of the FD-QM standard, the course team has established the principles of course standardization, clarified the direction of course material construction, drawn a knowledge graph of course knowledge points, accurately grasped the degree of learning objectives, upgraded the "characteristic" teaching resource library, enhanced student interest, and integrated ideological and political education into the curriculum, ultimately achieving a comprehensive improvement in the quality of course teaching.},
booktitle = {Proceedings of the 2024 International Conference on Intelligent Education and Computer Technology},
pages = {348–355},
numpages = {8},
location = {Guilin, China},
series = {IECT '24}
}

@inproceedings{10.1145/3545947.3573341,
author = {Silvia, Devin W. and Caballero, Marcos D. and Finzell, Thomas and Frisbie, Rachel and Hamerski, Patti and Bolger, Emily and Castle, Sarah and Roca, Rachel and Tourangeau, Paige},
title = {Computing in Support of Disciplinary Learning},
year = {2023},
isbn = {9781450394338},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3545947.3573341},
doi = {10.1145/3545947.3573341},
abstract = {Few would argue that modern careers across a wide range of disciplines can be performed in the absence of computing in one form or another. As such, it is becoming increasingly important for our education system to appropriately prepare students for the modern world by integrating computing and computational thinking into how students learn disciplinary content (i.e. disciplines outside of computer science). However, how to best perform this integration is not yet known, nor is there likely to be one ''best'' method. In this session, we will facilitate a discussion of the variety of ways in which post-secondary institutions are actively using computing to support disciplinary learning by highlighting examples while also considering mechanisms not yet explored. We invite anyone who wants to learn more about current efforts, share their own experiences, and contribute ideas for future endeavors. In an effort to maximize the diversity of perspectives in this discussion, we've included discussion leaders who span a variety of roles within curriculum development and classroom instruction and encourage participants from all levels and backgrounds.},
booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1247},
numpages = {1},
keywords = {computational literacy, computational thinking, computing education, curriculum design, disciplinary education},
location = {Toronto ON, Canada},
series = {SIGCSE 2023}
}

@inproceedings{10.1145/3501385.3543979,
author = {Parker, Miranda C. and Garcia, Leiny and Kao, Yvonne S. and Franklin, Diana and Krause, Susan and Warschauer, Mark},
title = {A Pair of ACES: An Analysis of Isomorphic Questions on an Elementary Computing Assessment},
year = {2022},
isbn = {9781450391948},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3501385.3543979},
doi = {10.1145/3501385.3543979},
abstract = {Background and Context. With increasing efforts to bring computing education opportunities into elementary schools, there is a growing need for assessments, with arguments for validity, to support research evaluation at these grade levels. After successfully piloting a 10-question computational thinking assessment (Assessment of Computing for Elementary Students – ACES) for 4th graders in Spring 2020, we used our analyses of item difficulty and discrimination to iterate on the assessment. Objectives. To increase the number of potential items for ACES, we created isomorphic versions of existing questions. The nature of the changes varied from incidental changes that we did not believe would impact student performance to more radical changes that seemed likely to influence question difficulty. We sought to understand the impact of these changes on student performance. Method. Using these isomorphic questions, we created two versions of our assessment and piloted them in Spring 2021 with 235 upper-elementary (4th grade) students. We analyzed the reliability of the assessments using Cronbach’s alpha. We used Chi-squared tests to analyze questions that were identical across the two assessments to form a baseline of comparison and then ran Chi-Squared and Kruskal-Wallis H tests to analyze the differences between the isomorphic copies of the questions. Findings. Both assessment versions demonstrated good reliability, with identical Cronbach’s alphas of 0.868. We found statistically similar performance on the identical questions between our two groups of students, allowing us to compare their performance on the isomorphic questions. Students performed differently on the isomorphic questions, indicating the changes to the questions had a differential impact on student performance. Implications. This paper builds on existing work by presenting methods for creating isomorphic questions. We provide valuable lessons learned, both on those methods and on the impact of specific types of changes on student performance.},
booktitle = {Proceedings of the 2022 ACM Conference on International Computing Education Research - Volume 1},
pages = {2–14},
numpages = {13},
keywords = {assessment, computational thinking, elementary education},
location = {Lugano and Virtual Event, Switzerland},
series = {ICER '22}
}

@inproceedings{10.1145/3368308.3415376,
author = {Maiorana, Francesco and Csizmadia, Andrew P. and Richards, Gretchen M.},
title = {P12 Computing in Italy, England and Alabama, USA},
year = {2020},
isbn = {9781450370455},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3368308.3415376},
doi = {10.1145/3368308.3415376},
abstract = {It is recognized that Computing requires many competencies covering a wide range of domains exhibiting an impressive changing rate. This paper examines three primary competencies, which are: 1) Algorithms, Programming, Data, and Computational Thinking (CT); 2) Networks, Internet and Security; and 3) Ethics. Due to the standards and relationship of competences, the authors categorized, algorithms, programming, data and CT together. Thus, we leveraged national guidelines in Italy, mandatory national computing curriculum in England, and state guidelines in Alabama, USA in conjunction with ACM computing frameworks. The primary lessons learned from comparing computing curricula, and implications for implementing computing education curriculum are discussed.},
booktitle = {Proceedings of the 21st Annual Conference on Information Technology Education},
pages = {242–247},
numpages = {6},
keywords = {algorithms, computational thinking, data, ethics, internet, networking, programming, security},
location = {Virtual Event, USA},
series = {SIGITE '20}
}

@inproceedings{10.1145/3582580.3582629,
author = {Zheng, Yunping and Sarem, Mudar},
title = {C++ Teaching Reform and Exploration Based on ACM/ICPC and Live Code},
year = {2023},
isbn = {9781450398015},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3582580.3582629},
doi = {10.1145/3582580.3582629},
abstract = {How to further increase the programming interest of the C++ course for all freshmen is still a very challenging problem for the time being. The International Collegiate Programming Contest (ICPC) is sponsored by the Association for Computing Machinery (ACM). It is an annual competition designed to showcase college students' innovative ability, team spirit and ability to write programs, and analyze and solve problems under pressure. Aiming at the main problems existing in traditional C++ curriculum teaching, a live code teaching method and an ACM/ICPC innovation model are proposed in this paper that highlights the "student-centered" teaching concept. By taking the "problem-solving" as the main line of teaching, the "live code" as the teaching method, and the informatization teaching as the means, the ACM/ICPC competition promotes the integration of the students' theory and practice. The results of more than ten years of practical teaching show that the proposed live code pedagogy and the ACM/ICPC-based reform have effectively cultivated the students' programming interest and computational thinking, and significantly improved their programming and innovation abilities. At present, the live code teaching method and the ACM/ICPC innovation model have been effectively promoted and applied in the three campuses of our university, as they have a certain leading and exemplary role in cultivating strong professional programming skills, computational thinking, global vision and the all-round development of top-notch innovative talents in the computer field.},
booktitle = {Proceedings of the 2022 5th International Conference on Education Technology Management},
pages = {281–286},
numpages = {6},
keywords = {ACM/ICPC, C++, Live code, Online Learning, Teaching method},
location = {Lincoln, United Kingdom},
series = {ICETM '22}
}

@inproceedings{10.1145/3641555.3705225,
author = {Brilliantova, Angelina and Vitko, Asya and Bez\'{a}kov\'{a}, Ivona and Butler, Zack},
title = {Pencil Puzzles as a Context in Upper-level Core Computing Courses at Multiple Institutions},
year = {2025},
isbn = {9798400705328},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3641555.3705225},
doi = {10.1145/3641555.3705225},
abstract = {Context-based assignments have been shown as effective and popular for introductory-level computing courses. We study the use of one such context, pencil puzzles (puzzles typically found in newspapers), in upper-level core computing courses. These puzzles are designed to inspire computational thinking, making them a great choice for introductory-level computing assignments, but their fit for upper-level courses is less clear. We collaborated with several instructors of upper-level courses at four institutions, who delivered a pencil-puzzle-based assignment in their course and allowed us to survey their students about their experience. Overall, the students indicated positive perceptions of the assignments. The most varied answers related to implementation aspects of the assignments. To analyze correlations between students' sentiments and their demographic and experiential background, we used mixed-effects regression modeling to analyze this heterogeneous data set. The survey responses were characterized by two dimensions, one roughly corresponding to students' sentiment about the assignment and the other to their technical assessment of the assignment. For the first dimension, we found that the students' self-reported level of preparedness from earlier courses positively correlated with their enjoyment of and satisfaction with the pencil puzzle assignment. The second dimension was correlated with both the level of preparedness as well as the students' self-reported problem solving type: Clarifier, Implementor, Ideator, and Developer. Somewhat surprisingly, the analysis indicated Ideator as being the most positively correlated with the technical aspects of the assignment. Notably, the analysis did not indicate any correlation with students' race or gender in either dimension.},
booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1399–1400},
numpages = {2},
keywords = {context-based assignments, multi-institutional study, statistical model choice, upper-level core computing courses},
location = {Pittsburgh, PA, USA},
series = {SIGCSETS 2025}
}

@inproceedings{10.1145/3434780.3436705,
author = {Rodr\'{\i}guez-Garc\'{\i}a, Juan David and Moreno-Le\'{o}n, Jes\'{u}s and Rom\'{a}n-Gonz\'{a}lez, Marcos and Robles, Gregorio},
title = {Introducing Artificial Intelligence Fundamentals with LearningML: Artificial Intelligence made easy},
year = {2021},
isbn = {9781450388504},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3434780.3436705},
doi = {10.1145/3434780.3436705},
abstract = {This paper is a summary of the webinar hold on October 22nd at the “Computational thinking and robotics in education” track in which the LearningML project was presented. The LearningML project aims to bring the fundamentals of Artificial Intelligence (AI) to children and people interested in acquiring knowledge on this subject in an easy way. AI has heavily irrupted in society and everyone is using, more or less consciously, application based on AI. Therefore, some kind of AI literacy is needed if we are to educate critically thinking citizens able to understand technologies that have a relevant impact on their lives. In this presentation we show how LearningML can help us to reach this goal trough programming applications based on Machine Learning (ML), the most prevalent subfield of AI today.},
booktitle = {Eighth International Conference on Technological Ecosystems for Enhancing Multiculturality},
pages = {18–20},
numpages = {3},
keywords = {Artificial intelligence, K-12, assessment, computational thinking, machine learning},
location = {Salamanca, Spain},
series = {TEEM'20}
}

@inproceedings{10.1145/3175536.3175542,
author = {Kim, Jeong Ah and Kim, Hee Jin},
title = {Flipped Learning of Scratch Programming with code.org},
year = {2017},
isbn = {9781450354356},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3175536.3175542},
doi = {10.1145/3175536.3175542},
abstract = {In this paper, we describe the effect of code.org as pre-class resources for flipped learning of Scratch programming education. Pre-class resources are very important for increase the outcome of the flipped learning. These days, there are so many open courseware about coding available for pre-class. The objectives of programming might be to increase the computational thinking for problem solving. In this research, we suggest that flipped learning is very good way to increase the computational thinking for problem solving and code.org is good resource for pre-class.},
booktitle = {Proceedings of the 9th International Conference on Education Technology and Computers},
pages = {68–72},
numpages = {5},
keywords = {Flipped learning, Scratch programming, computational thinking, course design, open courseware},
location = {Barcelona, Spain},
series = {ICETC '17}
}

@inproceedings{10.1145/3372782.3407116,
author = {Salac, Jean},
title = {Diagramming as a Strategy for Primary/Elementary-Age Program Comprehension},
year = {2020},
isbn = {9781450370929},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3372782.3407116},
doi = {10.1145/3372782.3407116},
abstract = {Worldwide, many countries are implementing Computer Science (CS) and Computational Thinking (CT) instruction at the primary and secondary school level. This push for CS/CT instruction in younger ages increases the need for pedagogical practices, such as learning strategies, that are effective for a wide array of learners. However, research into strategies for young learners is relatively sparse, especially compared with strategies at the university level. This study aims to investigate a commonly used practice at the university level, diagramming, as a potential strategy for students in grades 4-8 (ages 10-15). Our hope is that diagramming can be added to a suite of strategies to support program comprehension in younger learners.},
booktitle = {Proceedings of the 2020 ACM Conference on International Computing Education Research},
pages = {322–323},
numpages = {2},
keywords = {computational thinking, diagrams, learning strategy, primary/elementary education, program comprehension},
location = {Virtual Event, New Zealand},
series = {ICER '20}
}

@inproceedings{10.1145/3502718.3524817,
author = {Oldham, Elizabeth},
title = {Computing in the Irish School Curriculum: What Can We Learn from a Fifty-Year Adventure?},
year = {2022},
isbn = {9781450392013},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3502718.3524817},
doi = {10.1145/3502718.3524817},
abstract = {This presentation examines the development of computing courses in the Irish school curriculum over a period of some fifty years. It aims to highlight three aspects: the varying rationales (for example, educational or economic) driving the work at different times; the types of course that were proposed and (in some cases) implemented; and the successes and failures experienced along the way. The third aspect, in particular, may offer lessons for other countries seeking to implement computing courses in schools. To frame the analysis, a brief chronological outline is provided here. In the 1970s, the state Department of Education initially offered some programming courses for teachers; a voluntary body, the Computers in Education Society of Ireland, advocated for the introduction of "Computer Studies" as a school subject [1]. Official provision came in the 1980s, with the introduction first of a Computer Studies option in the Mathematics courses for the senior cycle of post-primary education (US grades 11-12), and then of a free-standing subject in the junior cycle [1,2]. However, the increasing availability of educational software, applications packages, and internet access led to a switch in the focus of official policy in the 1990s - from computing to computer applications and the use of IT in teaching and learning - and the computing courses faded out [2]. Following the (re)-emergence of interest in computing / computational thinking in several countries in this century [2,3,4,5], advocacy for suitable courses again grew and the policy thrust changed. Provision is now made at primary and post-primary level, notably with a free-standing Computer Science course figuring in the senior cycle curriculum [2,5]. The author has been involved in advocacy and support for computing in schools throughout the fifty-year period. Thus, she offers a participant's analysis of the motivations, the successes and failures, and the lessons that can be learnt from the Irish story.},
booktitle = {Proceedings of the 27th ACM Conference on on Innovation and Technology in Computer Science Education Vol. 1},
pages = {1},
numpages = {1},
keywords = {computational thinking, computing education policy, curriculum},
location = {Dublin, Ireland},
series = {ITiCSE '22}
}

@inproceedings{10.1145/3614321.3614383,
author = {Okuno, Helder Yukio},
title = {Ginasio Experimental Tecnologico (GET): promoting pedagogical innovation and the development of student protagonism integrated into the municipal education network of Rio de Janeiro},
year = {2023},
isbn = {9798400707421},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3614321.3614383},
doi = {10.1145/3614321.3614383},
abstract = {The Municipal Secretary of Education of Rio de Janeiro (SME-Rio), seeking to combat difficulties in the literacy process, school dropout, and learning gap, sought to re-signify the school curriculum of students in the Municipal Education Network with innovative approaches in the process like the maker culture, STEAM, and Education 5.0. In this way, SME-Rio developed the Gin\'{a}sio Experimental Tecnol\'{o}gico (GET) program, where students carry out hands-on activities in the Colaborat\'{o}rio of GET’s program and develop skills, competencies, and curricular components of Integral Education, articulated with the three pillars of the program: Digital Information and Communication Technologies (DICT), Digital Culture, and Computational Thinking. In 2023, a total of 70 school units are expected, and for 2024 a total of 200 schools are projected.},
booktitle = {Proceedings of the 16th International Conference on Theory and Practice of Electronic Governance},
pages = {424–426},
numpages = {3},
keywords = {Gin\'{a}sio Experimental Tecnol\'{o}gico, Innovation in Education, Public Education Network, Smart Education},
location = {Belo Horizonte, Brazil},
series = {ICEGOV '23}
}

@inproceedings{10.1145/3613904.3642492,
author = {Newman, Michele and Sun, Kaiwen and Dalla Gasperina, Ilena B and Shin, Grace Y. and Pedraja, Matthew Kyle and Kanchi, Ritesh and Song, Maia B. and Li, Rannie and Lee, Jin Ha and Yip, Jason},
title = {"I want it to talk like Darth Vader": Helping Children Construct Creative Self-Efficacy with Generative AI},
year = {2024},
isbn = {9798400703300},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3613904.3642492},
doi = {10.1145/3613904.3642492},
abstract = {The emergence of generative artificial intelligence (GenAI) has ignited discussions surrounding its potential to enhance creative pursuits. However, distinctions between children’s and adult’s creative needs exist, which is important when considering the possibility of GenAI for children’s creative usage. Building upon work in Human-Computer Interaction (HCI), fostering children’s computational thinking skills, this study explores interactions between children (aged 7-13) and GenAI tools through methods of participatory design. We seek to answer two questions: (1) How do children in co-design workshops perceive GenAI tools and their usage for creative works? and (2) How do children navigate the creative process while using GenAI tools? How might these interactions support their confidence in their ability to create? Our findings contribute a model that describes the potential contexts underpinning child-GenAI creative interactions and explores implications of this model for theories of creativity, design, and use of GenAI as a constructionist tool for creative self-efficacy.},
booktitle = {Proceedings of the 2024 CHI Conference on Human Factors in Computing Systems},
articleno = {117},
numpages = {18},
keywords = {Artificial Intelligence, Children, Co-Design, Constructionism, Creativity, Participatory Design},
location = {Honolulu, HI, USA},
series = {CHI '24}
}

@inproceedings{10.1145/3631802.3631807,
author = {Jeuring, Johan and Groot, Roel and Keuning, Hieke},
title = {What Skills Do You Need When Developing Software Using ChatGPT? (Discussion Paper)},
year = {2024},
isbn = {9798400716539},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3631802.3631807},
doi = {10.1145/3631802.3631807},
abstract = {Since the release of LLM-based tools such as GitHub Copilot and ChatGPT the media and popular scientific literature, but also journals such as the Communications of the ACM, have been flooded with opinions how these tools will change programming. The opinions range from “machines will program themselves”, to “AI does not help programmers”. Of course, these statements are meant to to stir up a discussion, and should be taken with a grain of salt, but we argue that such unfounded statements are potentially harmful. Instead, we propose to investigate which skills are required to develop software using LLM-based tools. In this paper we report on an experiment in which we explore if Computational Thinking (CT) skills predict the ability to develop software using LLM-based tools. Our results show that the ability to develop software using LLM-based tools can indeed be predicted by the score on a CT assessment. There are many limitations to our experiment, and this paper is also a call to discuss how to approach, preferably experimentally, the question of which skills are required to develop software using LLM-based tools. We propose to rephrase this question to include by what kind of people/programmers, to develop what kind of software using what kind of LLM-based tools.},
booktitle = {Proceedings of the 23rd Koli Calling International Conference on Computing Education Research},
articleno = {38},
numpages = {6},
keywords = {ChatGPT, Computational thinking skills, LLM-based tools, Software development skills},
location = {Koli, Finland},
series = {Koli Calling '23}
}

@inproceedings{10.1145/3699538.3699573,
author = {Mathias Str\o{}mnes Nordvoll, Sindre},
title = {The Role of Programming in Lower Secondary Math Education in Probability},
year = {2024},
isbn = {9798400710384},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3699538.3699573},
doi = {10.1145/3699538.3699573},
abstract = {Enhancing school mathematics with Computational Thinking (CT) and programming might be beneficial to student learning in both the fields of computing and mathematics. This doctoral research project aims to explore and enhance the integration of programming and CT within K-12 mathematics education. Through a two-month intervention study in a Norwegian lower secondary school, a highly modified PRIMM (Predict, Run, Investigate, Modify, and Make) framework was employed to teach programming within a lower secondary mathematics course.},
booktitle = {Proceedings of the 24th Koli Calling International Conference on Computing Education Research},
articleno = {39},
numpages = {2},
keywords = {computer science education, instructional practices, worked examples, K-12, programming education in mathematics, PRIMM},
location = {
},
series = {Koli Calling '24}
}

@inproceedings{10.1145/3287324.3287333,
author = {Kafai, Yasmin B. and DeLiema, David and Fields, Deborah A. and Lewandowski, Gary and Lewis, Colleen},
title = {Rethinking Debugging as Productive Failure for CS Education},
year = {2019},
isbn = {9781450358903},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3287324.3287333},
doi = {10.1145/3287324.3287333},
abstract = {Computational thinking has become the calling card for re-introducing coding into schools. While much attention has focused on how students engage in designing systems, applications, and other computational artifacts as a measure of success for computational thinking, far fewer efforts have focused on what goes into remediating problems in designing systems and interactions because learners invariably make mistakes that need fixing-or debugging. In this panel, we examine the often overlooked practice of debugging that presents significant learning challenges (and opportunities) to students in completing assignments and instructional challenges to teachers in helping students to succeed in their classrooms. The panel participants will review what we know and don't know about debugging, discuss ways to conceptualize and study debugging, and present instructional approaches for helping teachers and students to engage productively in debugging situations.},
booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
pages = {169–170},
numpages = {2},
keywords = {computational thinking, computing education, debugging},
location = {Minneapolis, MN, USA},
series = {SIGCSE '19}
}

@inproceedings{10.1145/3372782.3407105,
author = {Floyd, Lisa Anne},
title = {The Integration of Coding in Teacher Education Programs: Course Experiences and the Teaching and Learning of Mathematics},
year = {2020},
isbn = {9781450370929},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3372782.3407105},
doi = {10.1145/3372782.3407105},
abstract = {As a result of the rapidly changing digital landscape, there is momentum to bring coding to K-12 classrooms in jurisdictions all around the world. A barrier to student learning and success with coding, however, is that many teachers have little or no prior coding experience. Using constructivist grounded theory, this study will seek to understand what experiences in the teacher education course, Computational Thinking in Mathematics and Science Education, affect how preservice teachers perceive coding in teaching and learning about mathematics. Experiences in the course include hands-on activities, readings, tutorials, opportunities for reflection, assignments that require preservice teachers to teach coding to intermediate or senior students, and participation in online discussions. Research questions include 1) What course experiences or other factors affect how preservice teachers come to view coding in teaching and learning mathematics? and 2) How are these views, related to coding in teaching and learning mathematics, translated into their practice teaching?},
booktitle = {Proceedings of the 2020 ACM Conference on International Computing Education Research},
pages = {350–351},
numpages = {2},
keywords = {coding, computational thinking, computer science, k-12 education, pedagogy, teacher educatio},
location = {Virtual Event, New Zealand},
series = {ICER '20}
}

@inproceedings{10.1145/3641554.3701920,
author = {Bernstein, Debra and Hochberg, Eric and Gasca, Santiago and Berson, Michael and Franklin, Kristen and Shank, Perry},
title = {Bridging Disciplines: Integrating Computer Science and Social Studies in Rural Middle Schools},
year = {2025},
isbn = {9798400705311},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3641554.3701920},
doi = {10.1145/3641554.3701920},
abstract = {Computer Science (CS) education is becoming increasingly important in K-12 schooling, with some U.S. states now requiring educators to integrate CS into various disciplinary courses. The CS for Social Studies project supports the integration of CS into Social Studies (SS) classes in rural middle schools. Twenty-five teachers, working mostly in pairs (one SS teacher and one CS or instructional technology teacher), participated in professional learning workshops and received coaching support to design and implement integrated lessons that address both SS and CS learning standards. The current analysis examines the corpus of year-end, project-based integrated CS-SS lessons (n=8), to illuminate how integrated CS-SS lessons can address learning goals across both disciplines. Data sources included teacher-created lesson materials, classroom observations/video, implementation logs, teacher interviews, and student work. Utilizing a framework created to characterize integrated CS-SS lessons, analysis of lessons (as designed and enacted) focuses on three dimensions: (1) depth of CS concepts, (2) integration of CS-SS, and (3) alignment of instructional tools/resources with integration objectives. All lessons addressed standards-aligned CS concepts such as variables, conditionals, branching, and computational thinking skills (e.g., decomposition), and a variety of SS topics including the Civil War, the Great Migration, and personal finance. However, lessons varied in the extent to which they leveraged students' CS knowledge to explicitly enhance SS learning (or vice versa). This analysis suggests there are multiple approaches to using CS concepts to support disciplinary learning, including creating new learning experiences to explore SS content.},
booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 1},
pages = {109–115},
numpages = {7},
keywords = {curricular integration, grades 5-8/middle school, professional development},
location = {Pittsburgh, PA, USA},
series = {SIGCSETS 2025}
}

@inproceedings{10.1145/3613905.3644056,
author = {Rode, Jennifer Ann and Barkhuus, Louise and Ioannou, Andri},
title = {Exploring Gender, Computational Making and E-Textiles using the BBC Micro:bit},
year = {2024},
isbn = {9798400703317},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3613905.3644056},
doi = {10.1145/3613905.3644056},
abstract = {We present a qualitative study of a Cypriot summer school where we used the BBC micro:bit to examine gender inclusivity in e-textiles. We employed the Computational Making framework to analyze ethnographic data teaching 24 middle school students, aged 10-15. The study contrasts the challenges faced by students using the micro:bit with those from our team’s previous similar e-textile studies using the LilyPad Arduino. We pinpoint the BBC micro:bit’s limitations from an inclusive design perspective, underscoring the absence of gender-sensitive considerations in its hardware design. The paper presents a critique how upwards of £75 Million were spent deploying the micro:bit without proper user studies of gender equity and e-textiles. We propose design recommendations for future BBC micro:bit versions, advocating for integrating a gender-sensitive participatory design approach to enhance the usability and engagement of computational and creative making with e-textiles for children of all genders.},
booktitle = {Extended Abstracts of the CHI Conference on Human Factors in Computing Systems},
articleno = {554},
numpages = {9},
keywords = {BBC micro:bit, Children, Computational Making, Computational Thinking, E-textiles},
location = {Honolulu, HI, USA},
series = {CHI EA '24}
}

@inproceedings{10.1145/3322276.3322358,
author = {Vacca, Ralph},
title = {Exploring the Intersection of Emotional Literacy and Computational Modeling Using Scratch},
year = {2019},
isbn = {9781450358507},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3322276.3322358},
doi = {10.1145/3322276.3322358},
abstract = {Computational thinking learning tools such as Scratch support forms of expressive making that can aid in reflection and understanding complex scientific concepts and systems. However, little research has explored how such computational tools might support forms of emotional literacy such as developing an understanding of emotions. Through an exploratory design with 11 participants, Scratch was used to create models representing participants' emotion knowledge. The overarching research question focused on how might computational tools aid in supporting reflection on emotion knowledge. Analysis of artifacts generated through sketching and Scratch, as well as transcribed design discussions were used as points of data analysis. Drawing on theories of computational thinking and emotional literacy, we present an analysis that highlights the potential for such tools to support certain reflective practices around emotion knowledge.},
booktitle = {Proceedings of the 2019 on Designing Interactive Systems Conference},
pages = {849–858},
numpages = {10},
keywords = {computational modeling, emotion knowledge, emotion understanding, emotional literacy, mental health, scratch, self-reflection, systems modeling},
location = {San Diego, CA, USA},
series = {DIS '19}
}

@inproceedings{10.1145/3361721.3361730,
author = {Leifheit, Luzia and Tsarava, Katerina and Moeller, Korbinian and Ostermann, Klaus and Golle, Jessika and Trautwein, Ulrich and Ninaus, Manuel},
title = {Development of a Questionnaire on Self-concept, Motivational Beliefs, and Attitude Towards Programming},
year = {2019},
isbn = {9781450377041},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3361721.3361730},
doi = {10.1145/3361721.3361730},
abstract = {Academic self-concept, motivational beliefs, and attitudes towards a school subject are relevant for learning and educational achievement. A positive self-concept in science and mathematics is argued to motivate students to persist and advance in studying these subjects. In particular, self-concept, motivational beliefs, and attitudes towards STEM domains were found to be predictive of educational achievement. Recently, programming was suggested to be a key competence in education.To assess self-concept, motivational beliefs, and attitudes towards programming, we developed a new questionnaire based on existing scales for mathematics. The new questionnaire assesses the same aspects for programming on seven subscales, such as self-concept, belief about usefulness, and self-reported persistence when working on programming tasks.We conducted a pilot study in which we used this questionnaire to measure self-concept, motivational beliefs, and attitudes towards programming. The study was set in the context of an extracurricular course on computational thinking (CT) for elementary school students between the ages of seven and ten years. Before the start of the course, we assessed all 31 participating students' self-concept, motivational beliefs, and attitudes towards programming using the developed questionnaire and their CT skills using the Computational Thinking test (CTt).Our results confirmed the expected associations between the aspects assessed by our questionnaire. However, we did not find significant associations of questionnaire results and CT skills. Consequently, future research involving a larger sample is needed to better understand the association between children's actual performance and their self-concept, motivational beliefs, and attitudes towards programming.},
booktitle = {Proceedings of the 14th Workshop in Primary and Secondary Computing Education},
articleno = {26},
numpages = {9},
keywords = {computational thinking, computer science education, computing education, computing literacy},
location = {Glasgow, Scotland, Uk},
series = {WiPSCE '19}
}

@inproceedings{10.1145/3565287.3617623,
author = {Hunter, Holly and Payton, Jamie and Julien, Christine},
title = {Expanding Elementary School Computer Science Education with an Introduction to Machine Learning Through Rhythmic Studies},
year = {2023},
isbn = {9781450399265},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3565287.3617623},
doi = {10.1145/3565287.3617623},
abstract = {Introducing elementary students to computer science and computational thinking (CS/CT) can enhance their problem solving skills and enhance their confidence and sense of belonging in computing. Project moveSMART aims to introduce learning activities into elementary classrooms that address computer science concepts in a way that integrates with core curriculum requirements and promotes physical activity. In this paper, we explore an extension to an initial set of Project moveSMART computer science learning activities to introduce elementary students to machine learning concepts in a way that is integrated with required learning objectives covered in a Physical Education course. Specifically, students use the BBC micro:bit and its on board sensors to capture rhythmic movement data, explore and analyze patterns in the data, and use a learned "dance move recognition" application that uses their data in order to learn about machine learning in an age appropriate way. To demonstrate feasibility of supporting dance move recognition on the resource-constrained device, we developed a prototype, which is able to detect 5 different dance moves with a 96.6% accuracy.},
booktitle = {Proceedings of the Twenty-Fourth International Symposium on Theory, Algorithmic Foundations, and Protocol Design for Mobile Networks and Mobile Computing},
pages = {463–467},
numpages = {5},
keywords = {wearable computing, activity recognition, smart health and well-being, computer science education, broadening participation in computing},
location = {Washington, DC, USA},
series = {MobiHoc '23}
}

@inproceedings{10.1145/3626253.3635589,
author = {Nutwell, Emily and Badger, Kelsey and Kulp, Jessica T.},
title = {Data for Healthy Communities: A Public Interest Pilot Course Designed to Develop K-12 Data Literacy},
year = {2024},
isbn = {9798400704246},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3626253.3635589},
doi = {10.1145/3626253.3635589},
abstract = {Data analytics skills are in high demand in a wide variety of professions and data is increasingly present in our everyday lives. Considering this, educators should be equipped to prepare future data scientists, but also data literate citizens. This project engages high school students in the real-world practice of data analytics to promote the public interest. The research team is partnering with a local public STEM high school to design, evaluate, and publicly share an enrichment course that introduces students to data analytics in the context of public health. Integrating data science education and public health will enable students to engage in meaningful data-driven problem solving while promoting civic engagement. A key challenge in introducing data skills in K-12 is addressing barriers to access. To cope with these barriers, the course design incorporates the use of spreadsheets to engage students in computational thinking. This poster will present preliminary assessment results from the 3-week enrichment course conducted in January 2024. This project contributes to the ongoing discussion of K-12 data science education by demonstrating the value of contextualizing data science as a key competency for 21st century public service.},
booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1764–1765},
numpages = {2},
keywords = {civic engagement, data science, public health, public interest technology, spreadsheets},
location = {Portland, OR, USA},
series = {SIGCSE 2024}
}

@inproceedings{10.1145/3328778.3366821,
author = {Salac, Jean and Thomas, Cathy and Butler, Chloe and Sanchez, Ashley and Franklin, Diana},
title = {TIPP&amp;SEE: A Learning Strategy to Guide Students through Use - Modify Scratch Activities},
year = {2020},
isbn = {9781450367936},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3328778.3366821},
doi = {10.1145/3328778.3366821},
abstract = {With the rise of Computational Thinking (CT) instruction at the elementary level, it is imperative that elementary computing instruction support a variety of learners. A popular pedagogical approach for this age group is Use--&gt;Modify--&gt;Create, which introduces a concept through a more scaffolded, guided instruction before culminating in a more open-ended project for student engagement. Yet, there is little research on student learning during the Use--&gt;Modify step, nor strategies to promote learning in this step. This paper introduces TIPP&amp;SEE, a metacognitive learning strategy that further scaffolds student learning during this step. Results from an experimental study show statistically-significant performance gains from students using the TIPP&amp;SEE strategy on nearly all assessment questions of moderate and hard difficulty, suggesting its potential as an effective CS/CT learning strategy.},
booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
pages = {79–85},
numpages = {7},
keywords = {computational thinking, elementary education, learning strategy, scratch},
location = {Portland, OR, USA},
series = {SIGCSE '20}
}

@inproceedings{10.1145/3576882.3617919,
author = {Macann, Victoria and Yadav, Aman},
title = {Debugging Beyond the Code: Teachers' Perceptions of Debugging as a CT Practice Impacting Interdisciplinary Teaching and Learning},
year = {2023},
isbn = {9798400700484},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3576882.3617919},
doi = {10.1145/3576882.3617919},
abstract = {Computational thinking (CT) is viewed as a support structure for educators to develop computational literacies [18][35]. The majority of research around CT practices has focused on decomposition, abstraction, and algorithmic thinking; however, there is little research on debugging and how teachers see the role of debugging in their instruction [4][17]. Given that debugging is viewed as a vital CT skill [38], there is a need to understand how elementary teachers perceive its role in supporting student learning. In this paper, we present results from a study that examined how elementary teachers understood debugging as well as how they saw the role of debugging to support student learning. Our findings indicate that most elementary teachers perceived debugging as a metacognitive support that allowed their students to shift how they approached problem-solving. Our findings also suggest that debugging may be a good starting point to allow elementary teachers to initially latch onto integrating CT. We discuss implications of our findings for integrating CT practices into classroom instruction.},
booktitle = {Proceedings of the ACM Conference on Global Computing Education Vol 1},
pages = {119–125},
numpages = {7},
keywords = {computer science education, pre-service teachers, teacher education},
location = {Hyderabad, India},
series = {CompEd 2023}
}

@article{10.5555/3581625.3581636,
author = {Azhar, Mohammad Q and Haynes, Ada},
title = {A Pilot Study of a Virtual Informal Experiential Learning Activity during COVID-19},
year = {2022},
issue_date = {November 2022},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {38},
number = {5},
issn = {1937-4771},
abstract = {During COVID-19, undergraduate students in the urban college in New York City lost opportunities for almost all co-curricular informal learning outside the classroom. This paper describes the design, implementation, and preliminary evaluation of an "Virtual MAKE-A-THON" during 2020 at an urban HSI community college to provide underrepresented minority students a collaborative experiential co-curricular learning activity. Given today's rapid changes in technology, informal learning activities are important tools to bridge gaps with the newly emerging technologies for our undergraduate students. Informal learning activities can be designed to expose students to the new technologies that are not easily accessible within the traditional curriculum of structured, formal classroom learning activities while simultaneously developing their computational thinking, critical thinking, creativity, and soft skills. In addition, little research has been conducted on remote informal experiential learning environments for community college students that incorporate the students into collaborative teams solving challenging real world problems. In this paper, we share the successful implementation and evaluation of a virtual informal collaborative experiential learning activity called MAKE-A-THON during COVID-19 where community college students work in a team to create practical innovative solutions to global problems with mentor support from both academia and industry. The goal of the proposed informal learning model is to provide students real-world career preparation and technical education across disciplines through collaborative project activities while experiencing cutting-edge technologies. This paper will also include the pilot study of the impact on diverse students' computational thinking, critical thinking, creativity, and self-efficacy. The results are from surveys from 31 students participating in this month-long virtual MAKE-A-THON during Fall 2020.},
journal = {J. Comput. Sci. Coll.},
month = nov,
pages = {117–126},
numpages = {10}
}

@inproceedings{10.1145/3397617.3397843,
author = {Jin, Qiao and Liu, Yu and Yuan, Ye and Yarosh, Lana and Rosenberg, Evan Suma},
title = {VWorld: an immersive VR system for learning programming},
year = {2020},
isbn = {9781450380201},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3397617.3397843},
doi = {10.1145/3397617.3397843},
abstract = {The growing development and commercialization of Virtual Reality (VR) allow more children to get access to this technology. VR features a new, more emotional relevant experience with a sense of presence and high interactivity. In this paper, we present VWorld, an immersive VR system designed to boost children's creativity and computational thinking skill. VWorld enables children to create their own virtual world by putting 3D objects on a miniature map, then explore the world and control the chosen objects by constructing program sequences. We present the design and implementation of VWorld system, with the design considerations of children in our VR environment, and conduct the preliminary evaluation and the future plan of the study.},
booktitle = {Proceedings of the 2020 ACM Interaction Design and Children Conference: Extended Abstracts},
pages = {235–240},
numpages = {6},
keywords = {children, computational thinking, creation, programming languages, virtual reality},
location = {London, United Kingdom},
series = {IDC '20}
}

@inproceedings{10.1145/2538862.2538940,
author = {Miller, L. D. and Soh, Leen-Kiat and Chiriacescu, Vlad and Ingraham, Elizabeth and Shell, Duane F. and Hazley, Melissa Patterson},
title = {Integrating computational and creative thinking to improve learning and performance in CS1},
year = {2014},
isbn = {9781450326056},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2538862.2538940},
doi = {10.1145/2538862.2538940},
abstract = {Our research is based on an innovative approach that integrates computational thinking and creative thinking in CS1 to improve student learning performance. Referencing Epstein's Generativity Theory, we designed and deployed a suite of creative thinking exercises with linkages to concepts in computer science and computational thinking, with the premise that students can leverage their creative thinking skills to "unlock" their understanding of computational thinking. In this paper, we focus on our study on differential impacts of the exercises on different student populations. For all students there was a linear "dosage effect" where completion of each additional exercise increased retention of course content. The impacts on course grades, however, were more nuanced. CS majors had a consistent increase for each exercise, while non-majors benefited more from completing at least three exercises. It was also important for freshmen to complete all four exercises. We did find differences between women and men but cannot draw conclusions.},
booktitle = {Proceedings of the 45th ACM Technical Symposium on Computer Science Education},
pages = {475–480},
numpages = {6},
keywords = {CS1, computational thinking, creative thinking},
location = {Atlanta, Georgia, USA},
series = {SIGCSE '14}
}

@inproceedings{10.1145/3159450.3159598,
author = {Gutierrez, Francisco J. and Simmonds, Jocelyn and Casanova, Cecilia and Sotomayor, Cecilia and Hitschfeld, Nancy},
title = {Coding or Hacking? Exploring Inaccurate Views on Computing and Computer Scientists among K-6 Learners in Chile},
year = {2018},
isbn = {9781450351034},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3159450.3159598},
doi = {10.1145/3159450.3159598},
abstract = {Advancing computational thinking in elementary education has been rapidly gaining attention due to the prospective of developing 21st century skills. However, interventions in this domain risk failure if they do not explicitly address the particular socio-cultural traits of the deployment scenario. This is the case in most countries of Latin America, where computing has not reached a sustainable penetration in K-12 education. In order to bridge this gap, we designed a one-week workshop for advancing computational thinking targeted to 10-12 years old Chilean students with no prior experience in programming. This paper describes our intervention and presents the results of a qualitative study analyzing positive and negative aspects of the experience. Although most participants effectively acquired basic programming skills by the end of the intervention, we also identified several inaccurate views on computing and computer scientists. For instance, computing was mostly perceived as a set of informal experiences rather than a way for enabling creation, automation, and work. The word "hacking" appears to be used as a metaphor for more technical terms, such as "programming" or "algorithm". Finally, negative stereotypical views of computer scientists resulting from the intervention were not as frequent as initial perceptions. These results provide fresh evidence on how to design, adapt, and evaluate computational thinking interventions targeted to K-6 students in Latin America.},
booktitle = {Proceedings of the 49th ACM Technical Symposium on Computer Science Education},
pages = {993–998},
numpages = {6},
keywords = {computational thinking, k-6 education, latin america},
location = {Baltimore, Maryland, USA},
series = {SIGCSE '18}
}

@inproceedings{10.1145/3291279.3339431,
author = {Floyd, Steven},
title = {A Qualitative Content Analysis of K-8 Coding Curriculum},
year = {2019},
isbn = {9781450361859},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3291279.3339431},
doi = {10.1145/3291279.3339431},
abstract = {A number of educational jurisdictions in Canada and abroad are integrating coding and computational thinking (CT) concepts into their K-8 curriculum, however; very little investigation has been done comparing these nascent curricular reforms. This study will use qualitative content analysis to investigate the differences and similarities of K-8 coding and CT curriculum by comparing the concepts, themes, goals and objectives found in current documents. The study hopes to shed light on an important and under-addressed area of curriculum studies that will prove important as computer science education plays a bigger role in K-8 education.},
booktitle = {Proceedings of the 2019 ACM Conference on International Computing Education Research},
pages = {329–330},
numpages = {2},
keywords = {coding, computational thinking, computer science, curricula, k-12 education, k-8 education},
location = {Toronto ON, Canada},
series = {ICER '19}
}

@inproceedings{10.1145/3441852.3476553,
author = {Rocha, Filipa and Guimar\~{a}es, Guilherme and Gon\c{c}alves, David and Pires, Ana Cristina and Abreu, L\'{u}cia Ver\'{o}nica and Guerreiro, Tiago},
title = {Fostering collaboration with asymmetric roles in accessible programming environments for children with mixed-visual-abilities},
year = {2021},
isbn = {9781450383066},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3441852.3476553},
doi = {10.1145/3441852.3476553},
abstract = {Introduction of computational thinking training in early childhood potentiates cognitive development and better prepares children to live and prosper in a future heavily computational society. Programming environments are now widely adopted in classrooms to teach programming concepts. However, these tools are often reliant on visual interaction, making them inaccessible to children with visual impairments. Also, programming environments in general are usually designed to promote individual experiences, wasting the potential benefits of group collaborative activities. We propose the design of a programming environment that leverages asymmetric roles to foster collaborative computational thinking activities for children with visual impairments, in particular mixed-visual-ability classes. The multimodal system comprises the use of tangible blocks and auditory feedback, while children have to collaborate to program a robot. We conducted a remote online study, collecting valuable feedback on the limitations and opportunities for future work, aiming to potentiate education and social inclusion.},
booktitle = {Proceedings of the 23rd International ACM SIGACCESS Conference on Computers and Accessibility},
articleno = {67},
numpages = {4},
keywords = {accessible, children, collaboration, robot, tangible, visually impaired},
location = {Virtual Event, USA},
series = {ASSETS '21}
}

@inproceedings{10.1145/3626252.3630920,
author = {Quiroz, Patricio and Gutierrez, Francisco J.},
title = {Scratch-NB: A Scratch Extension for Introducing K-12 Learners to Supervised Machine Learning},
year = {2024},
isbn = {9798400704239},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3626252.3630920},
doi = {10.1145/3626252.3630920},
abstract = {Artificial Intelligence has rapidly captured-again-the attention of practitioners and the CS Education community. Several initiatives have been spawning to identify effective ways to introduce learners at college and high-school levels to the basics of AI. In this context, we developed Scratch-NB, an extension to the Scratch programming language to equip K-8 learners with foundational tools for developing a Naive-Bayes classifier, explicitly transparenting its internal components. We opted to use Scratch due to its popularity within the CS4All movement and its predominance in schools, and extend the language with a simple implementation of the Naive Bayes classifier as a gateway for introducing basic notions of supervised learning and AI. In this paper, we report the design rationale of our tool and our experience of using it in an informal workshop with children aged 10-12 with no prior knowledge of computational thinking, coding, or AI. The obtained results show that Scratch-NB showed high levels of acceptance among the participants, raised interest in AI, and effectively provided basic foundations, particularly when comparing Scratch-NB with other state-of-the-art tools targeted to this learner group. We argue that our tool has the potential to illuminate further practical and research endeavors when exploring how to effectively introduce younger populations to the foundational notions of AI in practical contexts.},
booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 1},
pages = {1077–1083},
numpages = {7},
keywords = {ai education, classification, k-8 education, naive bayes, scratch},
location = {Portland, OR, USA},
series = {SIGCSE 2024}
}

@inproceedings{10.1145/3304221.3325585,
author = {Lowe, Tony and Brophy, Sean and Cardella, Monica},
title = {Findings from a Multi-year Study of CT in K-2 Students in Formal and Informal Settings},
year = {2019},
isbn = {9781450368957},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3304221.3325585},
doi = {10.1145/3304221.3325585},
abstract = {For the past four years, our research group has conducted a series of NSF funded studies on Computational Thinking (CT) involving elementary school students, parents, and teachers. We developed curriculum, trained teachers, observed classrooms, created museum exhibits, followed students and families, explored theory, and utilized the diverse skills of a large multi-disciplinary research group to understand the intersection of STEM, literacy, and CT. As we close out this grant, we are looking to disseminate our findings, share lessons learned about research methods and data collection, and build collaborations for future research.},
booktitle = {Proceedings of the 2019 ACM Conference on Innovation and Technology in Computer Science Education},
pages = {312},
numpages = {1},
keywords = {computational thinking, formal and informal instruction, p-12, professional development},
location = {Aberdeen, Scotland Uk},
series = {ITiCSE '19}
}

@inproceedings{10.1145/3626252.3630868,
author = {Greifenstein, Luisa and Heuer, Ute and Fraser, Gordon},
title = {Hint Cards for Common Ozobot Robot Issues: Supporting Feedback for Learning Programming in Elementary Schools},
year = {2024},
isbn = {9798400704239},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3626252.3630868},
doi = {10.1145/3626252.3630868},
abstract = {Computational thinking is gradually being introduced into elementary school curricula, usually accompanied by some form of programming activity. However, even a creative and hands-on activity such as programming Ozobot robots with color codes requires elementary school teachers to provide adequate help. We therefore developed hint cards based on criteria for effective feedback and common color code mode issues. Based on our experience of using the hint cards in 17 workshops in elementary schools with 328 children and 21 educators, we identify how the hint cards (1) address feedback challenges, (2) support learning, and (3) can be adapted for broader use. We find that hint cards provide benefits at the teacher, learner and organizational level, but also identify possible disadvantageous circumstances. Although the hint cards support learning regarding affective, cognitive and meta-cognitive aspects, strategies for adaptation are needed. We discuss how the hint cards can be used in other contexts, and give recommendations on how to use the knowledge of common issues and hint cards for supporting elementary school teachers with teaching programming.},
booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 1},
pages = {408–414},
numpages = {7},
keywords = {feedback, primary school, programming, teacher education},
location = {Portland, OR, USA},
series = {SIGCSE 2024}
}

@inproceedings{10.1145/3545947.3576268,
author = {Dahshan, Mai and Galanti, Terrie M.},
title = {Designing Integrated Math + CT Activities to Promote Sensemaking about Place Value in Grades K-2},
year = {2023},
isbn = {9781450394338},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3545947.3576268},
doi = {10.1145/3545947.3576268},
abstract = {In recent years, there has been a growing emphasis on using computational thinking (CT) to teach mathematical concepts. The integration of math+CT enables students to gain a deeper understanding of both mathematical and computer science (CS) concepts. Although numerous professional development programs provide teachers with a solid understanding of CT and methods for integrating it into the curriculum, there has been little research on how teachers apply this knowledge to the design and development of math+CT activities. Moreover, the majority of integrated activities are concentrated in the upper elementary grades, while the early grades (i.e., K-2) remain underexplored. The purpose of this study is to describe how teachers translate their CT knowledge in the collaborative design of an integrated math+CT activity focused on number sense and mathematical operations for grades K-2. Research faculty from the CS and Teacher Education departments designed block-based programming activities for K-2 students to explore and make sense of place value representations of the numbers 1 - 1000. In-service elementary teachers in an online graduate STEM CT course (N = 13) experienced these activities as learners and provided feedback for redesign from their perspectives as classroom teachers. Qualitative analysis of collaborative problem-solving slides and individual reflections revealed how teachers connected their mathematical knowledge for teaching place value to their emergent understanding of CT concepts of abstraction, decomposition, and debugging. This research bridges the gap between enthusiasm for math+CT integration and teacher capacity to use CT to promote creative mathematical thinking and problem-solving in K-2 classrooms.},
booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1321},
numpages = {1},
keywords = {computational thinking, curriculum development, early childhood education, mathematics education, pk-12 cs education, professional development},
location = {Toronto ON, Canada},
series = {SIGCSE 2023}
}

@inproceedings{10.1145/3545947.3576332,
author = {Joshi, Deepti and Jocius, Robin and Blanton, Melanie and Albert, Jennifer and O'Byrne, Ian},
title = {Project Sustainability through Teacher Autonomy in CT Infusion},
year = {2023},
isbn = {9781450394338},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3545947.3576332},
doi = {10.1145/3545947.3576332},
abstract = {There is growing attention for developing professional learning experiences for content area teachers to infuse computational thinking (CT). However, there is little reporting on how teachers continue to implement the CT lessons once professional development (PD) is over. This study provides initial results on our efforts of building project sustainability through teacher autonomy in designing their own CT infusion projects or PDs for their schools. Our initial analysis indicates the need to continue to build teacher autonomy within the professional learning experiences for developing teacher confidence and sustainability of the project.},
booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1387},
numpages = {1},
keywords = {computational thinking infusion, cs education, k-12 teacher profession development},
location = {Toronto ON, Canada},
series = {SIGCSE 2023}
}

@inproceedings{10.1145/3408877.3432554,
author = {Branco, Andr\'{e} and Dutra, Claudia and Zumpichiatti, D\'{e}bora and Campos, Francisco Augusto and SantClair, Gabriel and Mello, Jhulian and Moreira, Jo\~{a}o Victor and Godinho, Julia and Marotti, Julia and Gomide, Janaina},
title = {Programming for Children and Teenagers in Brazil: A 5-year Experience of an Outreach Project},
year = {2021},
isbn = {9781450380621},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3408877.3432554},
doi = {10.1145/3408877.3432554},
abstract = {There has been a worldwide surge in programming education initiatives for children and teenagers. In Brazil, this trend faces some challenges, namely inadequate infrastructure of most schools, notably public ones, that lack access to computers and tablets, and basic education curricular requirements not contemplating computer science concepts. This article reports on the five-year experience of an outreach project from a public university in Brazil. The project aims to promote computer science education and to teach programming to children and teenagers. Undergraduate engineering students who participate in the project as members engage in activities such as planning the courses and their schedules, creating partnerships with local schools and other educational projects, giving lectures, producing scientific research and educational materials, as well as promoting the project on social media. The courses use free online programming tools, Python, MIT App Inventor, and Arduino to cover fundamental concepts of programming and computational thinking. They vary approaches and tools according to the age range and available technological resources of the target audience. The use of unplugged activities means to assist in learning and to circumvent computer access problems. Furthermore, they serve for introducing basic programming concepts in classes and motivating students with dynamic activities. Over its five-year existence, the project has achieved its purpose, by reaching a total of 2639 students through 45 workshops and 94 courses. It has provided courses in eleven public schools, created two booklets and one app as free educational material, along with presented papers and posters in scientific conferences.},
booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
pages = {411–417},
numpages = {7},
keywords = {computational thinking, computer science education, didactic strategies, k-12, programming},
location = {Virtual Event, USA},
series = {SIGCSE '21}
}

@inproceedings{10.1145/3328778.3366911,
author = {Franklin, Diana and Salac, Jean and Thomas, Cathy and Sekou, Zene and Krause, Sue},
title = {Eliciting Student Scratch Script Understandings via Scratch Charades},
year = {2020},
isbn = {9781450367936},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3328778.3366911},
doi = {10.1145/3328778.3366911},
abstract = {With many school districts nationwide integrating Computer Science (CS) and Computational Thinking (CT) instruction at the K-8 level, it is crucial researchers closely inspect the relationship between program expression and student understandings. In this study, we propose and report on our use of Scratch Charades, a game in which students act out Scratch scripts while others build them. The purpose of Scratch Charades is to familiarize students with scripts and blocks without the cognitive overhead of the complex user interface. However, in this study, we also used it to elicit student understandings about Scratch blocks and scripts to design mnemonics to help students debug their code. We propose two building and/or debugging strategies based on our observations.},
booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
pages = {780–786},
numpages = {7},
keywords = {computational thinking, elementary education, learning strategy, scratch},
location = {Portland, OR, USA},
series = {SIGCSE '20}
}

@inproceedings{10.1145/3585088.3593859,
author = {Cen, Jingyao and Yu, Junnan},
title = {Examining Gendered Communications of Coding Kits for Young Children},
year = {2023},
isbn = {9798400701313},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3585088.3593859},
doi = {10.1145/3585088.3593859},
abstract = {Designing computational toys and kits to welcome young children from different genders is essential to broaden participation in computing, as they play a critical role in facilitating children’s development of computational thinking. However, how young learners of different genders are being welcomed by these kits remains unclear. In this paper, we report our in-progress work examining how commercially available coding kits for young children are communicated from a gender perspective. Specifically, we analyzed the gender indications in the product descriptions and advertisement images of 30 kits, revealing a relatively balanced gender representation in images while significantly boy-oriented use of words in product descriptions. Ultimately, we call for attention and actions to more gender-inclusive communication of STEM toys for children.},
booktitle = {Proceedings of the 22nd Annual ACM Interaction Design and Children Conference},
pages = {624–629},
numpages = {6},
keywords = {Coding Kits, Gendered Images, Gendered Language, Inclusiveness, Young Children},
location = {Chicago, IL, USA},
series = {IDC '23}
}

@inproceedings{10.1145/3572549.3572589,
author = {Ding, Guozhu and Liu, Jiaxin and Liu, Xuan and Jiang, Tao and Liang, Guanjian},
title = {Design and Development of a Text Programming Teaching System for Primary school Students},
year = {2023},
isbn = {9781450397766},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3572549.3572589},
doi = {10.1145/3572549.3572589},
abstract = {Computational Thinking (CT) is a key component of 21st century education. With that visual programming has become a major tool for primary school students to learn programming. In response to the current difficulties of primary school students in transitioning from visual programming learning to C++ programming learning, this paper develops an online programming teaching system based on the Goc programming for primary school students for introductory C++ programming learning (www.51goc.com). The system has the characteristics of visualization of programming results, game-based teaching and service of teaching. The usefulness and reliability of the system has been verified through its implementation in Foshan, Guangdong for nearly three years, which has helped in the teaching of programming.},
booktitle = {Proceedings of the 14th International Conference on Education Technology and Computers},
pages = {245–251},
numpages = {7},
keywords = {primary school students, teaching system, visualization of programming results},
location = {Barcelona, Spain},
series = {ICETC '22}
}

@inproceedings{10.1145/3591196.3593335,
author = {Nam, Hye Yeon and Webb, Andrew M. and Tucker, Raymond and Harmon, Brendan},
title = {Code to Cope: Supporting Self-Care by Integrating Creative Coding and Coping Mechanisms},
year = {2023},
isbn = {9798400701801},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3591196.3593335},
doi = {10.1145/3591196.3593335},
abstract = {Code to Cope is a STEAM curriculum for young adults designed to teach, develop, and encourage coping mechanisms while learning programming with JavaScript. COVID-19 restrictions, such as social distancing and remote learning, disrupted social development and identity formation in young adults, exacerbating mental health issues that remain unaddressed in existing STEAM curriculum. Young adults are vulnerable to psychological distress that adversely affects educational experiences and career path choices. The Code to Cope curriculum was adopted by the creative coding course at Louisiana State University from 2021 to 2022. We conducted interviews with four students in 2021 and empirical studies with 34 students in 2022 to evaluate the effects of the curriculum in terms of code, coping, and creativity. The results of the study show that the Code to Cope curriculum effectively teaches computational thinking, develops self-care practices, and engages and motivates students.},
booktitle = {Proceedings of the 15th Conference on Creativity and Cognition},
pages = {162–170},
numpages = {9},
keywords = {Code to cope, STEAM education, coping mechanisms, creative coding, self-care},
location = {Virtual Event, USA},
series = {C&amp;C '23}
}

@inproceedings{10.1145/3408877.3432486,
author = {Soh, Leen-Kiat and Peteranetz, Markeya S. and Glebova, Olga},
title = {Adopting, Integrating, and Evaluating Computational Creativity Exercises and An Experience Report},
year = {2021},
isbn = {9781450380621},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3408877.3432486},
doi = {10.1145/3408877.3432486},
abstract = {In this workshop, participants will learn about how to integrate computational thinking and creative thinking activities that have been shown to significantly improve student learning and performance in their classes via rigorous research investigations. In particular, participants will be familiarized with the suite of Computational Creativity Exercises (CCEs) (which are non-programming-based, group-based, active learning exercises), practice hands-on how to complete such an CCE, learn about how to integrate and adapt them into their courses, and be exposed to the educational research studies behind the development, design, and administration of these CCEs. Participants will also learn how to conduct evidence-based educational research studies. Workshop sessions will include presentations, panel-based Q&amp;A, an experience report, breakout group discussions, and hands-on activities. A suite of resources including the survey instruments, CCEs, implementation strategies, and research findings will be shared post-workshop. More information can be found at cse.unl.edu/agents/ic2think/CCEWorkshop2021.},
booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
pages = {1350},
numpages = {1},
keywords = {active learning, computational thinking, creative thinking, educational research},
location = {Virtual Event, USA},
series = {SIGCSE '21}
}

@inproceedings{10.1145/3059009.3059017,
author = {Lamprou, Anna and Repenning, Alexander and Escherle, Nora A.},
title = {The Solothurn Project: Bringing Computer Science Education to Primary Schools in Switzerland},
year = {2017},
isbn = {9781450347044},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3059009.3059017},
doi = {10.1145/3059009.3059017},
abstract = {Currently Switzerland is going through a major reform in its education system. One of its most ambitious and important goals is the inclusion of Computer Science Education already on the primary school level, an important measure in achieving the establishment of an information society. Such a reform raises questions about the appropriate types of approaches to be developed and employed for an effective implementation of Computer Science Education concepts in Swiss primary schools. To this end, the project "Scalable Game Design Solothurn" was developed and evaluated. This project both trained teachers and exposed students to Computational Thinking concepts through the two Computational Thinking Tools AgentSheets and AgentCubes online. Results show that teaching Computational Thinking through Scalable Game Design is not only feasible on the primary school level but also enjoyable, with AgentSheets and AgentCubes online proving to be sustainable and effective tools for the implementation of Computer Science Education on this school level. Further analysis of the data enables us to make recommendations regarding optimal ways of implementation for the Swiss reality and point towards new research directions.},
booktitle = {Proceedings of the 2017 ACM Conference on Innovation and Technology in Computer Science Education},
pages = {218–223},
numpages = {6},
keywords = {computational thinking, computer science education, experience repor, primary schools, professional teacher development},
location = {Bologna, Italy},
series = {ITiCSE '17}
}

@inproceedings{10.1145/3626253.3635554,
author = {Smith, Julie M. and Twarek, Bryan and McGill, Monica M.},
title = {Reimagining CS Courses for High School Students},
year = {2024},
isbn = {9798400704246},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3626253.3635554},
doi = {10.1145/3626253.3635554},
abstract = {Traditionally, computer science (CS) in the United States has been an elective subject at the high school level. In recent years, however, some school systems have created a CS graduation requirement. Designing a required CS course that meets the needs of anticipated future advancements in the field necessitates exploring the research question, What computing content do high school teachers, college instructors, and computing industry professionals prioritize in a required computer science course for high school students? To better understand what these different groups perceive to be the essential content of a foundational high school CS course, we conducted a series of focus groups. These focus groups explored participants' (n = 21) thinking about what content would be most important to prioritize in a required high school CS course. Transcripts of the focus groups were abductively coded and then analyzed to determine what CS content priorities were identified and what disagreements about priorities exist. We found that participants (1) emphasized CS knowledge and skills, with minimal reference to dispositions, (2) prioritized content similar to that found in current CS standards, (3) developed broad, high-level descriptions of content, (4) identified contextually relevant factors, (5) foregrounded AI both a tool and as a subdomain of CS, and (6) emphasized computational thinking. These findings can inform further research on the design and implementation of a required high school CS course designed to meet the needs of the future as well as to support revisions of CS standards for high school students.},
booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1822–1823},
numpages = {2},
keywords = {curriculum, focus groups, high school, standards},
location = {Portland, OR, USA},
series = {SIGCSE 2024}
}

@inproceedings{10.1145/3585088.3589357,
author = {Chen, John and Zhao, Lexie and Horn, Mike and Wilensky, Uri},
title = {The Pocketworld Playground: Engaging Online, Out-of-School Learners with Agent-based Programming},
year = {2023},
isbn = {9798400701313},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3585088.3589357},
doi = {10.1145/3585088.3589357},
abstract = {Agent-based modeling (ABM) has become a major approach to promote computational thinking and complex systems thinking in K-12 education. However, agent-based programming (ABP), the computational foundation of ABM, is less defined and discussed in previous literature. Summarizing previous studies around ABP from computer science and education, we argued for the potential benefits of introducing ABP to youth. Rooted in the interest development theory, we presented the design of a scaffolded agent-based programming space, the Pocketworld Playground (POP), that aims to engage out-of-school online young learners through developing their interest in ABP. The POP was built in Turtle Universe (TU), the mobile incarnation of NetLogo. Using a mixed-methods approach to analyze log data and artifacts created by learners, we found that POP successfully engaged learners with ABP practices; helped develop situational and individual interest; and contributed to TU’s emerging online community. Finally, we discussed design lessons that could benefit other online learning designers.},
booktitle = {Proceedings of the 22nd Annual ACM Interaction Design and Children Conference},
pages = {267–277},
numpages = {11},
keywords = {Agent-based Programming, Agent-based modeling, Computational Literacy, Constructionism, Informal Learning},
location = {Chicago, IL, USA},
series = {IDC '23}
}

@inproceedings{10.1145/3361721.3362116,
author = {Twigg, Sarah and Blair, Lynne and Winter, Emily},
title = {Using children's literature to introduce computing principles and concepts in primary schools: work in progress},
year = {2019},
isbn = {9781450377041},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3361721.3362116},
doi = {10.1145/3361721.3362116},
abstract = {With the recent paradigm shift in the teaching of computing and computational thinking skills, schools are engaging pupils as young as five in learning principles and concepts of programming. However, there are still many challenges within primary computing education, including the cost and availability of resources, and teachers' familiarity and/or confidence with these resources. In this paper, we offer an approach that develops a creative story-based pedagogy to address constraints such as these and facilitate the development of lesson plans supporting scaffolding and differentiation. Children's literature is used to introduce concepts such as pattern matching, abstraction and algorithms, along with the three main programming constructs of sequencing, repetition and selection. Through four stages of Read-Act-Model-Program (RAMP), we present a set of unplugged and Scratch-based activities and reflect on the potential impact of this educational opportunity to inspire an early interest in computing.},
booktitle = {Proceedings of the 14th Workshop in Primary and Secondary Computing Education},
articleno = {23},
numpages = {4},
keywords = {Children's Literature, Computational Thinking, Pedagogy, Primary, Programming},
location = {Glasgow, Scotland, Uk},
series = {WiPSCE '19}
}

@inproceedings{10.1145/3631802.3631819,
author = {Johnson, Michael J. and Baker-Ramos, Rachel and Hovey, Christopher Lynnly and DiSalvo, Betsy},
title = {Keeping Mindful of Modality: A Comparison of Computer Science Education Resources for Learning},
year = {2024},
isbn = {9798400716539},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3631802.3631819},
doi = {10.1145/3631802.3631819},
abstract = {Educators often use computer science education resources to enhance the learning process, which come with a variety of output modalities (e.g., audiovisual, tangible) and coding modalities (e.g., block-based, text-based). While these resources are typically evaluated for their applicability and impact on young populations, they are not often analyzed through a comparison of their coding and output modalities, nor as a whole to each other. In this paper, we conducted BridgeUP STEM, an afterschool CS course for high school women and gender non-conforming individuals aimed at developing their computational thinking skills and exposing them to coding and CS. We collected and analyzed interview data for 16 participants on their experiences within the course and attitudes towards various output and coding modalities. Throughout the study, the students’ reflections on their own learning revealed the affordances and drawbacks of each resource in terms of outputs the resources provided, feedback the students received, and how both affected the students’ troubleshooting. We present these findings and use them to provide recommendations for approaches to teaching computer science.},
booktitle = {Proceedings of the 23rd Koli Calling International Conference on Computing Education Research},
articleno = {18},
numpages = {14},
keywords = {afterschool, computer science education, modality, physical computing, screen-based computing},
location = {Koli, Finland},
series = {Koli Calling '23}
}

@article{10.1145/3579365,
author = {V\'{a}squez, Francisco and Calder\'{o}n, Juan Felipe and Meza, Federico and V\'{a}squez, Andrea},
title = {Validation of a Spanish-language Version of a Computer Programming Aptitude Test for First-year University Students},
year = {2023},
issue_date = {June 2023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {23},
number = {2},
url = {https://doi.org/10.1145/3579365},
doi = {10.1145/3579365},
abstract = {There is increasing interest in computer science and computing bachelor programs due to the growing importance of technology in the globalized world. Thus, as higher education institutions strive to serve a diverse student demographic, it is salient to gauge their programming abilities to improve guidance on learning processes regarding their initial knowledge state. Despite the availability of certain instruments to measure student programming skills, these are traditionally aimed at younger populations and do not accurately discriminate the different levels of ability among university students. This article introduces a translation into Spanish and validation of an existing English-language aptitude test for computing jobs that can be used to measure the programming abilities of students with no prior experience in the field. Following a cyclic research methodology, two iterations were carried out in this article. First, the aforementioned test was translated and validated via expert judgment and focus groups, in which certain items were removed subsequent to a quantitative analysis. The resultant instrument underwent a second validation using a larger population of students. Analysis conducted after the second iteration showed this instrument to deliver good internal consistency, good difficulty and discrimination indices, and a moderate correlation with the grades of the midterm exam of a programming course undertaken by first year engineering students. This work contributes to both increasing the number of tests available in the Spanish language with which to assess programming abilities, as well as to the broader literature regarding test adaptation, translation and validation.},
journal = {ACM Trans. Comput. Educ.},
month = mar,
articleno = {21},
numpages = {20},
keywords = {Programming assessment, assessment, programming aptitude, validation, cs1, quantitative research}
}

@inproceedings{10.1145/3502717.3532127,
author = {Kirwan, Colette and Connolly, Cornelia},
title = {Computer Science Education in Ireland: Capacity, Access and Participation},
year = {2022},
isbn = {9781450392006},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3502717.3532127},
doi = {10.1145/3502717.3532127},
abstract = {Our world is both physical and digital. Students would benefit from understanding how this digital world works, and how algorithms drive it [2]. Students would also benefit from learning computational thinking, and becoming creators and designers of computer systems and applications. These are invaluable skills; not just a means to ensure a skilled workforce [1]. However, diversity, gender balance, and equality are recognized globally as challenges in this field. Looking through a lens filtered on four components: diversity, inclusion, teacher education and professional development, this study will evaluate current Computer Science (CS) learning opportunities in the Irish primary and post-primary curriculum. It aims to identify the opportunities and key factors for the growth and development of CS in Ireland. This research is divided into three phases, influenced by the three components of the CAPE model [3] that underpins this study: Capacity for, Access to, and Participation in CS education. Data will be gathered using various means: focus groups (students, teachers, principals and policymakers), and student questionnaires. The analytic approach is mixed, it involves document, thematic and content analysis. Findings from this study will provide a detailed view of the current landscape relating to CS education in Ireland, particularly its diversity and inclusion. Recommendations on the equitable integration of Computational Thinking/Coding/CS education across the formal education system in Ireland will be provided. This will have implications for educational policy, initial teacher education, and second-level teaching practice in Ireland and beyond.},
booktitle = {Proceedings of the 27th ACM Conference on on Innovation and Technology in Computer Science Education Vol. 2},
pages = {610},
numpages = {1},
keywords = {cape model, computer science landscape, diversity, equity., inclusion},
location = {Dublin, Ireland},
series = {ITiCSE '22}
}

@inproceedings{10.1145/3178158.3178175,
author = {Wen, Xinxiu and Yang, Zeping and Wang, Zhanquan},
title = {Research on enhancing non-major students' abilities based on constructivism},
year = {2018},
isbn = {9781450353595},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3178158.3178175},
doi = {10.1145/3178158.3178175},
abstract = {Improving students' abilities of computational thinking and professional problems solving is an urgent issue for non-major students who live in the information age. This paper first analyzes the reasons of the above issue from time gap and guide absence. Constructivism learning theory is then introduced as the guiding principle, and its four core characteristics are elaborated by the computer innovative practice base of East China University of Science and Technology (ECUST). Furthermore, the project based collaborative learning process is illustrated step by step to solve the existed problem. In the end, four years' experimental result shows the method is effective in improving students' abilities of analyzing professional problems, solving professional problem and cultivating computational thinking.},
booktitle = {Proceedings of the 6th International Conference on Information and Education Technology},
pages = {139–143},
numpages = {5},
keywords = {computational thinking, constructivism, professional problems solving, project based collaborative learning},
location = {Osaka, Japan},
series = {ICIET '18}
}

@inproceedings{10.1145/3582580.3582637,
author = {Tang, Wenlu and Cheng, Yun and Ai, Mingying and Yi, Xinyu},
title = {Case Study on a High-quality Information Technology Lesson Based on iFIAS},
year = {2023},
isbn = {9781450398015},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3582580.3582637},
doi = {10.1145/3582580.3582637},
abstract = {With the rapid development of artificial intelligence, big data, and education informatization, information technology education has been playing an important role in improving student's information competences and cultivating student's computational thinking. Information technology teachers can develop professional skills by the observation and analysis of high-quality information technology lessons. Therefore, this study selects a high-quality information technology lesson from the campaign which is held by Ministry of Education, analyzes its teaching behaviors based on improved Flanders Interaction Analysis System(iFIAS), as well as summarizes the key characteristics and problems, aiming to provide references for information technology teachers to improve teaching quality.},
booktitle = {Proceedings of the 2022 5th International Conference on Education Technology Management},
pages = {327–332},
numpages = {6},
keywords = {Information technology, analysis of teaching Behavior, high-quality lesson, iFIAS},
location = {Lincoln, United Kingdom},
series = {ICETM '22}
}

@inproceedings{10.1145/3626253.3635617,
author = {Berner, Maverick and Berner, Maximus and Ronan, Darcy and Brylow, Dennis},
title = {Co-Designing Integrated CS Curriculum Artifacts with K-5 Classroom Teachers},
year = {2024},
isbn = {9798400704246},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3626253.3635617},
doi = {10.1145/3626253.3635617},
abstract = {What would happen if generalist K-5 teachers had the technical support to build custom digital tools integrating computing concepts across other fields of study? This could open new avenues for students to learn computational thinking, without compromising time spent in other important subject areas. Furthermore, it could grant teachers the same level of creativity in developing computing resources that they have in other curriculum areas, rather than being limited by available resources or by their own lack of expertise. With this poster, we will cover our approach to co-designing digital tools with K-5 teachers for the primary goal of integrating computing concepts into a variety of other subject areas. We reflect on the observations we made throughout the collaboration and how they impacted our approach moving forward. Additionally, we will highlight some of the tools that came out of the collaboration and how co-designing a specialized digital tool from the ground up granted teachers the flexibility to explore ideas beyond integrating computer science concepts, including student accessibility, engagement, and social emotional learning (SEL).},
booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1570–1571},
numpages = {2},
keywords = {accessibility, k-12 computing education, professional development},
location = {Portland, OR, USA},
series = {SIGCSE 2024}
}

@inproceedings{10.1145/3593663.3593666,
author = {D\"{u}mmel, Nikita and Westfechtel, Bernhard and Ehmann, Matthias},
title = {A Multi-Paradigm Programming Language for Education},
year = {2023},
isbn = {9781450399562},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3593663.3593666},
doi = {10.1145/3593663.3593666},
abstract = {An introductory CS1 course at universities has to meet different requirements. In addition to computational thinking, students have to learn a programming language and its underlying concepts. Furthermore, they should be educated in different paradigms such as procedural, object-oriented, and functional programming. Industrial-strength languages are optimized towards the requirements of professional software developers and tend to offer an overwhelming and complex set of language constructs. Using such a language in a CS1 course, students find themselves mainly struggling with learning the language, being primarily exposed to simple programs for demonstrating its constructs. In contrast, MuLE is an educational language that supports multiple paradigms with a small set of carefully designed constructs. Using MuLE, beginners may develop programming skills more easily, while they still learn underlying concepts systematically that may be transferred to other languages in their further education.},
booktitle = {Proceedings of the 5th European Conference on Software Engineering Education},
pages = {236–245},
numpages = {10},
keywords = {CS1 course, programming language, programming paradigm},
location = {Seeon/Bavaria, Germany},
series = {ECSEE '23}
}

@inproceedings{10.1145/3141880.3143780,
author = {von Hausswolff, Kristina},
title = {Practical thinking in programming education},
year = {2017},
isbn = {9781450353014},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3141880.3143780},
doi = {10.1145/3141880.3143780},
abstract = {Students are nowadays being introduced to the digital age as part of their formal education. This includes practical programming skills as well as more conceptual thinking tools developed in the discipline of computer science, sometimes denoted Computational Thinking (CT). The connection between CT and doing programming is sometimes thought of as the connection between theory and practice. The pragmatic thinker Dewey embraced practice in learning and argued that learning and knowing always come from experiencing the world. According to this view, there are no epistemological differences between theory and practice. In computer programming the student's active learning in the form of physical motor movement is important. Using the pragmatic way of analyzing learning to program puts a focus on the situated thinking during the practical programming, which relates to theories about CT. This research is focusing on the practical hands-on part of novice programming and in this aims at getting insights about factors important when learning to program that could inform teachers in the Computer Science classroom.},
booktitle = {Proceedings of the 17th Koli Calling International Conference on Computing Education Research},
pages = {203–204},
numpages = {2},
keywords = {computational thinking, computer science education, novice programming, practice, pragmatism},
location = {Koli, Finland},
series = {Koli Calling '17}
}

@inproceedings{10.1145/3311790.3396620,
author = {S. Sinkovits, Robert and D. Soto, Osvaldo},
title = {Introducing Computing and Technology through Problem-Solving in Discrete Mathematics},
year = {2020},
isbn = {9781450366892},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3311790.3396620},
doi = {10.1145/3311790.3396620},
abstract = {Mathematics is usually taught using a traditional pencil-and-paper approach and frequently lacks real-world contextual referents, leading to a sense of alienation among secondary students and missed opportunities to advance students’ mathematical and computational thinking. In contrast, many real-world problems require mathematical solutions that are often of such a scale that they can only be solved using computational techniques, but require powerful ways of thinking that span the Common Core State Standards (CCSS) for Mathematical Practices (MP) and Computer Science Principles (CSP). We describe here our program that aims at advancing both MPs and CSPs through the introduction of technology and computing into the high school discrete mathematics curriculum. Our goal in the first two years of this new program is to reach a cohort of 40 teachers and 72 students. Using lessons learned from this pilot, we will consider how our program can be scaled up to reach a much larger audience.},
booktitle = {Practice and Experience in Advanced Research Computing 2020: Catch the Wave},
pages = {429–435},
numpages = {7},
keywords = {Computational thinking, Jupyter notebooks, STEM education, discrete math, secondary education},
location = {Portland, OR, USA},
series = {PEARC '20}
}

@inproceedings{10.1145/3545945.3569736,
author = {Friend, Michelle and Swift, Andrew W. and Love, Betty and Winter, Victor},
title = {A Wolf in Lamb's Clothing: Computer Science in a Mathematics Course},
year = {2023},
isbn = {9781450394314},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3545945.3569736},
doi = {10.1145/3545945.3569736},
abstract = {If computer science programs face a challenge of convincing students that programming is fun and achievable, they have nothing on mathematics departments who face societal beliefs that math is hard and scary. Several movements in computer science education have focused on broadening participation within computer science and across disciplines. The "CS + X" efforts have focused on helping computer science integrate into other disciplines. The "CS For All" movement has highlighted the importance of providing high quality computing education for all students. Simultaneously, there is increasing attention to the need to provide general education alternatives to college algebra. This paper describes a course designed to combine these goals: a course that uses programming to introduce students to functions, patterns, and spatial and computational thinking in order to meet quantitative reasoning goals set by the university. The course initially used Bricklayer as the programming environment, then transitioned to Processing. Students were successful in writing programs that created art, demonstrated mastery of quantitative literacy, and had improved attitudes following the course. This project suggests that in addition to the creation of introductory computer science classes, courses which embed computer science into disciplinary requirements can be a successful pathway to expand opportunities for students to learn computing.},
booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 1},
pages = {256–262},
numpages = {7},
keywords = {cs+x, interdisciplinary, mathematics},
location = {Toronto ON, Canada},
series = {SIGCSE 2023}
}

@inproceedings{10.1145/3372782.3406268,
author = {Gendreau Chakarov, Alexandra and Biddy, Quentin and Jacobs, Jennifer and Recker, Mimi and Sumner, Tamara},
title = {Opening the Black Box: Investigating Student Understanding of Data Displays Using Programmable Sensor Technology},
year = {2020},
isbn = {9781450370929},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3372782.3406268},
doi = {10.1145/3372782.3406268},
abstract = {This paper describes the design and classroom implementation of a week-long unit that aims to integrate computational thinking (CT) into middle school science classes using programmable sensor technology. The goals of this sensor immersion unit are to help students understand why and how to use sensor and visualization technology as a powerful data-driven tool for scientific inquiry in ways that align with modern scientific practice. The sensor immersion unit is anchored in the investigation of classroom data where students engage with the sensor technology to ask questions about and design displays of the collected data. Students first generate questions about how data data displays work and then proceed through a set of programming exercises to help them understand how to collect and display data collected from their classrooms by building their own mini data displays. Throughout the unit students draw and update their hand drawn models representing their current understanding of how the data displays work. The sensor immersion unit was implemented by ten middle school science teachers during the 2019/2020 school year. Student drawn models of the classroom data displays from four of these teachers were analyzed to examine students' understandings in four areas: function of sensor components, process models of data flow, design of data displays, and control of the display. Students showed the best understanding when describing sensor components. Students exhibited greater confusion when describing the process of how data streams moved through displays and how programming controlled the data displays.},
booktitle = {Proceedings of the 2020 ACM Conference on International Computing Education Research},
pages = {291–301},
numpages = {11},
keywords = {computational thinking, micro:bit, middle school science, sensors},
location = {Virtual Event, New Zealand},
series = {ICER '20}
}

@inproceedings{10.1145/3328778.3366878,
author = {Yett, Bernard and Hutchins, Nicole and Stein, Gordon and Zare, Hamid and Snyder, Caitlin and Biswas, Gautam and Metelko, Mary and L\'{e}deczi, \'{A}kos},
title = {A Hands-On Cybersecurity Curriculum Using a Robotics Platform},
year = {2020},
isbn = {9781450367936},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3328778.3366878},
doi = {10.1145/3328778.3366878},
abstract = {This paper presents a study using a robotics platform for teaching computing and cybersecurity concepts to high school students. 38 students attended a week-long camp, starting with projects such as a simulation-only game and a simple autonomous driving program for the robots in order to learn and apply computational thinking (CT) and networking skills. They were then assigned a series of challenges that required developing progressively more advanced cybersecurity measures to protect their robots. This culminated in a final challenge that required implementing defensive measures such as encryption, secure key exchange and sequence numbers. We used an evidence-centered design framework to construct rubrics for grading student work. The pre- and post-test results show that the interventions helped students learn cybersecurity and CT concepts, but they had difficulties with networking concepts. These results correlate with scores from the game and the final challenge. Overall, surveys show that the competition-based robotics learning framework engaged students and supported their overall learning, but our intervention needs to be modified to help students learn networking concepts},
booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
pages = {1040–1046},
numpages = {7},
keywords = {block-based programming, computational thinking, computer science education, cybersecurity, networking, robotics},
location = {Portland, OR, USA},
series = {SIGCSE '20}
}

@inproceedings{10.1145/3372782.3406257,
author = {Franklin, Diana and Salac, Jean and Crenshaw, Zachary and Turimella, Saranya and Klain, Zipporah and Anaya, Marco and Thomas, Cathy},
title = {Exploring Student Behavior Using the TIPP&amp;SEE Learning Strategy},
year = {2020},
isbn = {9781450370929},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3372782.3406257},
doi = {10.1145/3372782.3406257},
abstract = {With the rise of Computational Thinking (CT) instruction at the elementary level, it is imperative for elementary computing instruction to support a variety of learners. TIPP&amp;SEE is a meta-cognitive learning strategy that scaffolds student learning when learning from example code. Results from a previous study show statistically-significant performance differences favoring students using the TIPP&amp;SEE strategy on a written assessment. In this work, our goal is gain insight as to it why such dramatic learning differences may have occurred. We analyze the students' computational artifacts and TIPP&amp;SEE worksheets. Artifact analysis reveals that students in the TIPP&amp;SEE group are more thorough in their work, completing more elements of the required tasks. In addition, they build open-ended projects with longer scripts that utilize more learned blocks. Worksheet analysis shows that students were highly accurate on some types of questions but largely skipped others. Despite these positive behaviors, there was little statistical correlation between student worksheet correctness, project completion, and written assessment performance. Therefore, while students in the TIPP&amp;SEE group performed actions we believe lead to more success, no individual actions directly explain the results. Like other meta-cognitive strategies, the value of TIPP&amp;SEE may lie in cognitive processes not directly observable, and may vary based upon individual student differences.},
booktitle = {Proceedings of the 2020 ACM Conference on International Computing Education Research},
pages = {91–101},
numpages = {11},
keywords = {computational thinking, elementary education, learning strategy, scratch},
location = {Virtual Event, New Zealand},
series = {ICER '20}
}

@inproceedings{10.1145/3328778.3367003,
author = {Soh, Leen-Kiat and Peteranetz, Markeya S. and Glebova, Olga},
title = {Adopting, Integrating, and Evaluating Computational Creativity Exercises and an Experience Report},
year = {2020},
isbn = {9781450367936},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3328778.3367003},
doi = {10.1145/3328778.3367003},
abstract = {In this workshop, participants will learn how to integrate into their classes computational thinking and creative thinking activities that have been shown via rigorous research to significantly improve student learning and performance. Specifically, participants will be familiarized with the suite of Computational Creativity Exercises (non-programming-based, group-based, active learning exercises), take part in completing one of the exercises, learn how to integrate and adapt them into their courses, and be exposed to the educational research studies behind the development, design, and administration of these exercises. Participants will also learn how to conduct evidence-based, educational research studies. Workshop sessions will include presentations, an experience report, breakout group discussions, and hands-on activities. More information can be found at cse.unl.edu/agents/ic2think/CCEWorkshop},
booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
pages = {1392},
numpages = {1},
keywords = {computational thinking, creative thinking, exercises},
location = {Portland, OR, USA},
series = {SIGCSE '20}
}

@inproceedings{10.1145/3386392.3399326,
author = {Delzanno, Giorgio and Guerrini, Giovanna and Perotto, Simone and Traverso, Flavio and Mammoliti, Sofia and Staglian\`{o}, Susanna},
title = {Codinji: Welcome to the Coding Jungle!},
year = {2020},
isbn = {9781450379502},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3386392.3399326},
doi = {10.1145/3386392.3399326},
abstract = {In this paper we discuss design principles, educational goals, implementation issues and practical results of the Codinj laboratory organized at the Genova Science Festival to promote computational thinking to a broad audience via a novel combination of the Pocket Code App and the Scratch 3.0 tool. Inspired by the original Jumanji movie, the entire activity is based on the idea of using coding to help participants in being part, conceptually and physically, of a video game. From an educational perspective, the proposed exercises are aimed at introducing, with a clear goal in mind, basic computational thinking concepts such as the notion of state, instructions, executions, events and concurrency.},
booktitle = {Adjunct Publication of the 28th ACM Conference on User Modeling, Adaptation and Personalization},
pages = {151–154},
numpages = {4},
keywords = {adaptation, computer science education, personalization},
location = {Genoa, Italy},
series = {UMAP '20 Adjunct}
}

@inproceedings{10.1145/2839509.2844656,
author = {Horn, Britton and Clark, Christopher and Strom, Oskar and Chao, Hilery and Stahl, Amy J. and Harteveld, Casper and Smith, Gillian},
title = {Design Insights into the Creation and Evaluation of a Computer Science Educational Game},
year = {2016},
isbn = {9781450336857},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2839509.2844656},
doi = {10.1145/2839509.2844656},
abstract = {Computer Science (CS) education at the middle school level using educational games has seen recent growth and shown promising results. Typically these games teach the craft of programming and not the perspectives required for computational thinking, such as abstraction and algorithm design, characteristic of a CS curriculum. This research presents a game designed to teach computational thinking via the problem of minimum spanning trees to middle school students, a set of evaluation instruments, and the results of an experimental pilot study. Results show a moderate increase in minimum spanning tree performance; however, differences between gender, collaboration method, and game genre preference are apparent. Based on these results, we discuss design considerations for future CS educational games focused on computational thinking.},
booktitle = {Proceedings of the 47th ACM Technical Symposium on Computing Science Education},
pages = {576–581},
numpages = {6},
keywords = {computational thinking, educational games, game design},
location = {Memphis, Tennessee, USA},
series = {SIGCSE '16}
}

@article{10.5555/3205191.3205223,
author = {Jin, Karen H.},
title = {Students' understanding of basic computational concepts in an introduction to mobile development course},
year = {2018},
issue_date = {June 2018},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {33},
number = {6},
issn = {1937-4771},
abstract = {Building basic computational thinking skills is an important goal in courses that introduce computing to students with limited programming background. Among choices of tools and platforms, MIT App Inventor is a popular mobile app development environment particularly suitable for engaging novice learners. Users are able to create their own mobile apps with real-world usefulness without having to deal with difficult language syntax. However, a study of computational thinking assessment showed students had difficulties in learning abstract concepts such as procedure and flow control using App Inventor [1]. Meanwhile, non-CS major students demonstrated a lack of continuous growth in computational thinking skills compared to CS major students [1]. In another recent study [2], students reported increased interests in computing after being exposed to modern responsive web development, but it is unclear if having an HTML/CSS background makes it more effective in learning abstract computational concepts when using App Inventor.},
journal = {J. Comput. Sci. Coll.},
month = jun,
pages = {183–185},
numpages = {3}
}

@inproceedings{10.1145/3421590.3421619,
author = {Benvenuti, Martina and Chioccariello, Augusto},
title = {Programming an educational robot with 5-6 year-old children},
year = {2020},
isbn = {9781450387590},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3421590.3421619},
doi = {10.1145/3421590.3421619},
abstract = {Computational Thinking is currently being introduced into formal education in many European countries. This has stimulated research on how to introduce computational thinking and programming in primary school and in early childhood education. This study describes a work in progress that aims to verify the potential of a programmable educational robot, Cubetto, for 5-6 year-old children in enhancing their classroom activities. The study was carried out in two Italian kindergartens (42 children) and one primary school (21 children). Preliminary results show that the efficacy of Cubetto is strongly dependent on the context of use during classroom activities. The degree of children's attention (in terms of duration) depends on the teacher's ability in involving and supporting children during tasks performed with Cubetto.},
booktitle = {Proceedings of the 15th Workshop on Primary and Secondary Computing Education},
articleno = {31},
numpages = {2},
keywords = {educational robot, kindergarten, primary school, programming},
location = {Virtual Event, Germany},
series = {WiPSCE '20}
}

@inproceedings{10.1145/3421590.3421599,
author = {Chioccariello, Augusto and Bottino, Rosa and Panesi, Sabrina and Freina, Laura},
title = {Longitudinal approach for introducing programming in italian primary school},
year = {2020},
isbn = {9781450387590},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3421590.3421599},
doi = {10.1145/3421590.3421599},
abstract = {Computational Thinking (CT) and related concepts, as programming and algorithmic thinking, have been recently advocated as abilities that are as fundamental as numeracy and literacy, and many countries all over the world are introducing programming activities in education. In Italy, even if the introduction of CT and programming in schools is on the pipeline of policy makers, they have not yet been included in the curriculum guidelines. Consequently, there is a strong case for analyzing how programming can be integrated at early stages into the Italian compulsory education. Starting from the constructivist tradition, a study spanning over several school years has been organized aiming at defining and testing a programming learning path for primary schools. The learning path takes into account children's interests, stimulating their passions and creativity. Students are engaged on projects that are meaningful for them, while teachers take advantage of the situations that spontaneously arise to guide students' attention on specific computational concepts. The learning path is being iteratively refined through a field experiment involving a primary school over a four year period. The study aims to the following questions:• Under which conditions can age-appropriate programming activities, allowing for individual differences in learning styles and approaches, work in primary school?• Which indications can the work performed provide to the sustainability of the programming activities when the researchers' support will come to an end?• Which elements of the study can provide suggestions for a wider introduction of programming in primary schools?Since the study is currently in its third year, this paper addresses the first two research question, while only some initial considerations are provided for the third one.},
booktitle = {Proceedings of the 15th Workshop on Primary and Secondary Computing Education},
articleno = {11},
numpages = {6},
keywords = {computational thinking, primary education, programming},
location = {Virtual Event, Germany},
series = {WiPSCE '20}
}

@inproceedings{10.1145/3531073.3531180,
author = {Capecchi, Sara and Gena, Cristina and Lombardi, Ilaria},
title = {Visual and unplugged coding with smart toys},
year = {2022},
isbn = {9781450397193},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3531073.3531180},
doi = {10.1145/3531073.3531180},
abstract = {Our Computer science k-12 education research group the educational toy company Quercetti have been collaborating together to design and manufacture toys that help stimulate and consolidate so-called computational thinking. This approach has been inspired by methods already consolidated in the literature and widespread worldwide such as the Bebras tasks and CS-Unplugged. This paper describes two of these smart toys, their design process, some evaluation’s results, and finally feedback and reviews from buyers. The main activities proposed by these toys leverage visual coding through small colored physical items (e.g., pegs and balls) to deliver the unplugged activities to young users.},
booktitle = {Proceedings of the 2022 International Conference on Advanced Visual Interfaces},
articleno = {26},
numpages = {5},
keywords = {CS education, CS unplugged, visual coding},
location = {Frascati, Rome, Italy},
series = {AVI '22}
}

@inproceedings{10.1145/3356393.3365368,
author = {Dean, Denis J.},
title = {Some Observations Regarding Geocomputational Teaching through Interdisciplinary Teams},
year = {2019},
isbn = {9781450369527},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3356393.3365368},
doi = {10.1145/3356393.3365368},
abstract = {Geocomputation is an inherently interdisciplinary topic, combining both geospatial information science (GISc) and computer science (CS). It could be taught by individuals with strong backgrounds in both areas, but it is argued that such individuals are rare and academia is poorly positioned to produce a future generation of such dual-skilled individuals. Interdisciplinary team teaching is presented as an alternative. Hurdles to developing such team-taught classes are identified, and possible ways to overcome them are presented. Finally, a way of restructuring academia to be more supportive of such interdisciplinary team projects is presented.},
booktitle = {Proceedings of the 1st ACM SIGSPATIAL International Workshop on Geo-Computational Thinking in Education},
articleno = {1},
numpages = {5},
keywords = {Education, Geospatial information science (GISc), Interdisciplinarity},
location = {Chicago, IL, USA},
series = {GeoEd'19}
}

@inproceedings{10.1145/3328778.3366822,
author = {Salac, Jean and Thomas, Cathy and Twarek, Bryan and Marsland, William and Franklin, Diana},
title = {Comprehending Code: Understanding the Relationship between Reading and Math Proficiency, and 4th-Grade CS Learning Outcomes},
year = {2020},
isbn = {9781450367936},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3328778.3366822},
doi = {10.1145/3328778.3366822},
abstract = {As many school districts nationwide continue to incorporate Computer Science (CS) and Computational Thinking (CT) instruction at the K-8 level, it is crucial that we understand the factors and skills, such as reading and math proficiency, that contribute to the success of younger learners in a computing curriculum and are typically developed at this age. Yet, little is known about the relationship between reading and math proficiency, and the learning of key CS concepts at the elementary level. This study focused on 4th-grade students (ages 9-10) who were taught events, sequence, and repetition through an adaptation of the Creative Computing Curriculum. While all students benefited from access to such a curriculum, there were statistically-significant differences in learning outcomes, especially between students whose reading and math proficiency are below grade-level, and students whose proficiency are at or above grade-level. This performance gap suggests the need for curricular improvement and learning strategies that are CS specific for students who struggle with reading and math.},
booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
pages = {268–274},
numpages = {7},
keywords = {computational thinking, k-8 education, math proficiency, reading comprehension},
location = {Portland, OR, USA},
series = {SIGCSE '20}
}

@inproceedings{10.1145/3582515.3609570,
author = {Bakala, Ewelina and Pires, Ana Cristina and Tejera, Gonzalo and Hourcade, Juan Pablo},
title = {“It will surely fall”: Exploring Teachers’ Perspectives on Commercial Robots for Preschoolers},
year = {2023},
isbn = {9798400701160},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3582515.3609570},
doi = {10.1145/3582515.3609570},
abstract = {This paper presents a study with kindergarten teachers to assess the advantages, challenges and opportunities of commercial robots to teach computational thinking to young children. Recent studies have highlighted the potential benefits of introducing CT concepts at an early stage. Robots are an engaging and effective educational tool for teaching CT to young children, providing hands-on and interactive learning experiences. Entirely tangible robotic environments have successfully connected the abstract world of CT with the concrete world of preschoolers. Children can program robots by pressing buttons, drawing the path or using code cards. However, there is limited research on the use of commercial robots in preschool classrooms. This research aims to address this gap by investigating preschool teachers’ perspectives on the advantages, challenges, and opportunities associated with using commercial robots in the context of kindergarten classrooms. We contribute with a list of practical, pedagogical and motivational aspects that should be taken into account while evaluating robots and design considerations to build robotic environments for kindergarten classrooms.},
booktitle = {Proceedings of the 2023 ACM Conference on Information Technology for Social Good},
pages = {477–486},
numpages = {10},
keywords = {Educational robotics, Preschoolers, Teachers’ perspective},
location = {Lisbon, Portugal},
series = {GoodIT '23}
}

@inproceedings{10.1145/3641554.3701810,
author = {Borela, Rodrigo and Liding, Zhixian and McDaniel, Melinda},
title = {Enhancing CS1 Education through Experiential Learning with Robotics Projects},
year = {2025},
isbn = {9798400705311},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3641554.3701810},
doi = {10.1145/3641554.3701810},
abstract = {To address the challenges of generative AI in CS1 education, especially its misuse by students to bypass coding exercises, which undermines their engagement with foundational learning, CS1 curricula are evolving to emphasize higher-level problem-solving and systems thinking. In response, a novel experiential learning initiative grounded in High-Impact Practices was introduced to a CS1 course over the course of 2 semesters, involving 132 students. This initiative utilized robotics lab assignments to enhance computational thinking across various levels of granularity, from individual functional components to overall system behaviors, bridging conceptual understanding with real-world applications. The approach emphasized project-based learning, extended engagement time, and reflective practices to deepen students' understanding of core computing concepts and scaffold knowledge integration. The curriculum featured both individual and team-based lab assignments to build foundational skills followed by collaborative problem-solving. The initiative's impact was assessed against a control group of 427 students who completed traditional web development lab assignments. Evaluation methods included thematic analyses of student reflections, instructor opinion surveys, and statistical analysis of exam performances across the semester. Results revealed a substantial positive effect on self-efficacy and learning outcomes. Students in the experiential learning group reported increased confidence in applying their computing skills to real-world scenarios, heightened engagement, and greater improvements in technical proficiency. Notably, their exam scores demonstrated a statistically significant improvement compared to the control group. These findings highlight the effectiveness of integrating practical, interactive elements into computer science education to meet the demands of a rapidly evolving technological landscape.},
booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 1},
pages = {144–150},
numpages = {7},
keywords = {artificial intelligence, collaborative learning, cs1, experiential learning, robotics},
location = {Pittsburgh, PA, USA},
series = {SIGCSETS 2025}
}

@inproceedings{10.1145/3649217.3653590,
author = {Sanhueza, Felipe and Gutierrez, Francisco J. and Vasquez, Andrea},
title = {Exploring the Acceptance and Effectiveness of Parsons Problems on Scaffolding CS1 Retakers},
year = {2024},
isbn = {9798400706004},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3649217.3653590},
doi = {10.1145/3649217.3653590},
abstract = {Given the importance of the introductory programming course (CS1), the Computer Science Education community has devoted a significant effort to generate empirical evidence and propose tools, techniques, and curricular approaches to support students. For instance, Parsons Problems have emerged as one of the preferred scaffolding strategies to help CS1 students get a grasp on programming before being exposed to open write-code assignments. However, prior literature has not given enough attention to those students who fail CS1 and must retake the course. In this paper, we report the results of an exploratory case study aimed at understanding the effectiveness of Parsons Problems as an active scaffolding strategy delivered to CS1 retakers at the University of Chile. In this version of the course, although students were already introduced to computational thinking, program design, and coding (as they were taking CS1 for a second time), it was the first time they were exposed to Parsons Problems. We conducted a follow-up assessment of the students' perceptions throughout the course, employing a combination of focus groups, semi-structured interviews, and end-course surveys. Our results suggest that Parsons Problems are effective for learners beyond the ''novice programmer'' stage (such as the experience of CS1 retakers), highlighting good practices to support the studied group in terms of engagement, performance, and overall student experience.},
booktitle = {Proceedings of the 2024 on Innovation and Technology in Computer Science Education V. 1},
pages = {681–687},
numpages = {7},
keywords = {cs1, novice programmers, parsons problems, retakers},
location = {Milan, Italy},
series = {ITiCSE 2024}
}

@inproceedings{10.1145/3290607.3312871,
author = {Rose, Simon P. and Habgood, M.P. Jacob and Jay, Tim},
title = {Using Pirate Plunder to Develop Children's Abstraction Skills in Scratch},
year = {2019},
isbn = {9781450359719},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3290607.3312871},
doi = {10.1145/3290607.3312871},
abstract = {Scratch users often struggle to detect and correct 'code smells' (bad programming practices) such as duplicated blocks and large scripts, which can make programs difficult to understand and debug. These 'smells' can be caused by a lack of abstraction, a skill that plays a key role in computer science and computational thinking. We created Pirate Plunder, a novel educational block-based programming game, that aims to teach children to reduce smells by reusing code in Scratch. This work describes an experimental study designed to measure the efficacy of Pirate Plunder with children aged 10 and 11. The findings were that children who played the game were then able to use custom blocks (procedures) to reuse code in Scratch, compared to non-programming and programming control groups.},
booktitle = {Extended Abstracts of the 2019 CHI Conference on Human Factors in Computing Systems},
pages = {1–6},
numpages = {6},
keywords = {abstraction, computational thinking, computer science education, pirate plunder, scratch, visual programming},
location = {Glasgow, Scotland Uk},
series = {CHI EA '19}
}

@inproceedings{10.1145/3582515.3609525,
author = {Franceschini, Andrea and Rod\`{a}, Antonio},
title = {Play to Learn: from Serious Games to just Games},
year = {2023},
isbn = {9798400701160},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3582515.3609525},
doi = {10.1145/3582515.3609525},
abstract = {Games have been used for a few decades in research, formal education, and training of children and adults, and digital games are no strangers to educational uses. After all, everyone likes to play games, so it should stand to reason that educational digital games are going to be a hit. Unfortunately, this is not the case. In fact, educational digital games are often criticized for being too focused on educational content and not enough on engaging, challenging, and entertaining players. Making games for entertainment is difficult and requires multidisciplinary expertise. Making educational games that are engaging and entertaining is also difficult and requires additional input from educators and domain experts, and rigorous evaluation methodologies, all of which must revolve around the players. In this position article, we introduce the early stage “EduGames: Play to Learn” research project aimed at supporting the public in acquiring Critical and Computational Thinking skills to tackle the problem of detecting misinformation, and supporting the game development and research communities in creating and evaluating games that are entertaining and educational. As part of this project, we call for more, and more structured, synergy between academia, educators, and the game development industry.},
booktitle = {Proceedings of the 2023 ACM Conference on Information Technology for Social Good},
pages = {117–127},
numpages = {11},
keywords = {digital games, entertainment, serious games, video games},
location = {Lisbon, Portugal},
series = {GoodIT '23}
}

@inproceedings{10.1145/3408877.3439665,
author = {Burke, Quinn and Iwatani, Emi and Ruiz, Pati and Tackett, Traci and Owens, Aileen},
title = {Pivoting in a Pandemic: Transitioning from In-person to Virtual K-8 Computing Professional Development},
year = {2021},
isbn = {9781450380621},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3408877.3439665},
doi = {10.1145/3408877.3439665},
abstract = {This poster reports on year one of a three-year NSF-funded Research Practitioner Partnership (RPP) to develop a K-8 pipeline for computer science (CS) and computational thinking (CT) education within two rural school districts in Eastern Kentucky : Pikeville Independent School District and Floyd County Schools. Economically devastated by the departure of the coal industry, these communities are committed to developing high-quality computing curricula for all students, beginning in their earliest years. The poster has two components. First, through a mixture of qualitative measures, the poster reports on the genesis and development of the RPP. It focuses on the RPP's origin in leveraging the districts' existing relationship with Pennsylvania's South Fayette School District, which has developed one of the nation's leading programs for teacher professional development (PD) in K-12 computing. The second component of the poster focuses on the development of a series of summer workshops for Kentucky Appalachia K-8 instructors to learn the basics of CS and CT and how to integrate these skills and concepts into existing K-8 coursework. Of course, the RPP faced new challenges with COVID-19 most notably, the need to offer these summer workshops remotely, and adjusting the objectives and research questions accordingly. Through focus groups with the PD instructional team and survey responses from the KY teacher workshop participants, the poster will report on the pedagogical implications of offering teacher PD exclusively online and what the ramifications have been for Pikeville and Floyd County children with the return to school in the Fall of 2020.},
booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
pages = {1273},
numpages = {1},
keywords = {computational thinking, educational equity, research practice partnership (rpp), rural education},
location = {Virtual Event, USA},
series = {SIGCSE '21}
}

@inproceedings{10.1145/3609987.3610004,
author = {Gardeli, Anna and Vosinakis, Spyros},
title = {Exploring the co-manipulation of physical and virtual objects in tangible mobile augmented reality for collaborative learning},
year = {2023},
isbn = {9798400708886},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3609987.3610004},
doi = {10.1145/3609987.3610004},
abstract = {Collaborative mobile augmented reality (MAR) has emerged as a promising tool in the field of education. This technology enables multiple users to interact with digital content overlaid on the physical world through their mobile devices. Collaborative MAR combined with tangible elements enhances learning by integrating physical objects that can be manipulated and interacted with in the augmented reality environment, providing a hands-on and immersive educational experience. This study explores the impact of tangible mobile augmented reality on collaboration and object manipulation. Our goal is to understand how mobile devices’ manipulation affects collocated students' collaboration in tangible MAR in terms of ease of use and collaboration. The study involves participants working in pairs to facilitate collaboration through a MAR game for developing the computational thinking skills of primary school students. Our goal is to compare the perceived behaviors and interactions that emerged in two distinct MAR settings: (1) Stand-mounted device condition, where the device is fixed on a mobile stand, and (2) Hand-held device condition, where the device is held by one of the team's players. The same task is simulated in both settings to allow for direct comparison. The results of this study can help inform the design and development of future MAR systems and provide insights into the potential benefits and challenges in terms of collaboration and object manipulation.},
booktitle = {Proceedings of the 2nd International Conference of the ACM Greek SIGCHI Chapter},
articleno = {17},
numpages = {8},
location = {Athens, Greece},
series = {CHIGREECE '23}
}

@inproceedings{10.1145/3626252.3630909,
author = {Denny, Paul and Leinonen, Juho and Prather, James and Luxton-Reilly, Andrew and Amarouche, Thezyrie and Becker, Brett A. and Reeves, Brent N.},
title = {Prompt Problems: A New Programming Exercise for the Generative AI Era},
year = {2024},
isbn = {9798400704239},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3626252.3630909},
doi = {10.1145/3626252.3630909},
abstract = {Large language models (LLMs) are revolutionizing the field of computing education with their powerful code-generating capabilities. Traditional pedagogical practices have focused on code writing tasks, but there is now a shift in importance towards reading, comprehending and evaluating LLM-generated code. Alongside this shift, an important new skill is emerging -- the ability to solve programming tasks by constructing good prompts for code-generating models. In this work we introduce a new type of programming exercise to hone this nascent skill: 'Prompt Problems'. Prompt Problems are designed to help students learn how to write effective prompts for AI code generators. A student solves a Prompt Problem by crafting a natural language prompt which, when provided as input to an LLM, outputs code that successfully solves a specified programming task. We also present a new web-based tool called Promptly which hosts a repository of Prompt Problems and supports the automated evaluation of prompt-generated code. We deploy Promptly in one CS1 and one CS2 course and describe our experiences, which include student perceptions of this new type of activity and their interactions with the tool. We find that students are enthusiastic about Prompt Problems, and appreciate how the problems engage their computational thinking skills and expose them to new programming constructs. We discuss ideas for the future development of new variations of Prompt Problems, and the need to carefully study their integration into classroom practice.},
booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 1},
pages = {296–302},
numpages = {7},
keywords = {ai code generation, artificial intelligence, generative ai, large language models, llms, prompt engineering, prompt problems},
location = {Portland, OR, USA},
series = {SIGCSE 2024}
}

@inproceedings{10.1145/3626253.3635631,
author = {Yan, Wei and Bennett, Andrew and Cobo, Alexis and Israel, Maya},
title = {A Cross-Case Analysis of Experienced Educators in CS Inclusion},
year = {2024},
isbn = {9798400704246},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3626253.3635631},
doi = {10.1145/3626253.3635631},
abstract = {Educators should provide access to all students with inclusive and equitable computer science (CS) and computational thinking (CT) learning outcomes. Yet access to CS and CT is not always available for students with disabilities. This qualitative cross-case study examined the barriers and strengths three exemplar teachers faced, explored the supports and resources they provided, and presented how these teachers defined successful inclusive CS learning outcomes for their students. The data set included analysis of the semistructured teachers' interviews and teaching materials. The results included seven successful strategies the teachers identified: 1) using physical computing, 2) pair programming, 3)connecting CS and Individual Education Plans (IEP), 4)applying hands-on activities, 5) CT integration, 6) using CS vocabulary, and 7)open-ended pedagogy. Three resources and supports the teacher provided emerged from the data set as follows: 1) accessible instructional materials, 2) projects with multiple entry points, and 3) essential scaffolding supports. Whereas four barriers teachers faced; 1. subject matter, 2) accessible tools, 3) students receiving support, 3) the role of CS in instruction, and 4) the role of time served as additional findings. The results suggested that school-based practitioners, including administrators, can overcome the barriers and promote successful strategies that lead to asset-based CS-inclusion in the classroom.},
booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1863–1864},
numpages = {2},
keywords = {accessibility, cs education, inclusion, special education},
location = {Portland, OR, USA},
series = {SIGCSE 2024}
}

@inproceedings{10.1145/3361721.3361732,
author = {Benvenuti, Martina and Chioccariello, Augusto and Giammoro, Giorgia},
title = {Programming to learn in Italian primary school},
year = {2019},
isbn = {9781450377041},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3361721.3361732},
doi = {10.1145/3361721.3361732},
abstract = {The Italian Ministry of Education is promoting the introduction of coding and computational thinking at compulsory school level. One of the research initiatives being taken in this regard is "Programming to Learn in Italian Primary School". The project's aim is to develop a vertical curriculum for the introduction of programming in Italian primary schools as a new expressive language for children. All the schoolchildren involved in the project attend a weekly computer lab class held throughout the school year. They work on individual projects during the first half of the year. Then, in the second half of the year, they work in small groups on a common theme that the teacher selects from those studied in class. In this poster, we report the work of a fifth-grade class (24 students -- 7 females and 17 males, aged 10-11) in the 2017-2018 school year. Findings from individual and group Scratch programs produced, self-evaluation questionnaire and semi-structured interviews with the groups are presented.},
booktitle = {Proceedings of the 14th Workshop in Primary and Secondary Computing Education},
articleno = {5},
numpages = {2},
keywords = {Computational thinking, Primary school, Programming},
location = {Glasgow, Scotland, Uk},
series = {WiPSCE '19}
}

@article{10.5555/3532930.3532935,
author = {Hamid, Fahmida},
title = {A functional programming course in remote learning model: an experience report},
year = {2022},
issue_date = {April 2022},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {37},
number = {6},
issn = {1937-4771},
abstract = {This experience report shares the teaching methodology of a Functional Programming course (in Haskell) offered amid the Covid-19 pandemic. In addition to highlighting problem-solving and programming from a functional perspective, the course provides a solid example of modern pedagogical elements, including team-based programming, computational thinking, presentation skills, participation and discussion skills, and a sense of accountability. This report presents the methodologies applied to achieve the objectives in a liberal arts setup and discusses the learned lessons that may help an early-career faculty model an intro-programming course.},
journal = {J. Comput. Sci. Coll.},
month = apr,
pages = {36–45},
numpages = {10}
}

@inproceedings{10.1145/3450741.3466635,
author = {Graves, Jordan and Royer, Karen and Smith, Gillian and Sullivan, Anne},
title = {Procedural Patchwork: Community-Focused Generative Design for Quilting},
year = {2021},
isbn = {9781450383769},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3450741.3466635},
doi = {10.1145/3450741.3466635},
abstract = {We are developing quilt design generation software for Code Crafters workshops, which aim to broaden public awareness of computational thinking and build links between computer science and quilting. The software generates quilt designs, which will be manipulated and modified by workshop participants. Due to COVID, our workshops will be conducted remotely, so the software has been designed to increase the sense of community by providing opportunities for the types of social interactions that take place in colocated quilting workshops.},
booktitle = {Proceedings of the 13th Conference on Creativity and Cognition},
articleno = {56},
numpages = {3},
keywords = {Design software, adult education, computational craft, computer science education, generative design, informal science learning, quilting},
location = {Virtual Event, Italy},
series = {C&amp;C '21}
}

@inproceedings{10.1145/3626252.3630967,
author = {Lachney, Michael and Ferguson Bey, Brian and Mouzaoir, Samuela and Robinson, Christa},
title = {Worker-Driven Computing Education},
year = {2024},
isbn = {9798400704239},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3626252.3630967},
doi = {10.1145/3626252.3630967},
abstract = {Culturally responsive computing scholars often use the metaphor and heuristic of intersectionality to address issues of race and gender in research with Black, Brown, and Indigenous children in U.S. K12 computer science (CS) education. This has led to critical analyses that reveal the inequitable conditions that children of color face in CS education. Intersectionality has also supported curricular innovations and interventions that aim to make CS education more equitable by being responsive to children's identities and communities. However, the concept of class has received less attention than race and gender by culturally responsive computing scholars who draw on intersectionality in their CS education research. How might class fit into intersectional research and theory in culturally responsive computing scholarship? The objective of this paper is to answer this question with a proof-of-concept study that tests the feasibility of what we call worker-driven computing education. We introduce findings from our research and collaborations with current, once, and retired autoworkers in Detroit, Michigan to define the computational thinking idea of automation from their perspectives. Through analyzing qualitative data, a worker-driven definition of automation was developed by drawing on autoworker-expertise about the points of production in the auto-industry. Our findings reveal how this definition focuses on introducing automation in the context of lifelong learning about how to communicate and work across divisions of labor to make workplaces safe, healthy, and efficient.},
booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 1},
pages = {701–707},
numpages = {7},
keywords = {automation, class, culturally responsive computing, intersectionality, k12 computer science education},
location = {Portland, OR, USA},
series = {SIGCSE 2024}
}

@inproceedings{10.1145/3328778.3366917,
author = {Lee, Victor R. and Poole, Frederick and Clarke-Midura, Jody and Recker, Mimi and Rasmussen, Melissa},
title = {Introducing Coding through Tabletop Board Games and Their Digital Instantiations across Elementary Classrooms and School Libraries},
year = {2020},
isbn = {9781450367936},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3328778.3366917},
doi = {10.1145/3328778.3366917},
abstract = {This experience report describes an approach for helping elementary schools integrate computational thinking and coding by leveraging existing resources and infrastructure that do not rely on 1-1 computing. A particular focus is using the school library and media center as a site to complement and enhance classroom instruction on coding. Further, our approach builds upon "unplugged" knowledge and practices that are already familiar to and motivating for students, in this case tabletop board games. Through these games, students can use their prior knowledge and ease with tabletop gaming mechanics to cue relevant ideas for core computational concepts. We describe a model and an instructional unit spanning across classroom and school library settings that builds upon board game play as a source domain for computing knowledge. Building on expansive framing, the model emphasizes instructional linkages being made between one domain (the tabletop board game) and another (specially designed Scratch project shells with partially complete code blocks) such that the reasoning activities and different contexts are seen as instantiations of the same encompassing context. We present the experiences of three elementary school teachers as they implemented the unit in their classrooms and with their school librarian. We also show initial findings on the impact of the unit on student interest (N=87), as measured by pre- and post- surveys. We conclude with lessons learned about ways to improve the unit and future classroom implementations.},
booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
pages = {787–793},
numpages = {7},
keywords = {computational thinking, cs unplugged, elementary school coding, expansive framing},
location = {Portland, OR, USA},
series = {SIGCSE '20}
}

@inproceedings{10.1145/3328778.3372667,
author = {Killen, Heather and Coenraad, Merijke and Cabrera, Lautaro and Mills, Kelly and Ketelhut, Diane Jass and Plane, Jan},
title = {"We'll be Scratching all the Time"},
year = {2020},
isbn = {9781450367936},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3328778.3372667},
doi = {10.1145/3328778.3372667},
abstract = {School systems globally have begun to integrate computational thinking (CT) practices into elementary teaching and learning standards to provide young students with a comfort for and foundational understanding of computer science. This integration requires educating teachers to develop and implement CT learning opportunities. Our work contributes to best practice by exploring the role language plays in elementary teachers' discussions and development of CT-infused science lessons. To do this, we captured and analyzed the language used by elementary teachers as they spoke and wrote about CT in a multi-week professional development experience during which the teachers created and delivered CT-infused lessons to their students. We determined that teachers exhibited differing CT conceptualizations, which we categorized from broad to narrow. These differences were not, however, observed in either their spoken or written language. While there were instances of teachers using language that mirrored how the facilitators discussed CT, this use did not align with how they conceptualized CT. Our work analyzing connections between CT language use and CT conceptualization suggests that in order to understand how teachers are conceptualizing CT, professional development designers and teacher educators should focus on creating opportunities for teachers to employ CT practices in context rather than relying only on language. We feel this will support a more precise and nuanced engagement with CT.},
booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
pages = {1281},
numpages = {1},
keywords = {computational thinking, computational thinking terms, computing across the curriculum, elementary education, jargon, k-8, science inquiry, teacher professional development},
location = {Portland, OR, USA},
series = {SIGCSE '20}
}

@inproceedings{10.1145/3591139.3591155,
author = {Xu, Xiang and Liu, Rui and Chen, Qinqin and Yang, Hairu},
title = {A Digital Game-based Learning Approach to Improve Students’ Learning Performance of Senior High School Programming Courses},
year = {2023},
isbn = {9798400707506},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3591139.3591155},
doi = {10.1145/3591139.3591155},
abstract = {As an important means to improve teenagers' computational thinking, programming education has been paid more and more attention. But the traditional teaching mode of programming course is boring and abstract, which makes learners lack motivation and enthusiasm for learning. Therefore, learning methods based on digital games may be a potential optimization strategy. This paper proposes a learning method based on digital games and conducts a quasi-experimental study in a senior high school in China. The experimental group was placed in a learning method based on digital games to evaluate the effectiveness of the proposed learning method and game learning behavior, while the control group used traditional classroom teaching methods for learning. The results showed that the experimental group was better than the control group in learning experience, learning interest, collaborative learning ability and learning performance. It provides a valuable reference for Game-based programming teaching and research.Keywords: Digital game-based learning, Programming education, Teaching process},
booktitle = {Proceedings of the 2023 4th International Conference on Education Development and Studies},
pages = {23–28},
numpages = {6},
location = {Hilo, USA},
series = {ICEDS '23}
}

@inproceedings{10.1145/3605468.3609758,
author = {Nolan, Karen and Faherty, Roisin and Quille, Keith and Nolan, Keith and O'Farrell, Amanda and Becker, Brett A.},
title = {CS Outreach to Inform Secondary School Students' Perceptions of CS: Initial Findings},
year = {2023},
isbn = {9798400708510},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3605468.3609758},
doi = {10.1145/3605468.3609758},
abstract = {This study covers a three-year, longitudinal K–12 outreach initiative that promoted computer science in Ireland from 2017–2020. During the first year, 2017–2018, 2900 students participated in a pilot phase. 7320 students participated in the implementation phase throughout the course of the academic years 2018–2019 and 2019–2020 in 2018. The program consisted of a free, two-hour camp that was delivered on-site at the school and exposed children to a variety of computing topics, including addressing misconceptions about computing, learning how to code, and investigating computational thinking. Schools self-selected, and the initiative reached several schools in every county in Ireland, as well as schools with a wide range of socioeconomic backgrounds and gender diversity. The primary school students’ ages ranged from third class (7–8 years old) to sixth year (17–18 years old) at second level. This paper focuses specifically on the research data collected during the implementation phase (N=1202) from the secondary school students (12 - 18 years old) not enrolled in the formal Leaving Certificate Computer Science subject. Looking at student perceptions of Computer Science and if the outreach positively impacted those perceptions and if it built student interest in pursuing further study in Computer Science.},
booktitle = {Proceedings of the 18th WiPSCE Conference on Primary and Secondary Computing Education Research},
articleno = {13},
numpages = {6},
keywords = {Computer Science Education, Computing Camps Inclusive, Female Student, K-12, Outreach, Perceptions},
location = {Cambridge, United Kingdom},
series = {WiPSCE '23}
}

@inproceedings{10.1145/3446871.3469782,
author = {Buddemeyer, Amanda and Hatley, Leshell and Stewart, Angela and Solyst, Jaemarie and Ogan, Amy and Walker, Erin},
title = {Agentic Engagement with a Programmable Dialog System},
year = {2021},
isbn = {9781450383264},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3446871.3469782},
doi = {10.1145/3446871.3469782},
abstract = {Dialog with a social pedagogical robot or agent is a powerful way for kids to learn [1, 5] but may limit the formation of an agentic relationship with the technology [9]. One main purpose of conversational agents is to allow the user to have a natural interaction that reduces the need to learn artificial conventions [6], but dialog systems fall short with respect to failure recovery, vocabulary diversity, remembering conversational history, and other measures [2, 3]. Further, Hill et. al. [4] found that people adapt their model of communication to match a chatbot’s in the same way they do with a child or non-native speaker. Thus, users conversing with a pedagogical agent are implicitly trained to shape their behavior to suit the technology rather than shaping the technology. For young learners, particularly among populations that have been historically excluded from technology fields, this limits agency and reinforces marginalizing power structures [9]. This project combines a conversational agent with ideas of agentic engagement to help middle-school-aged children learn computational thinking. Agentic engagement is defined as students’ constructive contribution into the flow of instruction and includes behaviors such as expressing interests, preferences, and opinions. It has been positively correlated to learning performance and motivation [7, 8]. Combined with a culturally responsive curriculum (CRC), agentic engagement may help to foster an agentic relationship with technology. Our system encourages learners to engage agentically by using programming constructs to change the agent’s vocabulary, recognizing the intent behind a user utterance (an invocation), and defining the action the agent will take to respond to an invocation. Students use computational thinking concepts such as pattern recognition, abstraction, and decomposition to convert ideas into commands for the dialog system and to understand which of their ideas can’t be programmed with the technology as presented. They learn both to personalize the system today and to see the agent as a technosocial construct that they can shape in the future.  Programming can be accomplished either using Google’s Blockly visual programming tool (https://developers.google.com/blockly) or through conversation with the agent itself. The agent is embodied as a robot character, so agent actions can be verbal, physical, or both. Through social dialog with the agent, learners reflect on how computational thinking is relevant to themselves and their communities as part of a CRC, building on the work of Stewart et. al. [10]. For example, learners may be asked to reflect on the relationship between greeting behaviors and identity. After designing a greeting interaction, learners program the dialog system to achieve the greeting. Then learners may be asked to imagine how they might hypothetically enhance the dialog system to make it even more capable of implementing their preferences. In parallel to the development of the dialog system and curriculum, we will also adapt Reeve’s agentic engagement instrument [7] for CRC. Our contributions will include this instrument, insights into the relationship between agentic engagement and an agentic relationship with technology, and insights into how a programmable dialog system impacts agentic engagement and learning computational thinking.},
booktitle = {Proceedings of the 17th ACM Conference on International Computing Education Research},
pages = {423–424},
numpages = {2},
keywords = {agency, agentic engagement, culturally responsive curriculum, dialog systems},
location = {Virtual Event, USA},
series = {ICER 2021}
}

@article{10.1145/3440953.3440957,
title = {Computing4Change selects new cohort},
year = {2020},
issue_date = {October 2020},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {9},
number = {1},
url = {https://doi.org/10.1145/3440953.3440957},
doi = {10.1145/3440953.3440957},
abstract = {Computing4Change (C4C) is a competition for students from diverse disciplines and backgrounds to work in teams in applying data analysis and computational thinking to social challenges. Colocated with SC, C4C's new cohort will participate virtually in 2020.},
journal = {ACM SIGHPC Connect},
month = dec,
pages = {3},
numpages = {1}
}

@inproceedings{10.1145/3587102.3588809,
author = {Greifenstein, Luisa and Heuer, Ute and Fraser, Gordon},
title = {Exploring Programming Task Creation of Primary School Teachers in Training},
year = {2023},
isbn = {9798400701382},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3587102.3588809},
doi = {10.1145/3587102.3588809},
abstract = {Introducing computational thinking in primary school curricula implies that teachers have to prepare appropriate lesson material. Typically this includes creating programming tasks, which may overwhelm primary school teachers with lacking programming subject knowledge. Inadequate resulting example code may negatively affect learning, and students might adopt bad programming habits or misconceptions. To avoid this problem, automated program analysis tools have the potential to help scaffolding task creation processes. For example, static program analysis tools can automatically detect both good and bad code patterns, and provide hints on improving the code. To explore how teachers generally proceed when creating programming tasks, whether tool support can help, and how it is perceived by teachers, we performed a pre-study with 26 and a main study with 59 teachers in training and the LitterBox static analysis tool for Scratch. We find that teachers in training (1) often start with brainstorming thematic ideas rather than setting learning objectives, (2) write code before the task text, (3) give more hints in their task texts and create fewer bugs when supported by LitterBox, and (4) mention both positive aspects of the tool and suggestions for improvement. These findings provide an improved understanding of how to inform teacher training with respect to support needed by teachers when creating programming tasks.},
booktitle = {Proceedings of the 2023 Conference on Innovation and Technology in Computer Science Education V. 1},
pages = {471–477},
numpages = {7},
keywords = {assignments, automated feedback, block-based programming, elementary school, litterbox, preservice teacher education, scratch},
location = {Turku, Finland},
series = {ITiCSE 2023}
}

@inproceedings{10.1145/3626253.3635500,
author = {Oh, Diana Dajung and Rich, Kathryn M. and Bosch-Wilson, Kathleen L. and Cunningham, Heather L.},
title = {Motivating and Increasing the Relevance of Elementary Computer Science in Rural Communities: Exploring Elementary Teacher Perspectives in Idaho},
year = {2024},
isbn = {9798400704246},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3626253.3635500},
doi = {10.1145/3626253.3635500},
abstract = {The Idaho Elementary Computer Science (CS) Collaborative (IECC) is a researcher-practitioner partnership dedicated to understanding how to better support the predominately rural districts in Idaho to implement elementary CS education. As part of the IECC's work, we conducted a survey of elementary teachers across the state. This poster will present our initial findings. Two of the research questions we addressed via the survey are: (1) What factors would motivate Idaho elementary teachers to pursue professional development (PD) related to CS? (2) What are elementary teachers' perceptions of the value of connecting CS education to rural community economies and industries? Descriptive analyses of 309 survey responses suggest that about three-quarters of elementary teachers reported that the following factors would be at least somewhat influential in their decisions to pursue CS PD: a K-5 computational thinking requirement, a district-wide CS planning staff, a pathway for elementary teachers to earn a certification in CS teaching, and a way to request CS PD funding. Few (9%) Idaho elementary teachers found that the perception of a disconnect between CS education and rural community interests was a significant barrier to elementary CS education. Even so, over 70% of them were moderately to strongly interested in mechanisms for connecting their CS education efforts to rural community industries through guest speakers and industry partnerships. The poster will discuss the implications of these and other emerging findings from the teacher survey, as well as IECC's related surveys of Idaho district superintendents and elementary school principals.},
booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1768–1769},
numpages = {2},
keywords = {computer science education, elementary computer science, rural communities},
location = {Portland, OR, USA},
series = {SIGCSE 2024}
}

@inproceedings{10.1145/3162087.3162102,
author = {Budinsk\'{a}, Lucia and Mayerov\'{a}, Karol\'{\i}na},
title = {Graph Tasks in Bebras Contest: What does it have to do with gender?},
year = {2017},
isbn = {9781450363389},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3162087.3162102},
doi = {10.1145/3162087.3162102},
abstract = {Bebras contest has been part of Slovak informatics in schools for 10 years, making contestants familiar with information technologies, computer science concepts and improving their digital skills and computational thinking. In this article we take a look at task group which connects computer science concepts with computational thinking - graph tasks (for example trees, graphs, square grids, graph algorithms...). We focused on the three lowest categories of the Slovak contest, which include pupils of the whole primary school (aged 8 to 15) and analysed the tasks of the last four years. We used both qualitative and quantitative data analysis research methods. Task were divided into subcategories which were further analysed, focusing on identification of the specifics of the tasks in which there were significant differences between boys and girls. Using comparative analysis, it was found that boys are better in tasks with simple (relatively abstract) representation of the structure which is described by a larger amount of text, but the main point of the task is to identify the problem and create or uncover a strategy for finding a solution. Girls' performance is better in tasks that have less text, relatively more complicated representation of the structure and are focused on simple operations at graphs or reading them.},
booktitle = {Proceedings of the 6th Computer Science Education Research Conference},
pages = {83–90},
numpages = {8},
keywords = {Bebras contest, computational thinking, gender differences, graph tasks, visual literacy},
location = {Helsinki, Finland},
series = {CSERC '17}
}

@inproceedings{10.1145/3328778.3372653,
author = {Smith, Andy and Mott, Bradford and Taylor, Sandra and Hubbard Cheuoua, Aleata and Minogue, James and Oliver, Kevin and Ringstaff, Cathy},
title = {Designing Block-Based Programming Language Features to Support Upper Elementary Students in Creating Interactive Science Narratives},
year = {2020},
isbn = {9781450367936},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3328778.3372653},
doi = {10.1145/3328778.3372653},
abstract = {Recent years have seen a growing recognition of the importance of enabling K-12 students to engage in computational thinking, particularly in elementary grades where students' dispositions toward STEM are developing. Block-based programming has emerged as an effective tool for engaging these novice learners in computational thinking. At the same time, digital storytelling has emerged as a promising avenue for creating motivating problem-solving scenarios that engage students in science investigations. Although block-based programming and digital storytelling are in many ways synergistic, there is a lingering question of how to design block-based languages at an age-appropriate level to enable effective and engaging storytelling. In this work, we review design principles from prior block-based and digital storytelling systems as well as propose the design of block-based programming language features to enable the creation of rich, interactive science narratives by upper elementary students.},
booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
pages = {1327},
numpages = {1},
keywords = {block-based programming, digital storytelling},
location = {Portland, OR, USA},
series = {SIGCSE '20}
}

@inproceedings{10.1145/3316480.3325513,
author = {Kitagawa, Midori and Fishwick, Paul and Kesden, Michael and Urquhart, Mary and Guadagno, Rosanna and Jin, Rong and Tran, Ngoc and Omogbehin, Erik and Prakash, Aditya and Awaraddi, Priyanka and Hale, Baily and Suura, Ken and Raj, Aniket and Stanfield, James and Vo, Henry},
title = {Scaffolded Training Environment for Physics Programming (STEPP): Modeling High School Physics using Concept Maps and State Machines},
year = {2019},
isbn = {9781450367233},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3316480.3325513},
doi = {10.1145/3316480.3325513},
abstract = {We are a year into the development of a software tool for modeling and simulation (M&amp;S) of 1D and 2D kinematics consistent with Newton's laws of motion. Our goal has been to introduce modeling and computational thinking into learning high-school physics. There are two main contributions from an M&amp;S perspective: (1) the use of conceptual modeling, and (2) the application of Finite State Machines (FSMs) to model physical behavior. Both of these techniques have been used by the M&amp;S community to model high-level "soft systems" and discrete events. However, they have not been used to teach physics and represent ways in which M&amp;S can improve physics education. We introduce the NSF-sponsored STEPP project along with its hypothesis and goals. We also describe the development of the three STEPP modules, the server architecture, the assessment plan, and the expected outcomes.},
booktitle = {Proceedings of the 2019 ACM SIGSIM Conference on Principles of Advanced Discrete Simulation},
pages = {127–136},
numpages = {10},
keywords = {computational thinking, concept maps, finite state machines, high school, human computer interaction, modeling, physics, programming, scaffolding, simulation, stem.},
location = {Chicago, IL, USA},
series = {SIGSIM-PADS '19}
}

@article{10.1145/3132087,
author = {Denning, Peter J.},
title = {Computational design},
year = {2017},
issue_date = {August 2017},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {2017},
number = {August},
url = {https://doi.org/10.1145/3132087},
doi = {10.1145/3132087},
abstract = {Computational thinking refers to a deliberative process that finds a computational solution for a concern. Computational doing refers to use of computation and computational tools to address concerns. Computational design refers to creating new computational tools and methods that are adopted by the members of a community to address their concerns. Unfortunately, the definitions of both "thinking" and "doing" are fuzzy and have allowed misconceptions about the nature of algorithms. Fortunately, it is possible to eliminate the fuzziness in the definitions by focusing on computational design, which is at the intersection between thinking and doing. Computational design is what we are really after and would be a good substitute for computational thinking and doing.},
journal = {Ubiquity},
month = aug,
articleno = {2},
numpages = {9}
}

@inproceedings{10.1145/3408877.3439567,
author = {Bell, Amanda},
title = {Taking Up Opportunities to Learn in a Computer Science Professional Development for Middle School Teachers},
year = {2021},
isbn = {9781450380621},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3408877.3439567},
doi = {10.1145/3408877.3439567},
abstract = {This paper reports on the first year of teacher PD from an ongoing project designing to integrate computational thinking in middle school mathematics classrooms. The analysis investigates how teachers' prior dispositions toward programming influenced their behaviors in the PD. Two case studies illustrate that teachers' engagement and learning were affected not just by our designs, but also by the knowledge and beliefs teachers brought with them.},
booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
pages = {1338},
numpages = {1},
keywords = {case study, dispositions, professional development, teaching},
location = {Virtual Event, USA},
series = {SIGCSE '21}
}

@inproceedings{10.1145/3328778.3366839,
author = {Ahmed, Gashawa and Nouri, Jalal and Zhang, LeChen and Nor\'{e}n, Eva},
title = {Didactic Methods of Integrating Programming in Mathematics in Primary School: Findings from a Swedish National Project},
year = {2020},
isbn = {9781450367936},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3328778.3366839},
doi = {10.1145/3328778.3366839},
abstract = {The association between mathematics and programming in an educational context is not new. Today, programming has been introduced into curricula worldwide for younger children. In the Swedish case, primary school teachers are expected to integrate programming in mathematics education from autumn 2018. However, Swedish teachers' knowledge of programming and programming didactics is limited. Meanwhile, there is little research on K-9 programming education. This has led to the dilemma that the mathematics teachers have limited support in didactic knowledge and good examples. This study reports on a teacher professional development project in programming. More specifically, teachers used Lesson Study to plan, execute, and evaluate lessons that integrated programming into various school subjects in elementary school. This study analyzed the didactic strategies developed in 10 lesson studies, as well as mapped the opportunities and challenges of pupils' learning in the mathematics subject. The result was the identification of three didactic strategies, which were analog programming, robot programming and block programming, as well as 11 didactic methods applied within these strategies. The paper contributes with examples of the didactic methods that teachers have developed and evaluated using lesson study. The paper further provides insights on how teachers can take progression into account by applying the three didactic strategies. At last but not least, the study shows a great need for teachers to develop computational thinking abilities.},
booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
pages = {261–267},
numpages = {7},
keywords = {compulsory education, computational thinking, didactic strategies, mathematics, programming},
location = {Portland, OR, USA},
series = {SIGCSE '20}
}

@inproceedings{10.1145/3641555.3705015,
author = {Hutchins, Nicole M. and Chandler, Latoya and Lin, Yuhan and McKenna, Jason and DeFoe, Aimee and Israel, Maya},
title = {AI Literacy for Young Learners: A Co-Designed Robotics Unit for Students to Discover the World Beyond Human Senses},
year = {2025},
isbn = {9798400705328},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3641555.3705015},
doi = {10.1145/3641555.3705015},
abstract = {This demo introduces a hands-on robotics module designed to cultivate AI literacy in elementary students through computational thinking and robotics. Co-designed with 20 elementary school teachers and instructional coaches, the module helps students differentiate between artificial intelligence and human intelligence, focusing on the AI4K12 Big Idea of Perception, and specifically how our senses differ from a robot's sensors. The centerpiece of the curriculum is the "alien planet" task, where students program a robot to explore an unseen planet created by a peer, using its sensors to identify objects like "aliens" (green), "water" (blue), and "unique materials" (red). This activity not only builds critical thinking and problem-solving skills but also introduces foundational AI concepts, such as how machines perceive the world differently than humans. By connecting to other subjects like art (e.g., hue values) and linking to students' real-world experiences, the module offers a truly interdisciplinary and relevant approach to early AI education.},
booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1734},
numpages = {1},
keywords = {artificial intelligence, elementary education, robotics},
location = {Pittsburgh, PA, USA},
series = {SIGCSETS 2025}
}

@inproceedings{10.1145/3300115.3309512,
author = {Zhang, Yuanlin and Wang, Jianlan and Bolduc, Fox and Murray, William G.},
title = {LP Based Integration of Computing and Science Education in Middle Schools},
year = {2019},
isbn = {9781450362597},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3300115.3309512},
doi = {10.1145/3300115.3309512},
abstract = {There is a consensus on integrating computing with STEM teaching in K-12. However, very little is known about the integration. In this paper, we propose a novel framework for integrating science and computational thinking teaching using Logic Programming. We then develop and implement two 8-session integration modules on chemistry and physics for 6th and 7th graders. Pre- and post- tests, class observations and interviews show the feasibility of the framework in terms of 1) development and implementation of the modules, and 2) the students' learning outcomes on science content and Computational Thinking, and their acceptance of the integration.},
booktitle = {Proceedings of the ACM Conference on Global Computing Education},
pages = {44–50},
numpages = {7},
location = {Chengdu,Sichuan, China},
series = {CompEd '19}
}

@inproceedings{10.1145/3287324.3287368,
author = {Vogel, Sara and Hoadley, Christopher and Ascenzi-Moreno, Laura and Menken, Kate},
title = {The Role of Translanguaging in Computational Literacies: Documenting Middle School Bilinguals' Practices in Computer Science Integrated Units},
year = {2019},
isbn = {9781450358903},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3287324.3287368},
doi = {10.1145/3287324.3287368},
abstract = {Bilingual education has described a process called translanguaging by which students use linguistic resources across and beyond multiple named languages to learn. Here, we examine how bilingual learners translanguage while learning computer science. These middle schoolers participated in a curricular intervention which infused computational thinking into their Spanish-English bilingual language arts class. Through a descriptive qualitative methodology, we document classroom moments supporting four claims: 1) students' translanguaging blurs linguistic, disciplinary, and modal boundaries, 2) computational literacies are intertwined with students' other literacies, 3) students' attitudes about language and the contexts around them play a role in their translanguaging, and 4) students translanguage to engage in specific CT practices.},
booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
pages = {1164–1170},
numpages = {7},
keywords = {bilinguals, computational literacies, computer science for all, english language learners, middle school, translanguaging},
location = {Minneapolis, MN, USA},
series = {SIGCSE '19}
}

@inproceedings{10.1145/3689050.3705972,
author = {Matthews, Sarah and Nicholas, Maria and Paatsch, Louise and Kervin, Lisa and Wyeth, Peta},
title = {Wobblies: Designing Intentional Playthings with Young Children},
year = {2025},
isbn = {9798400711978},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3689050.3705972},
doi = {10.1145/3689050.3705972},
abstract = {This paper analyses a novel tangible technology in early childhood environments as a boundary object. Objects in early childhood environments often share space between adults’ and children's objectives. By considering these objects as boundary objects, designers are led to explore how children appropriate objects for playful learning activities beyond adult objectives. This paper discusses Wobblies (see Figure 1), a novel technology probe, to interrogate how a socially-motivated design with conditional and positional interactive behaviour was understandable to children, and how they appropriated the probe in playful activities. We deployed the probe in a rural Australian preschool in a free-play environment. Initial observational findings show that the children understood the procedure of the interactions and moved from exploring to constructive play activities.},
booktitle = {Proceedings of the Nineteenth International Conference on Tangible, Embedded, and Embodied Interaction},
articleno = {55},
numpages = {7},
keywords = {Computational Thinking, Play, Tangible Technology, Young Children},
location = {
},
series = {TEI '25}
}

@inproceedings{10.1145/3408877.3432482,
author = {Skuratowicz, Eva and Vanderberg, Maggie and Hung, Eping E. and Krause, Gladys and Bradley, Dominique and Wilson, Joseph P.},
title = {I Felt Like We Were Actually Going Somewhere: Adapting Summer Professional Development for Elementary Teachers to a Virtual Experience During COVID-19},
year = {2021},
isbn = {9781450380621},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3408877.3432482},
doi = {10.1145/3408877.3432482},
abstract = {In fall 2019, the National Science Foundation awarded Southern Oregon University a two-year Computer Science for All Researcher Practitioner Partnership grant focused on integrating computational thinking (CT) into the K'5 instruction of general elementary and elementary bilingual teachers. This experience report highlights the process of transitioning one essential component of the project an elementary teacher summer institute (SI) from in-person to online due to COVID-19. This report covers the approach the team took to designing the SI to work virtually, the challenges encountered, the experiences of the 15 teachers involved through observations and surveys, and the opportunities for refinement. This report will be of potential interest for other computer science (CS) education researchers who also may be working with elementary teachers to incorporate CS and CT activities into their instruction.},
booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
pages = {739–745},
numpages = {7},
keywords = {covid-19, elementary teachers, integrating computational thinking, teacher professional development, virtual engagement},
location = {Virtual Event, USA},
series = {SIGCSE '21}
}

@inproceedings{10.1145/3206157.3206170,
author = {Jin, Lan and Su, Ying},
title = {The Teaching Reform of Integration of Theory and Practice with Interest Leading and Ability Training},
year = {2018},
isbn = {9781450363587},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3206157.3206170},
doi = {10.1145/3206157.3206170},
abstract = {The fundamental of programming course is a professional basic course offered by institutions of higher learning, and C language is usually chosen as the programming language to help cultivate students' comprehensive quality and ability. Taking the fundamental of programming course as an example, aiming at the problems existing in traditional theory teaching and practice teaching, it proposes the theoretical teaching reform that stimulates students' interest in learning and develops the ability of computational thinking, constructs stage and hierarchical practice teaching system, improves continuously teaching methods and introduces the mobile cloud platform to assist teaching. The practice has proved that the students' comprehensive ability has been improved and the teaching effect has been achieved.},
booktitle = {Proceedings of the 2018 International Conference on Big Data and Education},
pages = {116–120},
numpages = {5},
keywords = {comprehensive ability, computational thinking, fundamental of programming, interest in learning, mobile cloud platform, practice teaching system},
location = {Honolulu, HI, USA},
series = {ICBDE '18}
}

@inproceedings{10.1145/3300115.3309527,
author = {Lytle, Nicholas and Catet\'{e}, Veronica and Dong, Yihuan and Boulden, Danielle and Akram, Bita and Houchins, Jennifer and Barnes, Tiffany and Wiebe, Eric},
title = {CEO: A Triangulated Evaluation of a Modeling-Based CT-Infused CS Activity for Non-CS Middle Grade Students},
year = {2019},
isbn = {9781450362597},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3300115.3309527},
doi = {10.1145/3300115.3309527},
abstract = {With the increased demand for introducing computational thinking (CT) in K-12 classrooms, educational researchers are developing integrated lesson plans that can teach CT fundamentals in non-computing specific classrooms. Although these lessons reach more students through the core curriculum, proper evaluation methods are needed to ensure the quality of the design and integration. As part of a research practice partnership, we work to infuse research-backed curricula into science courses. We find a three-pronged approach of evaluation can help us make better decisions on how to improve experimental curricula for active classrooms. This CEO model uses three data sources (student code traces, exit ticket responses, and field observations) as a triangulated approach that can be used to identify programming behavior among novice developers, preferred task ordering for the assignment, and scaffolding recommendations to teachers. This approach allows us to evaluate the practical implementations of our initiative and create a focused approach for designing more effective lessons.},
booktitle = {Proceedings of the ACM Conference on Global Computing Education},
pages = {58–64},
numpages = {7},
keywords = {assessment, computational thinking, modeling and simulation},
location = {Chengdu,Sichuan, China},
series = {CompEd '19}
}

@inproceedings{10.1145/3545945.3569869,
author = {Ojeda-Ramirez, Santiago and Tsan, Jennifer and Eatinger, Donna and Jacob, Sharin and Saito-Stehberger, Dana and Franklin, Diana and Warschauer, Mark},
title = {Describing Elementary Students' Spheres of Influence in Scratch 'About Me' Projects},
year = {2023},
isbn = {9781450394314},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3545945.3569869},
doi = {10.1145/3545945.3569869},
abstract = {Researchers and practitioners have worked to bring computer science to all students. However, CS is still an inequitable field. When developing curricula, we must account for the importance of connecting the lives and identities of historically marginalized students with instructional materials. We examine the knowledge and experiences that elementary (age 9-10) students drew upon to implement an open-ended programming assignment about themselves. We coded the Scratch projects of 189 students to investigate what aspects of their lives students reference, and how they use various modalities in Scratch to create digital media products about themselves. In our data, we found that the most common spheres portrayed were identity, hobbies and leisure, and interests. When expressing their identities, students narrated their experiences, expressed consciousness about their skills, connected to the user via their interests, and sometimes discussed equity. Additionally, our findings add to previous literature on Scratch as an effective platform for digital media production. In particular, we found that students used dialogue, images, sound, and the title to represent their spheres of influence through programming multimedia and interactive projects. This work has implications for the development of curricula and teaching guides for upper elementary students courses on computational thinking. Spheres of influence could inform researchers on the most influential aspects of students life in a specific context, providing elements for creating culturally relevant and interest-based materials and lessons.},
booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 1},
pages = {333–339},
numpages = {7},
keywords = {digital media, identity, k-5, scratch, spheres of influence},
location = {Toronto ON, Canada},
series = {SIGCSE 2023}
}




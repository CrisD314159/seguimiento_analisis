
@inproceedings{10.1145/2729094.2754857,
author = {Meerbaum-Salant, Orni and Haberman, Bruria and Pollack, Sarah},
title = {"Computer Science, Academia and Industry" as pedagogical model to enhance Computational thinking},
year = {2015},
isbn = {9781450334402},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2729094.2754857},
doi = {10.1145/2729094.2754857},
abstract = {The Computer Science, Academia and Industry extra-curricular program has been operated for Israeli high school students majoring in computer science. A case study was conducted aimed to identify computational thinking in students' project development processes.},
booktitle = {Proceedings of the 2015 ACM Conference on Innovation and Technology in Computer Science Education},
pages = {341},
numpages = {1},
keywords = {computational thinking},
location = {Vilnius, Lithuania},
series = {ITiCSE '15}
}

@inproceedings{10.1145/1536274.1536299,
author = {Xu, Yan and Peters, Joseph and Kirkpatrick, Arthur and O'Neil, Kevin},
title = {Computational thinking: special sauce or snake oil?},
year = {2009},
isbn = {9781605584157},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1536274.1536299},
doi = {10.1145/1536274.1536299},
abstract = {Computer scientists are in wide agreement that computational thinking is destined to become a crucial topic in computer science departments. Advocates tout computational thinking as an essential tool for informed citizens of the information age, allowing those citizens to understand the digital infrastructure underlying their lives and also to solve longstanding problems using new computational approaches.},
booktitle = {Proceedings of the 14th Western Canadian Conference on Computing Education},
pages = {81},
numpages = {1},
keywords = {computational thinking},
location = {Burnaby, British Columbia, Canada},
series = {WCCCE '09}
}

@inproceedings{10.1145/3545945.3569749,
author = {Bao, Yeting and Hosseini, Hadi},
title = {Mind the Gap: The Illusion of Skill Acquisition in Computational Thinking},
year = {2023},
isbn = {9781450394314},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3545945.3569749},
doi = {10.1145/3545945.3569749},
abstract = {With the advent of online educational platforms and the advances in pedagogical technologies, self-directed learning has emerged as one of the most popular modes of learning. Distance education---elevated by the COVID-19 pandemic---involves methods of instruction through a variety of remote activities which often rely on educational videos for mastery. In the absence of direct student engagement, the asynchronous nature of remote activities may deteriorate the quality of education for learners. Students often have an illusion of skill acquisition after watching videos, which results in overestimation of abilities and skills. We focus on the efficacy of skill acquisition through interactive technologies and assess their impact on computational thinking in comparison with delivery through other traditional media (e.g. videos and texts). In particular, we investigate the relationship between actual learning, perception of learning, and learners' confidence in adult learners. Our results reveal intriguing observations about the role of interactivity and visualization and their implications on the pedagogical design for self-directed learning modules.},
booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 1},
pages = {778–784},
numpages = {7},
keywords = {computational thinking, interactive learning, skill acquisition},
location = {Toronto ON, Canada},
series = {SIGCSE 2023}
}

@article{10.1145/1929887.1929902,
author = {Lee, Irene and Martin, Fred and Denner, Jill and Coulter, Bob and Allan, Walter and Erickson, Jeri and Malyn-Smith, Joyce and Werner, Linda},
title = {Computational thinking for youth in practice},
year = {2011},
issue_date = {March 2011},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {2},
number = {1},
issn = {2153-2184},
url = {https://doi.org/10.1145/1929887.1929902},
doi = {10.1145/1929887.1929902},
abstract = {Computational thinking (CT) has been described as the use of abstraction, automation, and analysis in problem-solving [3]. We examine how these ways of thinking take shape for middle and high school youth in a set of NSF-supported programs. We discuss opportunities and challenges in both in-school and after-school contexts. Based on these observations, we present a "use-modify-create" framework, representing three phases of students' cognitive and practical activity in computational thinking. We recommend continued investment in the development of CT-rich learning environments, in educators who can facilitate their use, and in research on the broader value of computational thinking.},
journal = {ACM Inroads},
month = feb,
pages = {32–37},
numpages = {6},
keywords = {abstraction, analysis, automation, computational thinking, computer science education}
}

@inproceedings{10.1145/2538862.2539023,
author = {Turbak, Franklyn and Martin, Fred and Pokress, Shaileen Crawford and Morelli, Ralph and Sherman, Mark and Wolber, David},
title = {Mobile computational thinking with app inventor 2 (abstract only)},
year = {2014},
isbn = {9781450326056},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2538862.2539023},
doi = {10.1145/2538862.2539023},
abstract = {Computational Thinking Through Mobile Computing is an NSF-funded project for introducing students to computational thinking through creating mobile apps. In this hands-on workshop, which is targeted at undergraduate and secondary school computer science teachers, participants will develop Android apps using MIT App Inventor 2. This is a new version of the visual blocks-based programming environment with additional language features (e.g., local variables) and browser-based blocks editing. The workshop will also present pedagogical materials (lessons, tutorials, assignments), evaluation materials (blocks-based quizzes, surveys, project rubrics), and student projects. All of the pedagogical materials presented in the workshop, as well as all of the materials used by the workshop presenters in their individual courses, are posted on the Web and are available to everyone under a Creative Commons license. A laptop is required for this workshop. Each participant will be provided with an Android mobile device to use during the workshop. Participants who have their own Android phones or tablets can use them if they choose. This workshop is based upon work supported by the National Science Foundation under Grant Numbers 1225680, 1225719, 1225745, 1225976, and 1226216.},
booktitle = {Proceedings of the 45th ACM Technical Symposium on Computer Science Education},
pages = {745},
numpages = {1},
keywords = {CS0, blocks programming, computational thinking, event-based programming, mobile computing},
location = {Atlanta, Georgia, USA},
series = {SIGCSE '14}
}

@inproceedings{10.1145/2047594.2047612,
author = {Settle, Amber},
title = {Computational thinking in a game design course},
year = {2011},
isbn = {9781450310178},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2047594.2047612},
doi = {10.1145/2047594.2047612},
abstract = {As a part of an NSF-funded project to enhance computational thinking in undergraduate general education courses, activities and assessments were developed for a game design course taught at DePaul University. The focus of the course is on game analysis and design, but the course textbook uses an approach that is heavily grounded in computational thinking principles. We describe the course activities and assignments and discuss an initial assessment of those materials. Our results show that there is a gap in difficulty between several of the activities and indicate that the materials developed help students to better learn the computational thinking concepts in the course.},
booktitle = {Proceedings of the 2011 Conference on Information Technology Education},
pages = {61–66},
numpages = {6},
keywords = {computational thinking, evaluation, game design},
location = {West Point, New York, USA},
series = {SIGITE '11}
}

@inproceedings{10.1145/3159450.3162325,
author = {Duncan, Caitlin},
title = {Reported Development of Computational Thinking, Through Computer Science and Programming, and its Benefits for Primary School Students: (Abstract Only)},
year = {2018},
isbn = {9781450351034},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3159450.3162325},
doi = {10.1145/3159450.3162325},
abstract = {Across the world there has been a paradigm shift in school education, as many countries are incorporating Computer Science (CS), programming, and Computational Thinking (CT), into their K-12 curriculums for the first time. In 2018 these subjects will be introduced to the New Zealand (NZ) Digital Technologies curriculum under the subject of "Computational Thinking". Like the majority of countries who have introduced these topics, NZ faces challenges in preparing teachers, and in successfully implementing a curriculum which achieves its educational goals. To support this curriculum, we have been conducting studies in primary schools across NZ, trialing resources with teachers and students. Building on a 2014 exploratory study on CS and programming in intermediate school, this project investigates the existing assumptions around CT education in K-12. It aims to address the specific questions: How do we teach CT concepts and approaches to primary aged students? If they learn CT, does it have the expected positive impacts on students learning? And, what other positive and negative impacts does this have?Throughout 2015 and 2016 a study was conducted with 18 primary school teachers from across NZ, who used CS Unplugged and educational programming languages in their classrooms. Teachers submitted feedback on these classes through an online form, and participated in semi-structured interviews. The feedback responses and interview transcripts were analysed using a thematic approach, which revealed many positive impacts on students general learning, minimal negative impacts, and observations of CT development.},
booktitle = {Proceedings of the 49th ACM Technical Symposium on Computer Science Education},
pages = {275},
numpages = {1},
keywords = {computational thinking, primary school, problem solving, programming education},
location = {Baltimore, Maryland, USA},
series = {SIGCSE '18}
}

@inproceedings{10.1145/2614217.2630597,
author = {J\"{o}rg, Sophie and Leonard, Alison E. and Babu, Sabarish and Gundersen, Kara and Parmar, Dhaval and Boggs, Kevin and Daily, Shaundra Bryant},
title = {Character animation and embodiment in teaching computational thinking},
year = {2014},
isbn = {9781450329583},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2614217.2630597},
doi = {10.1145/2614217.2630597},
booktitle = {ACM SIGGRAPH 2014 Posters},
articleno = {4},
numpages = {1},
location = {Vancouver, Canada},
series = {SIGGRAPH '14}
}

@inproceedings{10.1145/2960310.2960346,
author = {Good, Jon},
title = {Computational Thinking as a Computer Science Education Framework and the Related Effects on Gender Equity},
year = {2016},
isbn = {9781450344494},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2960310.2960346},
doi = {10.1145/2960310.2960346},
abstract = {I have recently completed my third year of study in the Educational Psychology and Educational Technology doctoral program at Michigan State University. I have successfully completed all of my coursework and comprehensive/qualifying exams. I will be proposing my dissertation study in the Fall semester of 2016 and expect to defend my dissertation in the Fall semester of 2017. My prior research has been focused on issues related to computational thinking, creativity, and computer science education. I am currently developing my literature review and honing my core research questions. I hope to subsequently develop my research methods and measures more fully, with plans to begin fieldwork in Fall of 2016.},
booktitle = {Proceedings of the 2016 ACM Conference on International Computing Education Research},
pages = {277–278},
numpages = {2},
keywords = {computational thinking, gender equity, secondary education},
location = {Melbourne, VIC, Australia},
series = {ICER '16}
}

@inproceedings{10.1145/1508865.1508959,
author = {Lu, James J. and Fletcher, George H.L.},
title = {Thinking about computational thinking},
year = {2009},
isbn = {9781605581835},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1508865.1508959},
doi = {10.1145/1508865.1508959},
abstract = {Jeannette Wing's call for teaching Computational Thinking (CT) as a formative skill on par with reading, writing, and arithmetic places computer science in the category of basic knowledge. Just as proficiency in basic language arts helps us to effectively communicate and in basic math helps us to successfully quantitate, proficiency in computational thinking helps us to systematically and efficiently process information and tasks. But while teaching everyone to think computationally is a noble goal, there are pedagogical challenges. Perhaps the most confounding issue is the role of programming, and whether we can separate it from teaching basic computer science. How much programming, if any, should be required for CT proficiency?We believe that to successfully broaden participation in computer science, efforts must be made to lay the foundations of CT long before students experience their first programming language. We posit that programming is to Computer Science what proof construction is to mathematics, and what literary analysis is to English. Hence by analogy, programming should be the entrance into higher CS, and not the student's first encounter in CS. We argue that in the absence of programming, teaching CT should focus on establishing vocabularies and symbols that can be used to annotate and describe computation and abstraction, suggest information and execution, and provide notation around which mental models of processes can be built. Lastly, we conjecture that students with sustained exposure to CT in their formative education will be better prepared for programming and the CS curriculum, and, furthermore, that they might choose to major in CS not only for career opportunities, but also for its intellectual content.},
booktitle = {Proceedings of the 40th ACM Technical Symposium on Computer Science Education},
pages = {260–264},
numpages = {5},
keywords = {computational thinking, k-12 education, language},
location = {Chattanooga, TN, USA},
series = {SIGCSE '09}
}

@inproceedings{10.1145/2676723.2691940,
author = {Fordham, Eileen and Freger, Halley and Hinchman-Dominguez, Amanda and Mitchell, Alexander and Rebelsky, Daniel and Tsou, Victoria and Wheeler, Earnest and Wolter, Zoe and Rebelsky, Samuel A.},
title = {Developing Computational Thinking Through Image Making and Constructionist Learning (Abstract Only)},
year = {2015},
isbn = {9781450329668},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2676723.2691940},
doi = {10.1145/2676723.2691940},
abstract = {Consider the following scenario: A student is browsing Facebook and sees a strangely compelling image on her friend's page. She follows the "how I made this link" to learn more. She finds herself on a page with a gallery of animations that she browses. Then she sees a "Create" button and clicks it. She skims the instructions and decides that this is not a "standard" graphics program - rather than using a timeline and "tools", it has just a few basic images (e.g., a horizontal blend, a vertical blend, some time-blends) and a few operations that you use to build new images from existing images. She plays a bit. And she finds that she can create some strange and interesting images, but not necessarily the ones she wants to make, and certainly not anything like her friend made. So she looks further. She learns that there are "challenges" that help you learn the system (and, as importantly, that help you consider and master different aspects of computational thinking), and tries to figure out how to make images as seemingly simple as a triangle or a circle using the limited selection of basic images and operations. It's not easy, but she finds it fun to try (and sometimes more fun to fail -- failures also create interesting images). You've just read a sample encounter with the Mathematical Image Synthesis Toolkit, or MIST. MIST is an open-source, Web-based graphics application that takes a constructionist approach in which open experimentation in image making helps students develop skills in computational thinking and deepen their understanding of mathematical functions. MIST is available at http://glimmer.grinnell.edu.},
booktitle = {Proceedings of the 46th ACM Technical Symposium on Computer Science Education},
pages = {690},
numpages = {1},
keywords = {animation, computational thinking, constructionism, functional programming, open source, social media, web software},
location = {Kansas City, Missouri, USA},
series = {SIGCSE '15}
}

@inproceedings{10.1145/2513456.2513484,
author = {Gouws, Lindsey and Bradshaw, Karen and Wentworth, Peter},
title = {First year student performance in a test for computational thinking},
year = {2013},
isbn = {9781450321129},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2513456.2513484},
doi = {10.1145/2513456.2513484},
abstract = {Computational thinking, a form of thinking and problem solving within computer science, has become a popular focus of research on computer science education. In this paper, we attempt to investigate the role that computational thinking plays in the experience of introductory computer science students at a South African university. To this end, we have designed and administered a test for computational thinking ability, and contrasted the results of this test with the class marks for the students involved. The results of this test give us an initial view of the abilities that students possess when entering the computer science course. The results indicate that students who performed well in the assessment have a favourable pass rate for their class tests, and specific areas of weakness have been identified. Finally, we describe the plan for a follow-up test to take place at the end of the course to determine how students' abilities have changed over a semester of studies.},
booktitle = {Proceedings of the South African Institute for Computer Scientists and Information Technologists Conference},
pages = {271–277},
numpages = {7},
keywords = {computational thinking, computer science education, student evaluation},
location = {East London, South Africa},
series = {SAICSIT '13}
}

@inproceedings{10.1145/2047594.2047678,
author = {Settle, Amber},
title = {The computational thinking across the curriculum workshop},
year = {2011},
isbn = {9781450310178},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2047594.2047678},
doi = {10.1145/2047594.2047678},
abstract = {We report on a workshop conducted as a part of an NSF-funded project focused on enhancing computational thinking in the general education curriculum. The workshop brought together project participants as well as other interested individuals to reflect on the first two years of the grant and begin planning for future work. We report on the results of a survey of workshop participants, providing insight into factors that contribute to the success of such events.},
booktitle = {Proceedings of the 2011 Conference on Information Technology Education},
pages = {311–312},
numpages = {2},
keywords = {community outreach, computational thinking},
location = {West Point, New York, USA},
series = {SIGITE '11}
}

@inproceedings{10.1145/2445196.2445227,
author = {Webb, Heidi and Rosson, Mary Beth},
title = {Using scaffolded examples to teach computational thinking concepts},
year = {2013},
isbn = {9781450318686},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2445196.2445227},
doi = {10.1145/2445196.2445227},
abstract = {In this paper we describe a set of computing activities that were used in an outreach enrichment program for middle school girls. The computing activities used a combination of scaffolded exam-ples and minimalist workbooks to introduce and support interaction with computational thinking (CT) concepts, including problem solving, abstraction and basic computational vocabulary. We describe the activities briefly, followed by a discussion of the girls' experiences, drawing primarily from interviews conducted at the end of each activity.},
booktitle = {Proceeding of the 44th ACM Technical Symposium on Computer Science Education},
pages = {95–100},
numpages = {6},
keywords = {middle school girls, scaffolded example, scratch},
location = {Denver, Colorado, USA},
series = {SIGCSE '13}
}

@inproceedings{10.1145/3258452,
author = {Pala, Jill},
title = {Session details: Computational thinking},
year = {2011},
isbn = {9781450305006},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3258452},
doi = {10.1145/3258452},
booktitle = {Proceedings of the 42nd ACM Technical Symposium on Computer Science Education},
location = {Dallas, TX, USA},
series = {SIGCSE '11}
}

@article{10.1145/3011071,
author = {Armoni, Michal},
title = {COMPUTING IN SCHOOLSComputer science, computational thinking, programming, coding: the anomalies of transitivity in K-12 computer science education},
year = {2016},
issue_date = {December 2016},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {7},
number = {4},
issn = {2153-2184},
url = {https://doi.org/10.1145/3011071},
doi = {10.1145/3011071},
journal = {ACM Inroads},
month = nov,
pages = {24–27},
numpages = {4}
}

@inproceedings{10.1145/1822090.1822128,
author = {Miller, Craig S. and Perkovi\'{c}, Ljubomir and Settle, Amber},
title = {File references, trees, and computational thinking},
year = {2010},
isbn = {9781605588209},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1822090.1822128},
doi = {10.1145/1822090.1822128},
abstract = {We study student understanding of the use of a tree structure in the context of an introductory web development course. In particular, we analyze student answers as they use a tree structure to construct file references in web pages. More fundamentally, our study initiates a bottom-up study of computational thinking by identifying the computational thinking mistakes that students make when they are learning resource referencing for web development. Our preliminary results suggest that students do not necessarily learn abstract concepts (like trees) and abstract rules of reasoning (composing relative and absolute tree paths) by just working with folders and composing file references alone.},
booktitle = {Proceedings of the Fifteenth Annual Conference on Innovation and Technology in Computer Science Education},
pages = {132–136},
numpages = {5},
keywords = {computational thinking, file referencing, tree structures, web development},
location = {Bilkent, Ankara, Turkey},
series = {ITiCSE '10}
}

@article{10.5555/2753024.2753027,
author = {Jonas, Michael and Sabin, Mihaela},
title = {Computational thinking in Greenfoot: AI game strageties for CS1: conference workshop},
year = {2015},
issue_date = {June 2015},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {30},
number = {6},
issn = {1937-4771},
abstract = {We introduce workshop participants to Quoridor, a multiplayer strategy game for which we've developed an engine in Greenfoot [1]. We use Greenfoot, an interactive Java development environment designed primarily for educational purpose that allows easy development of two-dimensional graphical applications. Participants will first learn how to play the game and then follow a simple algorithm while playing to demonstrate the type of strategies that can be devised in the game engine. The session will then be divided into groups guided by workshop presenters and focus on developing a strategy and implementing it within the Quoridor engine in Greenfoot. At the end of the workshop, groups will be pitted against each other in a Battle Royal.},
journal = {J. Comput. Sci. Coll.},
month = jun,
pages = {8–10},
numpages = {3}
}

@inproceedings{10.1145/2538862.2538956,
author = {Van Dyne, Michele and Braun, Jeffrey},
title = {Effectiveness of a computational thinking (CS0) course on student analytical skills},
year = {2014},
isbn = {9781450326056},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2538862.2538956},
doi = {10.1145/2538862.2538956},
abstract = {: In this paper, we describe the content and evaluation of a Computational Thinking (CS0) course developed to improve the analytical problem solving of students participating in the course. The course is targeted to students who are mathematically under-prepared to enter our introductory programming sequence; however, it has recently been included in the University's general education curriculum so that students majoring in any discipline may take the course. Using the Whimbey Analytical Skills Inventory (WASI) students in the CS0 class, along with students in an analogous level engineering class (FESP), were tested at the beginning of the course and again at the end, using different versions of the test. The improvement in scores was statistically significant when measured by both the student t-test and the Cohen d (effect size) for CS0 students but not for the FESP students, providing support that the course does, in fact, increase student analytical problem solving skills. Courses in Computational Thinking have demonstrated success in many schools; however, this research demonstrates its effectiveness in improving analytical skills in majors as well as non-majors.},
booktitle = {Proceedings of the 45th ACM Technical Symposium on Computer Science Education},
pages = {133–138},
numpages = {6},
keywords = {CS0, analytical skills, computational thinking, course effectiveness, critical thinking, problem solving},
location = {Atlanta, Georgia, USA},
series = {SIGCSE '14}
}

@inproceedings{10.1145/2960310.2960347,
author = {Weese, Joshua Levi},
title = {Mixed Methods for the Assessment and Incorporation of Computational Thinking in K-12 and Higher Education},
year = {2016},
isbn = {9781450344494},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2960310.2960347},
doi = {10.1145/2960310.2960347},
abstract = {A movement to include computer science in K-12 curriculum standards has sparked a significant interest in computational thinking (CT). This paper describes current and future work in the development of visual programming curricula for teaching CT at the K-12 level and self-efficacy surveys for evaluating the effectiveness of the curricula at fostering CT. Current work on a comprehensive system for automated extraction of assessment data for descriptive analytics and visualization is also described. To complement attitude surveys, a translation of Scratch to Blockly is proposed. Data on student programming behaviors at the collegiate level will be collected and quantitatively analyzed to help assess CT in support of self-efficacy.},
booktitle = {Proceedings of the 2016 ACM Conference on International Computing Education Research},
pages = {279–280},
numpages = {2},
keywords = {assessment, computational thinking, outreach, self-efficacy},
location = {Melbourne, VIC, Australia},
series = {ICER '16}
}

@article{10.1145/1922681.1922682,
author = {Aho, Alfred V.},
title = {Ubiquity symposium: Computation and Computational Thinking},
year = {2011},
issue_date = {January 2011},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {2011},
number = {January},
url = {https://doi.org/10.1145/1922681.1922682},
doi = {10.1145/1922681.1922682},
abstract = {In this ninth piece to the Ubiquity symposium discussing What is computation? Alfred V. Aho shares his views about the importance of computational thinking in answering the question.  --Editor},
journal = {Ubiquity},
month = jan,
articleno = {1},
numpages = {8}
}

@inproceedings{10.1145/1227310.1227378,
author = {Henderson, Peter B. and Cortina, Thomas J. and Wing, Jeannette M.},
title = {Computational thinking},
year = {2007},
isbn = {1595933611},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1227310.1227378},
doi = {10.1145/1227310.1227378},
booktitle = {Proceedings of the 38th SIGCSE Technical Symposium on Computer Science Education},
pages = {195–196},
numpages = {2},
keywords = {computational thinking},
location = {Covington, Kentucky, USA},
series = {SIGCSE '07}
}

@inproceedings{10.1145/2493394.2493403,
author = {Seiter, Linda and Foreman, Brendan},
title = {Modeling the learning progressions of computational thinking of primary grade students},
year = {2013},
isbn = {9781450322430},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2493394.2493403},
doi = {10.1145/2493394.2493403},
abstract = {We introduce the Progression of Early Computational Thinking (PECT) Model, a framework for understanding and assessing computational thinking in the primary grades (Grades 1 to 6). The model synthesizes measurable evidence from student work with broader, more abstract coding design patterns, which are then mapped onto computational thinking concepts.We present the results of a pilot-test study of the PECT Model in order to demonstrate its potential efficacy in detecting both differences in computational thinking among students of various ages as well as any clear overall progressions in increasing computational sophistication. Results of this sort are vital for establishing research-based and age-appropriate curricula for students in the primary grades, i.e., developing non-trivial, challenging but not overly daunting lesson plans that utilize the cognitive development stage of each grade level most effectively.},
booktitle = {Proceedings of the Ninth Annual International ACM Conference on International Computing Education Research},
pages = {59–66},
numpages = {8},
keywords = {assessment, computational thinking, programming, scratch},
location = {San Diego, San California, USA},
series = {ICER '13}
}

@inproceedings{10.1145/2676723.2691928,
author = {Albert, Jennifer and Peddycord III, Barry and Barnes, Tiffany},
title = {Evaluating Scratch Programs to Assess Computational Thinking in a Science Lesson (Abstract Only)},
year = {2015},
isbn = {9781450329668},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2676723.2691928},
doi = {10.1145/2676723.2691928},
abstract = {In this poster, we describe efforts to assess computational thinking activities that can be easily implemented in any science classroom. Studies have shown that a set of conditions must be met for computational thinking tools to be used in K-12 education and that when they are used, there is a wide spectrum in the level of computational thinking that the tool enables. This study extends this work by examining how middle school students translated their science fair projects into Scratch and what evidence of computational thinking is present. Scrape, a tool designed to analyze Scratch projects was used. Overall, it was found that most students simply created a presentation of their project without much complexity. Eight students created interactive projects that required user participation and used more advanced computational concepts. Finally, recommendations are given for next steps in the creation of a series of activities that would scaffold student learning as they apply to computational thinking concepts of a science concept.},
booktitle = {Proceedings of the 46th ACM Technical Symposium on Computer Science Education},
pages = {679},
numpages = {1},
keywords = {computational science, computational thinking, middle school computer education, next generation science standards},
location = {Kansas City, Missouri, USA},
series = {SIGCSE '15}
}

@article{10.5555/1619221.1619255,
author = {Bryant, Robert and Chinn, Donald and Hauser, George and Folsom, Michele and Wallace, Scott},
title = {Computational thinking: what is it, how is it relevant, who's doing what with it?},
year = {2009},
issue_date = {October 2009},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {25},
number = {1},
issn = {1937-4771},
abstract = {Since Jeannette Wing wrote her opinion paper on Computational Thinking in 2006 [1], there has been much discussion about the idea of making computational thinking a central component of the effort to expose the field of computing to all disciplines. This panel will cover national and local efforts taking place in universities to bring computational thinking to the forefront of all disciplines that use computing in their field.},
journal = {J. Comput. Sci. Coll.},
month = oct,
pages = {170–171},
numpages = {2}
}

@inproceedings{10.1145/2839509.2850528,
author = {Wong, Gary K.W. and Zhu, Kening and Ma, Xiaojuan and Huen, John},
title = {The Development of Internationalized Computational Thinking Curriculum in Hong Kong Primary Education (Abstract Only)},
year = {2016},
isbn = {9781450336857},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2839509.2850528},
doi = {10.1145/2839509.2850528},
abstract = {Computational Thinking (CT) has been widely introduced and investigated in recent years, particularly in the U.S. since the born of visual, block-based, drag-drop programming environments such as Kodu, Scratch, Minecraft and App Inventor. Although the user interface is mainly in English, the characteristics of these easy-to-use, game-based, and interactive tools attract many teachers and researchers in the world to pay much attention to the possibilities and opportunities of introducing these tools to students. Recently, some primary school teachers in Hong Kong begin to independently introduce some of these programming tools to students at age 7 - 11 as a part of learning activities in their computer lessons. Their motives are similar but not the same, such as making a fun learning and teaching experience, motivating students for active and collaborative participation, and introducing CT concepts to develop generic skills (e.g. problem solving skills, creativity, and critical thinking). However, there is an absence of well-developed and planned curriculum for "coding education" to introduce computational thinking systematically to students in the local context with expected learning outcomes. Due to the uniqueness of K-12 curriculum in Hong Kong, the existing curriculum model in the U.S. may need to be customized and redesigned to become suitable for integrating into the curriculum in Hong Kong. In this poster, it describes the first proposed coding education curriculum in Hong Kong primary education (Primary 4 to Primary 6) with relevant objectives, structures, contents, and learning outcomes. A new pedagogical design framework for CT is introduced in this poster, which could be generalizable and yet to be evaluated. This new curriculum will serve as the curriculum guide to local teachers, and is the first research initiative of a three-year longitudinal study investigating the impact of CT activities to students particularly in Hong Kong. The experience of this curriculum development for CT concepts in K-12 education can inspire teachers and researchers in other parts of the world when adopting and internationalizing CT activities based on the curriculum model developed under the U.S. education.},
booktitle = {Proceedings of the 47th ACM Technical Symposium on Computing Science Education},
pages = {685},
numpages = {1},
keywords = {coding education, computational thinking, international outreach for cs education, k-12 curriculum development},
location = {Memphis, Tennessee, USA},
series = {SIGCSE '16}
}

@inproceedings{10.1145/3478432.3499258,
author = {Nguyen, N. Rich and Padhye, Harsh and Stein, Eric and Bull, Glen},
title = {TuneScope: Engaging Novices to Computational Thinking through Music},
year = {2022},
isbn = {9781450390712},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3478432.3499258},
doi = {10.1145/3478432.3499258},
abstract = {To accelerate the adoption of computational thinking (CT), we have developed TuneScope, an online platform for introducing novices to programming in the context of music. TuneScope combines a sound analysis &amp; synthesis tool with Snap!, a computing language developed at the University of California, Berkeley. This demo explores CT concepts such as decomposition, patterns, abstraction, and algorithms in TuneScope while also exploring the creation of four cascading musical components from (1) sequences of notes, (2) musical chords, (3) sampled sounds, and (4) synthesized sounds. The challenge is to design activities that include authentic music learning as well as genuine computational thinking. In this demo, we show concepts around sequence (the order in which musical notes appear in time; and the order of statements in a computer program) and repetition (includes repeats as well as the structure of melodies; and computing loops and recursion). The instructional activities in this demo have been piloted three times in an associated course at the University of Virginia. Data collected from the course suggest a positive effect on both the understanding of CT concepts and the comprehension of music. More detail on TuneScope can be found at https://maketolearn.org/tunescope/.},
booktitle = {Proceedings of the 53rd ACM Technical Symposium on Computer Science Education V. 2},
pages = {1181},
numpages = {1},
keywords = {computational thinking, music, novices, snap, tunescope},
location = {Providence, RI, USA},
series = {SIGCSE 2022}
}

@article{10.5555/1961574.1961590,
author = {Qualls, Jake A. and Grant, Michael M. and Sherrell, Linda B.},
title = {CS1 students' understanding of computational thinking concepts},
year = {2011},
issue_date = {May 2011},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {26},
number = {5},
issn = {1937-4771},
abstract = {This paper presents a small, multi-method case study conducted throughout the spring 2010 semester of CS1: Introduction to Computer Science at the University of Memphis. This study explored students' comprehension of three Computational Thinking concepts: algorithms, abstraction and efficiency. Results indicate that students understand and value the concept of the algorithm but are only beginning to understanding abstraction. In addition, student observations about efficiency represent the true focus of Computational Thinking, i.e., applying computer science concepts to other fields of study. Implications for teaching CS1 and for future research are also considered.},
journal = {J. Comput. Sci. Coll.},
month = may,
pages = {62–71},
numpages = {10}
}

@inproceedings{10.1145/1734263.1734395,
author = {Allan, Vicki and Barr, Valerie and Brylow, Dennis and Hambrusch, Susanne},
title = {Computational thinking in high school courses},
year = {2010},
isbn = {9781450300063},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1734263.1734395},
doi = {10.1145/1734263.1734395},
abstract = {The number of undergraduates entering computer science has declined in recent years. This is paralleled by a drop in the number of high school students taking the CS AP exam and the number of high schools offering computer science courses. The declines come at a time when career opportunities in CS continue to grow and computer science graduates are seen as crucial in building a globally competitive workforce for the 21st century. Efforts aimed at reversing the declining interest in computer science include curriculum revisions at the undergraduate level at many institutions, a re-design of computer science AP courses [1], and the inclusion of computational thinking into disciplines outside computer science [3].This panel discusses four projects of computer science researchers collaborating with high school teachers on integrating computing and computational thinking into their courses. The majority of the high school teachers involved is teaching science and math courses. They are teaching a diverse group of talented and college-bound students. The goal of all projects is to integrate computing into disciplines represented in the high school curriculum and to raise the awareness of computer science as an exciting and intellectually rewarding field.This panel will outline recent and on-going activities and interaction with high school teachers. Each panelist will describe how he/she got involved and the nature of the interaction. The panelists will talk about their individual projects, outline their visions for future interactions, and how their effort can be replicated by others. The session will briefly describe NSF's RET program which provided teacher support for three of the four projects. The session will then be opened for discussion; the audience will be encouraged to ask questions and contribute additional ideas for the inclusion of computational thinking in high school courses.},
booktitle = {Proceedings of the 41st ACM Technical Symposium on Computer Science Education},
pages = {390–391},
numpages = {2},
keywords = {computational thinking, education},
location = {Milwaukee, Wisconsin, USA},
series = {SIGCSE '10}
}

@inbook{10.1145/3507951.3519285,
author = {Bers, Marina Umaschi and Govind, Madhu and Relkin, Emily},
title = {Coding as another language: computational thinking, robotics and literacy in first and second grade},
year = {2022},
isbn = {9781450396158},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3507951.3519285},
abstract = {This paper explores the integration of coding, CT and literacy by describing a study conducted with first and second grade classrooms in Norfolk, Virginia. A total of 667 students and 57 educators from eight elementary schools, as well as 181 students from two comparison schools participated in a curriculum called Coding as Another Language (CAL) that utilizes KIBO robotics, a developmentally appropriate kit which does not require keyboards or screens. CAL positions the teaching of programming as a symbolic system of representation, a tool for creative expression and communication. Thus, research questions regarding the relationship between students' coding and CT outcomes and their literacy skills were explored, as well as teachers' reactions to the experience, in particular regarding the integrating of teaching computer science and literacy in the early grades. Participation in the CAL-KIBO curriculum was associated with improvement in coding and unplugged CT skills. Baseline literacy skills were related to students' acquisition of CT skills. For example, students who had higher literacy scores at the beginning of the term were more successful in CT tasks. Furthermore, although teachers varied in their perceptions of integrating coding and CT with literacy, our findings suggest that these disciplines may share some cognitive and pedagogical overlap that has yet to be extensively explored in the early computing education field.},
booktitle = {Computational Thinking in PreK-5: Empirical Evidence for Integration and Future Directions},
pages = {30–38},
numpages = {9}
}

@inproceedings{10.1145/3251961,
author = {Craig, Annemieke},
title = {Session details: Computational thinking},
year = {2010},
isbn = {9781605588209},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3251961},
doi = {10.1145/3251961},
booktitle = {Proceedings of the Fifteenth Annual Conference on Innovation and Technology in Computer Science Education},
location = {Bilkent, Ankara, Turkey},
series = {ITiCSE '10}
}

@inproceedings{10.1145/2445196.2445374,
author = {Touretzky, David S. and Marghitu, Daniela and Ludi, Stephanie and Bernstein, Debra and Ni, Lijun},
title = {Accelerating K-12 computational thinking using scaffolding, staging, and abstraction},
year = {2013},
isbn = {9781450318686},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2445196.2445374},
doi = {10.1145/2445196.2445374},
abstract = {We describe a three-stage model of computing instruction beginning with a simple, highly scaffolded programming environment (Kodu) and progressing to more challenging frameworks (Alice and Lego NXT-G). In moving between frameworks, students explore the similarities and differences in how concepts such as variables, conditionals, and looping are realized. This can potentially lead to a deeper understanding of programming, bringing students closer to true computational thinking. Some novel strategies for teaching with Kodu are outlined. Finally, we briefly report on our methodology and select preliminary results from a pilot study using this curriculum with students ages 10-17, including several with disabilities.},
booktitle = {Proceeding of the 44th ACM Technical Symposium on Computer Science Education},
pages = {609–614},
numpages = {6},
keywords = {Alice, computational thinking, kodu, robotics},
location = {Denver, Colorado, USA},
series = {SIGCSE '13}
}

@article{10.5555/2038772.2038787,
title = {Interdisciplinary experiments in and perspectives on computational thinking},
year = {2012},
issue_date = {January 2012},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {27},
number = {3},
issn = {1937-4771},
abstract = {This panel consists of faculty who jointly worked on a collaborative project connected to an NSF-sponsored interdisciplinary initiative called "Piloting Pathways for Computational Thinking in the Curriculum." Faculty at Towson University from Computer Science, English, Kinesiology, Music, and Sociology jointly formulated courses that involved applying and connecting ideas for analytic and creative purposes across fields. We respectively experimented with identifying concepts and with using these tools in our respective areas or fields; we also worked towards identifying what aspects or features of computational thinking might be generalized for broader educational purposes. The courses included "Everyday Computational Thinking" (Computer Science), "Revolutionary Networks" (Sociology), "Creative Work with Audio and Visual" (Music), "Computational Thinking in the Humanities" (English), and "Developing Life Skills for Weight Management" (Kinesiology). From the perspective of the humanities and music, much was learned by way of the limits of computation as an explanatory model for the expressive dimensions of our fields; that said, much was also learned about how the constraints it presented could enhance and generate new possibilities for analysis and creativity. The more quantitative-based disciplines likewise explored some applications of computational thinking for more dynamic approaches to problem-solving in everyday contexts and lives. The panel will include several faculty involved in the project who will share their experiences and learning outcomes in brief (approximately 10-minute "flash" presentations with lots of handouts), and we will invite audience inquiries about the challenges experienced in collaborating for such an interdisciplinary project and how what we learned will inform future goals and initiatives.},
journal = {J. Comput. Sci. Coll.},
month = jan,
pages = {50–51},
numpages = {2}
}

@article{10.5555/1734797.1734828,
author = {Dourish, Paul},
title = {Computational thinking and interdisciplinary encounters: keynote address},
year = {2010},
issue_date = {April 2010},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {25},
number = {4},
issn = {1937-4771},
abstract = {In an influential 2006 article, Jeanette Wing called for the elaboration of an approach to "computational thinking." Wing argued that computational thinking expresses the importance of computer science to general education, and provides a basis for interdisciplinary collaboration, by setting out the conceptual foundations of computational modeling and reasoning.In this talk, I want to reflect on alternative ways of approaching computational thinking as a site of disciplinary encounter, with a particular focus on the ways that interdisciplinary work might be generative of new forms of computational thinking. This work grows out of a collaboration with colleagues in Australia, whose research is focused on the use of information technology in the cultural practices of indigenous Australian groups, particularly the Yolngu of Northeast Arnhemland. Yolngu epistemology provides an interesting starting point for reconsidering aspects of computational practice, which suggests new perspectives on computational thinking and its practice, and on the possible relationship between computer science and other disciplines.},
journal = {J. Comput. Sci. Coll.},
month = apr,
pages = {157},
numpages = {1}
}

@inproceedings{10.1145/1562877.1562941,
author = {Curzon, Paul and Peckham, Joan and Taylor, Harriet and Settle, Amber and Roberts, Eric},
title = {Computational thinking (CT): on weaving it in},
year = {2009},
isbn = {9781605583815},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1562877.1562941},
doi = {10.1145/1562877.1562941},
booktitle = {Proceedings of the 14th Annual ACM SIGCSE Conference on Innovation and Technology in Computer Science Education},
pages = {201–202},
numpages = {2},
keywords = {computational thinking, curriculum, education},
location = {Paris, France},
series = {ITiCSE '09}
}

@inproceedings{10.1145/2325296.2325306,
author = {Settle, Amber and Franke, Baker and Hansen, Ruth and Spaltro, Frances and Jurisson, Cynthia and Rennert-May, Colin and Wildeman, Brian},
title = {Infusing computational thinking into the middle- and high-school curriculum},
year = {2012},
isbn = {9781450312462},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2325296.2325306},
doi = {10.1145/2325296.2325306},
abstract = {In recent years there have been significant efforts to revamp undergraduate and K-12 curricula to emphasize computational thinking, a term popularized by Jeannette Wing in 2006. We describe work introducing and enhancing computational thinking activities and assessments in the middle- and high-school curriculum at the University of Chicago Lab Schools. In total six courses were altered as a part of the Computational Thinking across the Curriculum Project: middle-school and high-school computer science, and high-school Latin, graphic arts, English, and history. We detail the modifications to the curriculum and discuss the successes and challenges of the project.},
booktitle = {Proceedings of the 17th ACM Annual Conference on Innovation and Technology in Computer Science Education},
pages = {22–27},
numpages = {6},
keywords = {computational thinking, computer science, english, graphic arts, high school, history, k-12, latin, middle school},
location = {Haifa, Israel},
series = {ITiCSE '12}
}

@article{10.1145/1993069.1993073,
author = {Wolz, Ursula and Stone, Meredith and Pearson, Kim and Pulimood, Sarah Monisha and Switzer, Mary},
title = {Computational Thinking and Expository Writing in the Middle School},
year = {2011},
issue_date = {July 2011},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {11},
number = {2},
url = {https://doi.org/10.1145/1993069.1993073},
doi = {10.1145/1993069.1993073},
abstract = {To broaden participation in computing we need to look beyond traditional domains of inquiry and expertise. We present results from a demonstration project in which interactive journalism was used to infuse computational thinking into the standard curriculum and regular classroom experience at a middle school with a diverse population. Outcomes indicate that we were able to develop positive attitudes about computational thinking and programming among students and teachers who did not necessarily view themselves as “math types.” By partnering with language arts, technology and math teachers at Fisher Middle School, Ewing New Jersey, we introduced the isomorphism between the journalistic process and computational thinking to 7th and 8th graders. An intense summer institute, first with the teachers and then with students recruited from the school, immersed them in the “newsroom of the future” where they researched and wrote news stories, shot and edited video, and developed procedural animations in Scratch to support their storylines. An afterschool club sustained the experience. The teachers adapted interactive journalism and Scratch programming to enrich standard language arts curriculum and are infusing computational thinking in classroom experiences throughout the school.},
journal = {ACM Trans. Comput. Educ.},
month = jul,
articleno = {9},
numpages = {22},
keywords = {K-12 CS Education, Scratch, broadening participation in computing, computational thinking, writing and computing}
}

@inproceedings{10.1145/1822090.1822126,
author = {Perkovi\'{c}, Ljubomir and Settle, Amber and Hwang, Sungsoon and Jones, Joshua},
title = {A framework for computational thinking across the curriculum},
year = {2010},
isbn = {9781605588209},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1822090.1822126},
doi = {10.1145/1822090.1822126},
abstract = {We describe a framework for implementing computational thinking in a broad variety of general education courses. The framework is designed to be used by faculty without formal training in information technology in order to understand and integrate computational thinking into their own general education courses. The framework includes examples of computational thinking in a variety of general education courses, as well as sample in-class activities, assignments, and other assessments for the courses. The examples in the different courses are related and differentiated using categories taken from Denning Great Principles of Computing, so that similar types of computational thinking appearing in different contexts are brought together. This aids understanding of the computational thinking found in the courses and provides a template for future work on new course materials. Specific examples of computational thinking in the design category are provided in the context of three distinct courses.},
booktitle = {Proceedings of the Fifteenth Annual Conference on Innovation and Technology in Computer Science Education},
pages = {123–127},
numpages = {5},
keywords = {computational thinking, general education, great principles of computing},
location = {Bilkent, Ankara, Turkey},
series = {ITiCSE '10}
}

@article{10.1145/1118178.1118215,
author = {Wing, Jeannette M.},
title = {Computational thinking},
year = {2006},
issue_date = {March 2006},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {49},
number = {3},
issn = {0001-0782},
url = {https://doi.org/10.1145/1118178.1118215},
doi = {10.1145/1118178.1118215},
abstract = {It represents a universally applicable attitude and skill set everyone, not just computer scientists, would be eager to learn and use.},
journal = {Commun. ACM},
month = mar,
pages = {33–35},
numpages = {3}
}

@inproceedings{10.1145/1734263.1734277,
author = {Ahamed, Sheikh Iqbal and Brylow, Dennis and Ge, Rong and Madiraju, Praveen and Merrill, Stephen J. and Struble, Craig A. and Early, James P.},
title = {Computational thinking for the sciences: a three day workshop for high school science teachers},
year = {2010},
isbn = {9781450300063},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1734263.1734277},
doi = {10.1145/1734263.1734277},
abstract = {This paper describes "Computational Thinking for the Sciences", a 3-day summer workshop for high school science and mathematics teachers. Our workshop emphasizes the deep connections between the natural sciences, mathematics and computer science through activities and simulation development appropriate for scientific explorations. Teachers were exposed to simulation development in VPython, a visual extension to the popular Python programming language. By broadening exposure of computational thinking to the natural sciences and developing activities specifically for science domains, we hope to attract new students into computer science and better prepare natural science students to employ the computational tools they will utilize in the future.},
booktitle = {Proceedings of the 41st ACM Technical Symposium on Computer Science Education},
pages = {42–46},
numpages = {5},
keywords = {computational thinking, high school mathematics, high school science, k-12 outreach},
location = {Milwaukee, Wisconsin, USA},
series = {SIGCSE '10}
}

@inproceedings{10.1145/3144826.3145450,
author = {Gonz\'{a}lez, Yen Air Caballero and Mu\~{n}oz-Repiso, Ana Garc\'{\i}a-Valc\'{a}rcel},
title = {Development of computational thinking skills and collaborative learning in initial education students through educational activities supported by ICT resources and programmable educational robots},
year = {2017},
isbn = {9781450353861},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3144826.3145450},
doi = {10.1145/3144826.3145450},
abstract = {The purpose of this paper is to present the PhD thesis research plan, which aims to design, integrate and evaluate educational activities mediated by ICT resources and programmable educational robots, in initial education students, obtaining collaborative learning and Training of computational thinking skills. The research will be developed through a mixed methodology, with the intention of being able to carry out a more complete analysis and evaluation of the subject, obtaining data from different sources (teachers, students and coordinators of educational level). Various instruments such as interviews, questionnaires and participant type observation will be used, focusing on teachers and students. In addition, a rubric will be used to evaluate students' performance in the development of learning activities, through the sequential programming of educational robots. The results that will be obtained with this research will allow to carry out a proposal of technological educational action of great quality, based on the benefits and limitations of the integration of ICT resources and programmable Robots, contributing in a significant way to the implementation of new approaches for the Teaching-learning curriculum content from an early age and empowering participants in the development of computational thinking skills and collaborative learning.},
booktitle = {Proceedings of the 5th International Conference on Technological Ecosystems for Enhancing Multiculturality},
articleno = {103},
numpages = {6},
keywords = {Computational thinking, collaborative learning, programming, robotics, students, teaching},
location = {C\'{a}diz, Spain},
series = {TEEM 2017}
}

@inproceedings{10.5555/2393536.2393558,
author = {Mota, Marcelle Pereira and Faria, Leonardo Serra and de Souza, Clarisse Sieckenius},
title = {Documentation comes to life in computational thinking acquisition with agentsheets},
year = {2012},
isbn = {9788576692621},
publisher = {Brazilian Computer Society},
address = {Porto Alegre, BRA},
abstract = {This paper is about the use of live documentation in Computational Thinking Acquisition (CTA) programs with AgentSheets. AgentSheets is a visual programming environment to build games. Based on previous studies showing that semiotic relations among visual game elements could be further explored to the benefit of the learners, we designed PoliFacets, a Web extension to AgentSheets cast as a live conversational document. With it, teachers and learners can follow different threads of conversation about (multiple representations of) game elements and relations between them. We present a qualitative evaluation study of PoliFacets with two experienced AgentSheets instructors and three school teachers trained to coach students in CTA programs. Findings show that although our system has not yet completely fulfilled our design intent, it has led participants to gain relevant insights about their teaching and learning, as well as to articulating doubts and misunderstandings that otherwise could have gone unnoticed.},
booktitle = {Proceedings of the 11th Brazilian Symposium on Human Factors in Computing Systems},
pages = {151–160},
numpages = {10},
keywords = {agentsheets, computational thinking acquisition, end-user programming, live documentation, metacommunication},
location = {Cuiaba, Brazil},
series = {IHC '12}
}

@article{10.5555/2544322.2544325,
author = {Pulimood, S. Monisha and Pearson, Kim and Bates, Diane},
title = {Refactoring courseware to engage undergraduates in computational thinking across boundaries},
year = {2014},
issue_date = {January 2014},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {29},
number = {3},
issn = {1937-4771},
abstract = {There is a growing need to develop courses that demonstrate the articulations between computer science and an array of computing-dependent fields. This hands-on workshop will introduce participants to a model for students and faculty to collaborate across disciplines and with a community organization to develop computational solutions to address complex real-world problems. The strength of this model lies in leveraging existing courses and courseware rather developing new ones. Participants will learn how to develop at their own institutions, similar collaborations that involve computer science, a computing-dependent discipline and a community partner. We will provide access to materials that participants can adapt for their own courses to redesign existing courseware: best practices; pitfalls to be avoided and how to deal with them; instructional materials developed for the courses used in our project; assessment and evaluation instruments developed for the courses used in our project; instructions on adapting the assessment and evaluation instruments for other courses; instructions, documentation, and configuration scripts for using the technology needed for such collaborations. The presenters will share experiences and lead a brainstorming session to design strategies for dealing with challenges and for gaining institutional support for such collaborations. Participants are encouraged to bring their laptops to work on, but this is not required.},
journal = {J. Comput. Sci. Coll.},
month = jan,
pages = {9–10},
numpages = {2}
}

@inproceedings{10.1145/3012430.3012660,
author = {L\'{o}pez, Arturo Rojas and Garc\'{\i}a-Pe\~{n}alvo, Francisco J.},
title = {Personalized contents based on cognitive level of student's computational thinking for learning basic competencies of programming using an environment b-learning},
year = {2016},
isbn = {9781450347471},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3012430.3012660},
doi = {10.1145/3012430.3012660},
abstract = {The main objective of the research is to determine the efficiency of using an environment b-learning in the acquisition of basic skills of programming though customizing the content for each student, to achieve a set of activities that can be used will be designed in the Moodle platform and contribute to teaching an initial programming course, considering three skill levels (basic, intermediate and advanced) of computational thinking of students. A mixed methodology approach will be implemented to achieve the objectives. The quantitative approach, whose characteristics using statistical measure phenomena, experimentation and use cause-effect analysis allow a sequential, deductive and testing process in generating results. The qualitative approach is conducted basically in natural environments and meanings are extracted from data allow a process that context the phenomenon and depth of ideas. To measure the cognitive level of students in computational thinking, instruments will be designed based on the bank of items released by the Computer Olympiad Talent Search in order to have reliable instruments (international proposal), valid (measures learning) and objectives (it focuses on the concept to measure) that they match with contents of subject. The main result is to generate personalized education, a learning experience that contributes to student motivation in tune with the academic goals of initial programming courses.},
booktitle = {Proceedings of the Fourth International Conference on Technological Ecosystems for Enhancing Multiculturality},
pages = {1139–1145},
numpages = {7},
keywords = {computational thinking, computer programming course, curriculum design, educational programming, engineering course, engineering education, higher education, learning programming, programming, programming teaching, students, teaching, work in progress},
location = {Salamanca, Spain},
series = {TEEM '16}
}

@article{10.1145/2676660,
author = {Yuen, Timothy T. and Robbins, Kay A.},
title = {A Qualitative Study of Students' Computational Thinking Skills in a Data-Driven Computing Class},
year = {2014},
issue_date = {February 2015},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {14},
number = {4},
url = {https://doi.org/10.1145/2676660},
doi = {10.1145/2676660},
abstract = {Critical thinking, problem solving, the use of tools, and the ability to consume and analyze information are important skills for the 21st century workforce. This article presents a qualitative case study that follows five undergraduate biology majors in a computer science course (CS0). This CS0 course teaches programming within a data-driven context and is part of a university-wide initiative to improve students' quantitative scholarship. In this course, students learn computing concepts and computational thinking by writing programs in MATLAB that compute with data, by performing meaningful analyses, and by writing about the results. The goal of the study reported here is to better understand the thought processes students use in such a data-driven approach. Findings show that students engage in an ongoing organizational process to understand the structure of the data. The computational and visualization tasks appear to be closely linked, and the visualization component appears to provide valuable feedback for students in accomplishing the programming tasks.},
journal = {ACM Trans. Comput. Educ.},
month = dec,
articleno = {27},
numpages = {19},
keywords = {Computational science and science education}
}

@article{10.5555/2184451.2184486,
author = {Morreale, Patricia and Goski, Catherine and Jimenez, Luis and Stewart-Gardiner, Carolee},
title = {Measuring the impact of computational thinking workshops on high school teachers},
year = {2012},
issue_date = {June 2012},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {27},
number = {6},
issn = {1937-4771},
abstract = {Computational thinking knowledge is used to develop solutions for computational problems, such as those found in mathematics and computer science. Over the past several years, workshops on computational thinking and computer science tools have been provided to high school teachers, most recently as part of Google's Computer Science for High School (CS4HS) initiative. The lasting impact of these workshops on the high school teachers and their students after the teacher returns to the classroom is not well known. The computational thinking knowledge and tools of high school teachers in a regional area of the U. S. was assessed during two workshops, one held several months after the other, to determine the utility and benefit, if any, of the workshops for the teachers and their students. The results of this research contribute to understanding the perception of computational thinking and computer science among high school teachers, as well as to the identification of the best tools and resources which high school teachers are most likely to use and which can be used to implement computational thinking in core curriculum standards, including mathematics.},
journal = {J. Comput. Sci. Coll.},
month = jun,
pages = {151–157},
numpages = {7}
}

@article{10.1145/2727126,
author = {Walker, Henry M.},
title = {Computational thinking in a non-majors CS course requires a programming component},
year = {2015},
issue_date = {March 2015},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {6},
number = {1},
issn = {2153-2184},
url = {https://doi.org/10.1145/2727126},
doi = {10.1145/2727126},
journal = {ACM Inroads},
month = feb,
pages = {58–61},
numpages = {4},
keywords = {introductory course, non-majors, pedagogy, programming}
}

@inproceedings{10.1145/3255047,
author = {Javidi, Giti},
title = {Session details: Focus on K-12: outreach and computational thinking},
year = {2014},
isbn = {9781450326056},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3255047},
doi = {10.1145/3255047},
booktitle = {Proceedings of the 45th ACM Technical Symposium on Computer Science Education},
location = {Atlanta, Georgia, USA},
series = {SIGCSE '14}
}

@article{10.1145/1516046.1516054,
author = {Denning, Peter J.},
title = {The profession of ITBeyond computational thinking},
year = {2009},
issue_date = {June 2009},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {52},
number = {6},
issn = {0001-0782},
url = {https://doi.org/10.1145/1516046.1516054},
doi = {10.1145/1516046.1516054},
abstract = {If we are not careful, our fascination with "computational thinking" may lead us back into the trap we are trying to escape.},
journal = {Commun. ACM},
month = jun,
pages = {28–30},
numpages = {3}
}

@article{10.1145/1929887.1929905,
author = {Barr, Valerie and Stephenson, Chris},
title = {Bringing computational thinking to K-12: what is Involved and what is the role of the computer science education community?},
year = {2011},
issue_date = {March 2011},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {2},
number = {1},
issn = {2153-2184},
url = {https://doi.org/10.1145/1929887.1929905},
doi = {10.1145/1929887.1929905},
abstract = {The process of increasing student exposure to computational thinking in K-12 is complex, requiring systemic change, teacher engagement, and development of signifi cant resources. Collaboration with the computer science education community is vital to this effort.},
journal = {ACM Inroads},
month = feb,
pages = {48–54},
numpages = {7},
keywords = {K-12 CS Education, K-12 curriculum, computational thinking, cross-disciplinary computing}
}

@inproceedings{10.1145/1734263.1734345,
author = {Wolz, Ursula and Stone, Meredith and Pulimood, Sarah M. and Pearson, Kim},
title = {Computational thinking via interactive journalism in middle school},
year = {2010},
isbn = {9781450300063},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1734263.1734345},
doi = {10.1145/1734263.1734345},
abstract = {To address the critical shortage of students entering computing fields, as well as broaden participation in computing, we present a summer and afterschool program in Interactive Journalism through which middle school students and their teachers develop an appreciation for and competence in computational thinking. We report on the outcomes of our first year in which three middle school language arts teachers, a technology teacher and a guidance counselor collaborate with college faculty to publish a school magazine of the future. Students and their teachers research and conduct interviews to develop news stories that are then presented as story packages with text, video, and procedural animations in Scratch. Results of formal data collection show changes in students' perceptions of what it means to program, as well as their emerging confidence in their ability to design computational solutions and to program.},
booktitle = {Proceedings of the 41st ACM Technical Symposium on Computer Science Education},
pages = {239–243},
numpages = {5},
keywords = {broadening participation in computing, computational thinking, k-12 cs education, scratch, writing and computing},
location = {Milwaukee, Wisconsin, USA},
series = {SIGCSE '10}
}

@inproceedings{10.1145/3027385.3029440,
author = {Grover, Shuchi and Bienkowski, Marie and Basu, Satabdi and Eagle, Michael and Diana, Nicholas and Stamper, John},
title = {A framework for hypothesis-driven approaches to support data-driven learning analytics in measuring computational thinking in block-based programming},
year = {2017},
isbn = {9781450348706},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3027385.3029440},
doi = {10.1145/3027385.3029440},
abstract = {K-12 classrooms use block-based programming environments (BBPEs) for teaching computer science and computational thinking (CT). To support assessment of student learning in BBPEs, we propose a learning analytics framework that combines hypothesis- and data-driven approaches to discern students' programming strategies from BBPE log data. We use a principled approach to design assessment tasks to elicit evidence of specific CT skills. Piloting these tasks in high school classrooms enabled us to analyze student programs and video recordings of students as they built their programs. We discuss a priori patterns derived from this analysis to support data-driven analysis of log data in order to better assess understanding and use of CT in BBPEs.},
booktitle = {Proceedings of the Seventh International Learning Analytics &amp; Knowledge Conference},
pages = {530–531},
numpages = {2},
location = {Vancouver, British Columbia, Canada},
series = {LAK '17}
}

@article{10.5555/1619221.1619222,
author = {Astrachan, Owen},
title = {A new way of thinking about computational thinking},
year = {2009},
issue_date = {October 2009},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {25},
number = {1},
issn = {1937-4771},
abstract = {Computational Thinking has emerged as an enduring metaphor in teaching and thinking about Computer Science since Jeanette Wing brought the term to our attention in a 2006 CACM article. Computational thinking involves abstraction, but a definition that is too abstract does not help in explaining computational thinking to someone who doesn't already have an intuitive idea of what it is:},
journal = {J. Comput. Sci. Coll.},
month = oct,
pages = {6},
numpages = {1}
}

@inproceedings{10.1145/1508865.1508932,
author = {Qin, Hong},
title = {Teaching computational thinking through bioinformatics to biology students},
year = {2009},
isbn = {9781605581835},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1508865.1508932},
doi = {10.1145/1508865.1508932},
abstract = {Modern biology has transformed from an insular entity into an interdisciplinary science, which in turn demands interdisciplinary and cross-disciplinary training for future work force in biology and life sciences. Computational thinking is a way of thinking that uses concepts and methodologies of computing to address questions in a broad range of subjects, and as such, computational thinking offers an important skill set in modern sciences. Despite its importance, the concept of computational thinking has generally been side-stepped in undergraduate biology education. Many students in life sciences are often weak in quantitative/computing skills and tend to avoid computing-orient courses. To address these issues, we incorporated computational thinking into a bioinformatics course for undergraduate life science majors. We developed comprehensive computer laboratory exercises that offer hands-on learning experience for the targeted student pool, and employed peer-assisted collaborative learning environment. Preliminary results of these explorative efforts will be helpful for others to teach computational thinking to biology students.},
booktitle = {Proceedings of the 40th ACM Technical Symposium on Computer Science Education},
pages = {188–191},
numpages = {4},
keywords = {bioinformatics, computational thinking, life sciences},
location = {Chattanooga, TN, USA},
series = {SIGCSE '09}
}

@inproceedings{10.1145/1597990.1598021,
author = {Orr, Genevieve},
title = {Computational thinking through programming and algorithmic art},
year = {2009},
isbn = {9781605588346},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1597990.1598021},
doi = {10.1145/1597990.1598021},
abstract = {General education students can be taught computational thinking skills through courses that marry computer programming with algorithmic art. Algorithmic art is a varied and growing field where images are generated on the computer using mathematical and computer algorithms (see http://processing.org/exhibition/index.html for examples). Visually oriented students may be motivated to learn programming when it is taught in a context that is as much focused on art, artists, and design principles as it is on mathematics and programming. This presentation will include 1) a discussion of the challenges of teaching programming, 2) the role of teaching style, motivation, and programming environment, 3) a summary of common algorithms and their relation to design principles, and 4) examples of artwork that has been created by current artists.},
booktitle = {SIGGRAPH 2009: Talks},
articleno = {31},
numpages = {1},
location = {New Orleans, Louisiana},
series = {SIGGRAPH '09}
}

@article{10.1145/3105910,
author = {Grover, Shuchi and Basu, Satabdi and Bienkowski, Marie and Eagle, Michael and Diana, Nicholas and Stamper, John},
title = {A Framework for Using Hypothesis-Driven Approaches to Support Data-Driven Learning Analytics in Measuring Computational Thinking in Block-Based Programming Environments},
year = {2017},
issue_date = {September 2017},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {17},
number = {3},
url = {https://doi.org/10.1145/3105910},
doi = {10.1145/3105910},
abstract = {Systematic endeavors to take computer science (CS) and computational thinking (CT) to scale in middle and high school classrooms are underway with curricula that emphasize the enactment of authentic CT skills, especially in the context of programming in block-based programming environments. There is, therefore, a growing need to measure students’ learning of CT in the context of programming and also support all learners through this process of learning computational problem solving. The goal of this research is to explore hypothesis-driven approaches that can be combined with data-driven ones to better interpret student actions and processes in log data captured from block-based programming environments with the goal of measuring and assessing students’ CT skills. Informed by past literature and based on our empirical work examining a dataset from the use of the Fairy Assessment in the Alice programming environment in middle schools, we present a framework that formalizes a process where a hypothesis-driven approach informed by Evidence-Centered Design effectively complements data-driven learning analytics in interpreting students’ programming process and assessing CT in block-based programming environments. We apply the framework to the design of Alice tasks for high school CS to be used for measuring CT during programming.},
journal = {ACM Trans. Comput. Educ.},
month = aug,
articleno = {14},
numpages = {25},
keywords = {Blended learning analytics, K-12 computer science education, block-based programming environments, computational psychometrics, data-driven, evidence-centered design, hypothesis-driven}
}

@inproceedings{10.1145/3501712.3535277,
author = {Zikovitz, David and Holbert, Nathan and Correa, Isabel},
title = {The Secret Communication Panel: A Constructionist Communications Device for Developing Computational Thinking Skills in School-Age Children},
year = {2022},
isbn = {9781450391979},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3501712.3535277},
doi = {10.1145/3501712.3535277},
abstract = {Computational thinking skills have been shown to have a unique cross-curricular relevance. Developing these skills in children using constructionist design to deliver personally meaningful computational experiences could lead to improved dispositions and attitudes towards other forms of STEM learning. The Secret Communication Panel is a constructionist toy in the form of a secret communications device that allows children to create their own highly personalized forms of communication in a computational environment.},
booktitle = {Proceedings of the 21st Annual ACM Interaction Design and Children Conference},
pages = {637–640},
numpages = {4},
keywords = {Learning toy, coding, computational thinking, constructionism},
location = {Braga, Portugal},
series = {IDC '22}
}

@article{10.5555/2400161.2400180,
author = {Webb, Heidi},
title = {Engaging and motivating computing activities with computational thinking concepts you can use},
year = {2013},
issue_date = {January 2013},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {28},
number = {3},
issn = {1937-4771},
abstract = {Even before entering middle school students have been exposed to some of the conceptual methods and skill sets that underlie computational thinking (CT). For example, elementary school aged children begin using problem-solving and abstraction in Mathematics, English and Geography when they study word problems, learn about sentence structures and grammar rules, and work with maps. However, prior to middle school the problem sets tend to be concrete and scaffolded to aid the student in learning the foundations needed to work with complex problems. As children develop their cognitive capacities, they should be able to explore and learn about CT in a more abstract and generalizable fashion. However, when computing technology is added to the design and implementation of a solution it can be overwhelming for those who may not be comfortable turning to technology for answers. For this reason, problem solving can be difficult for young people who haven't learned the role technology may have in their lives now or in the future.},
journal = {J. Comput. Sci. Coll.},
month = jan,
pages = {102–103},
numpages = {2}
}

@article{10.5555/3512469.3512477,
author = {Brown-Gaines, Tisha},
title = {Visual sensor networks: analysis of environmental impacts via computational thinking},
year = {2021},
issue_date = {October 2021},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {37},
number = {1},
issn = {1937-4771},
abstract = {Visual Sensor Networks (VSNs) are comprised of camera nodes that are capable of acquiring, distributing, and processing images. Thus, providing rich information about a given event. However, image sensing is an extremely powerful electrical consuming mechanism, causing visual sensor networks to indirectly contribute to greenhouse gas emissions. As our society adopts emerging technologies central to the field of Internet of Things (IoTs) such as smart homes and smart surveillance systems, it is imperative to consider energy consumption and efficiency to create environmentally friendly technology. In this study, we will investigate the environmental footprint of visual sensors and develop a program that optimizes object tracking and energy efficiency via computational thinking. The energy consumption of a PixyCam2 will be measured with a multi-meter while performing several algorithms to analyze various metrics central to the visual sensor's functionality.},
journal = {J. Comput. Sci. Coll.},
month = oct,
pages = {71–77},
numpages = {7}
}

@inproceedings{10.1145/2445196.2445479,
author = {Sobolewska, Monika},
title = {Logistics of moving from computer fluency to computational thinking (abstract only)},
year = {2013},
isbn = {9781450318686},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2445196.2445479},
doi = {10.1145/2445196.2445479},
abstract = {As the theme of the conference indicates, computing is changing and so is its pedagogy. In the meantime, many computer science departments teach computer fluency service courses required by their universities, colleges, or other departments, in which the content of the course becomes highly challenged by institutional constraints (e.g. class size, university computer literacy requirement, etc.). This birds-of-a-feather is designed to gather educators who have been teaching fluency courses or may be teaching such courses in the future, so that they can share their experiences, learn from one another, and discuss the most effective ways of affecting change and delivering the content they deem most appropriate.},
booktitle = {Proceeding of the 44th ACM Technical Symposium on Computer Science Education},
pages = {751},
numpages = {1},
keywords = {computational thinking, computer fluency, computer literacy, curriculum issues, non-majors},
location = {Denver, Colorado, USA},
series = {SIGCSE '13}
}

@article{10.5555/1747137.1747148,
author = {Qualls, Jake A. and Sherrell, Linda B.},
title = {Why computational thinking should be integrated into the curriculum},
year = {2010},
issue_date = {May 2010},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {25},
number = {5},
issn = {1937-4771},
abstract = {Computational Thinking (CT) is an approach to problem solving that consolidates logic skills with core computer science concepts. This survey paper reviews recent efforts to integrate CT into primary, secondary and post-secondary curricula. The paper should prove beneficial to instructors interested in investigating this important topic.},
journal = {J. Comput. Sci. Coll.},
month = may,
pages = {66–71},
numpages = {6}
}

@inproceedings{10.1145/3255310,
author = {Henderson, Peter},
title = {Session details: Computational thinking},
year = {2007},
isbn = {1595933611},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3255310},
doi = {10.1145/3255310},
booktitle = {Proceedings of the 38th SIGCSE Technical Symposium on Computer Science Education},
location = {Covington, Kentucky, USA},
series = {SIGCSE '07}
}

@article{10.1145/3263098,
author = {Henderson, Peter},
title = {Session details: Computational thinking},
year = {2007},
issue_date = {March 2007},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {39},
number = {1},
issn = {0097-8418},
url = {https://doi.org/10.1145/3263098},
doi = {10.1145/3263098},
journal = {SIGCSE Bull.},
month = mar
}

@inproceedings{10.1145/1953163.1953242,
author = {Kafura, Dennis and Tatar, Deborah},
title = {Initial experience with a computational thinking course for computer science students},
year = {2011},
isbn = {9781450305006},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1953163.1953242},
doi = {10.1145/1953163.1953242},
abstract = {Experience with the first offering of a computational thinking course for computer science (CT4CS) students is reported. The course is grounded in student interaction with fundamental, recurring concepts suggested by comparison with two sets of computer science principles. By using specialized, freely available tools and physical simulations it is possible to provide concrete, tangible learning experiences that neither require knowledge of nor the overhead of programming. Student end-of-term reflections indicate that the course deepened and broadened their understanding of computer science even when they had previously encountered a topic, and improved their computer science vocabulary.},
booktitle = {Proceedings of the 42nd ACM Technical Symposium on Computer Science Education},
pages = {251–256},
numpages = {6},
keywords = {CS0, computational thinking, curriculum, pedagogy},
location = {Dallas, TX, USA},
series = {SIGCSE '11}
}

@inproceedings{10.1145/2538862.2544246,
author = {Zhang, Ming and Li, Bo and Lo, Ginnie},
title = {China's perspective from the viewpoint of computational thinking on CS1 for non-majors (abstract only)},
year = {2014},
isbn = {9781450326056},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2538862.2544246},
doi = {10.1145/2538862.2544246},
abstract = {A key challenge for the Chinese educational system is the development of a CS1 course for non-major college students that can meet the unique environment in our country. In mainland China, CS1 is required of all freshmen at their first semester, approximately 7 million freshmen per year. We have named this CS1 course "Fundamentals of University Computer Science" to reflect our ambitions to bring our students to the cutting edge of information technology and society. Over the past few years, many Chinese universities have advanced and experimented with their ideas for introducing computational thinking into CS1, one of the most important core courses. In this BOF session, we want share our ideas and concrete solutions and to engage in dialogue with our international colleagues in order to enrich and improve our approach. This BOF Session is sponsored by the ACM China Subcommittee on Education.},
booktitle = {Proceedings of the 45th ACM Technical Symposium on Computer Science Education},
pages = {730},
numpages = {1},
keywords = {computational thinking, cs1 course, problem solving},
location = {Atlanta, Georgia, USA},
series = {SIGCSE '14}
}

@inproceedings{10.1145/1378773.1378823,
author = {Good, Judith and Romero, Pablo and du Boulay, Benedict and Reid, Henry and Howland, Katherine and Robertson, Judy},
title = {An embodied interface for teaching computational thinking},
year = {2008},
isbn = {9781595939876},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1378773.1378823},
doi = {10.1145/1378773.1378823},
abstract = {We describe an innovative educational system designed to, firstly, motivate young people to engage with computational concepts and secondly, provide them with tools to do so in an embodied manner. The interface is designed as a "magic mirror" in which users can, through augmented reality technology, take on the role of a character and control the character's movements via their own movements. They are able to record movements, and using a Wii Remote as a mouse and pointing device, organise these movements into sequences. We are now working on ways in which the recorded movements can be manipulated in ways that foster computational thinking.},
booktitle = {Proceedings of the 13th International Conference on Intelligent User Interfaces},
pages = {333–336},
numpages = {4},
keywords = {Embodied interfaces, augmented reality, computational thinking},
location = {Gran Canaria, Spain},
series = {IUI '08}
}

@inproceedings{10.1145/1508865.1509053,
author = {Astrachan, Owen and Hambrusch, Susanne and Peckham, Joan and Settle, Amber},
title = {The present and future of computational thinking},
year = {2009},
isbn = {9781605581835},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1508865.1509053},
doi = {10.1145/1508865.1509053},
booktitle = {Proceedings of the 40th ACM Technical Symposium on Computer Science Education},
pages = {549–550},
numpages = {2},
keywords = {computational thinking, curriculum, education},
location = {Chattanooga, TN, USA},
series = {SIGCSE '09}
}

@inproceedings{10.1145/1867651.1867689,
author = {Ater-Kranov, Ashley and Bryant, Robert and Orr, Genevieve and Wallace, Scott and Zhang, Mo},
title = {Developing a community definition and teaching modules for computational thinking: accomplishments and challenges},
year = {2010},
isbn = {9781450303439},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1867651.1867689},
doi = {10.1145/1867651.1867689},
abstract = {The NSF-funded Northwest Distributed Computer Science Department (NW-DCSD) project brings together 24 multi-disciplinary faculty from 19 diverse colleges and universities in an effort to change the face of computing in the Pacific Northwest region of the United States. We offer an innovative and inclusive vision of computing in the 21st century and foster opportunities for multi-disciplinary and inter-institutional computing and computer science education collaborations. Over the project's first two years, this community has created 9 engaging, easy-to-use learning modules that teach various levels of computational thinking to two different audiences: non-computer science and computer science undergraduate students. This paper presents the development of a community definition of computational thinking, the learning modules, initial findings, unanticipated challenges, and next steps.},
booktitle = {Proceedings of the 2010 ACM Conference on Information Technology Education},
pages = {143–148},
numpages = {6},
keywords = {CPATH, NW-DCSD, computational thinking, computing education modules},
location = {Midland, Michigan, USA},
series = {SIGITE '10}
}

@inproceedings{10.1145/1508865.1508931,
author = {Hambrusch, Susanne and Hoffmann, Christoph and Korb, John T. and Haugan, Mark and Hosking, Antony L.},
title = {A multidisciplinary approach towards computational thinking for science majors},
year = {2009},
isbn = {9781605581835},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1508865.1508931},
doi = {10.1145/1508865.1508931},
abstract = {This paper describes the development and initial evaluation of a new course ``Introduction to Computational Thinking'' taken by science majors to fulfill a college computing requirement. The course was developed by computer science faculty in collaboration with science faculty and it focuses on the role of computing and computational principles in scientific inquiry. It uses Python and Python libraries to teach computational thinking via basic programming concepts, data management concepts, simulation, and visualization. Problems with a computational aspect are drawn from different scientific disciplines and are complemented with lectures from faculty in those areas. Our initial evaluation indicates that the problem-driven approach focused on scientific discovery and computational principles increases the student's interest in computing.},
booktitle = {Proceedings of the 40th ACM Technical Symposium on Computer Science Education},
pages = {183–187},
numpages = {5},
keywords = {computational thinking, computing for scientists, curriculum, multi-disciplinary},
location = {Chattanooga, TN, USA},
series = {SIGCSE '09}
}

@inproceedings{10.1145/1953163.1953243,
author = {Dierbach, Charles and Hochheiser, Harry and Collins, Samuel and Jerome, Gerald and Ariza, Christopher and Kelleher, Tina and Kleinsasser, William and Dehlinger, Josh and Kaza, Siddharth},
title = {A model for piloting pathways for computational thinking in a general education curriculum},
year = {2011},
isbn = {9781450305006},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1953163.1953243},
doi = {10.1145/1953163.1953243},
abstract = {Computational thinking has been identified as a necessary fundamental skill for all students. University curricula, however, are currently not designed to provide such knowledge to a broad student population. In this paper, we report on our experiences in the development of a model for incorporating computational thinking into the undergraduate, general education curriculum at Towson University. We discuss the model in terms of eliciting faculty interest, institutional support, and positive student response. In the first two years of this NSF-funded three-year project, we have developed, piloted and assessed five computational thinking general education courses - an Everyday Computational Thinking course, and four discipline-specific computational thinking general education courses. Initial assessments show promising and significant student, instructor and administration interest in computational thinking as a basis in courses covering multiple disciplines within the general education curriculum.},
booktitle = {Proceedings of the 42nd ACM Technical Symposium on Computer Science Education},
pages = {257–262},
numpages = {6},
keywords = {computational thinking, curriculum design},
location = {Dallas, TX, USA},
series = {SIGCSE '11}
}

@inproceedings{10.1145/3247314,
author = {Rabung, John},
title = {Session details: Computational thinking across disciplines},
year = {2009},
isbn = {9781605581835},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3247314},
doi = {10.1145/3247314},
booktitle = {Proceedings of the 40th ACM Technical Symposium on Computer Science Education},
location = {Chattanooga, TN, USA},
series = {SIGCSE '09}
}

@article{10.1145/3264085,
author = {Rabung, John},
title = {Session details: Computational thinking across disciplines},
year = {2009},
issue_date = {March 2009},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {41},
number = {1},
issn = {0097-8418},
url = {https://doi.org/10.1145/3264085},
doi = {10.1145/3264085},
journal = {SIGCSE Bull.},
month = mar
}

@inproceedings{10.1145/3545947.3576339,
author = {Koornneef, Stacey A. and Bradbury, Jeremy S. and Miljanovic, Michael A.},
title = {Run, Llama, Run: A Computational Thinking Game for K-5 Students Designed to Support Equitable Access},
year = {2023},
isbn = {9781450394338},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3545947.3576339},
doi = {10.1145/3545947.3576339},
abstract = {Computational thinking is now included in K-5 classrooms and this has led to a demand for new interactive and collaborative learning tools that engage a younger audience. Block-based programming and educational games have both been shown to be effective at engaging children, however they have limitations with respect to supporting collaborative learning and equitable access. Our goal in designing Run, Llama, Run was to build on the positive aspects of block-based programming and educational games while also addressing these limitations. Furthermore, we are using Run, Llama, Run as a platform to explore the trade-offs between digital and tangible interfaces to understand how best to support equitable access while maintaining learning, engagement, and collaboration.},
booktitle = {Proceedings of the 54th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1395},
numpages = {1},
keywords = {block-based programming, computational thinking, educational games, equitable access, tangible programming},
location = {Toronto ON, Canada},
series = {SIGCSE 2023}
}

@article{10.5555/1968521.1968539,
author = {Morreale, Patricia and Joiner, David},
title = {Changing perceptions of computer science and computational thinking among high school teachers},
year = {2011},
issue_date = {June 2011},
publisher = {Consortium for Computing Sciences in Colleges},
address = {Evansville, IN, USA},
volume = {26},
number = {6},
issn = {1937-4771},
abstract = {Interest in specific college majors begins in high school. The influence of high school math and science teachers is important, both for high school preparation of future computer science undergraduates, and for the understanding and interest in prospective majors high school teachers can encourage in their students. With the simultaneous decline in high school computer science curriculum offerings and undergraduate majors in computer science, an effort has been made to update the perception of computer science and computational thinking among high school teachers by hosting local non-residential summer workshops for high school teachers and their students.Pre- and post- workshop surveys show that the summer workshops have changed the perceptions high school teachers had regarding careers in computer science, resulting in a 50% increase in the likelihood that a high school teacher would recommend computer science, computational science, or information technology to their students as a career. By changing teacher perceptions of computer science and computational thinking, high school teachers are more likely to include computer science as one of the college majors suggested to their students.},
journal = {J. Comput. Sci. Coll.},
month = jun,
pages = {71–77},
numpages = {7}
}

@inproceedings{10.1145/3478432.3499050,
author = {Akbar, Monika and Mortimer, Katherine and Navarrete, Grecia and Galvan, Stephanie and Molina, George and Reyes, Romelia and Ontiveros, Cynthia and Gray, Scott and Escandon, Sarah and Lyons, Monica and Delgado, Pedro and Medrano, Victor and Kneedler, Haleigh and Benitez, Patricia and Ramirez, Jacob and Vazquez, Jesus and Anderson, Melissa},
title = {The Sol y Agua RPP: A Bilingual and Culturally Responsive Approach to Introduce Computational Thinking in Middle School},
year = {2022},
isbn = {9781450390712},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3478432.3499050},
doi = {10.1145/3478432.3499050},
abstract = {The Sol y Agua researcher-practitioner partnership (RPP) project introduces computational thinking (CT) in the middle school of the Paso del Norte region using a linguistically and culturally responsive approach. At the core of this RPP is the Sol y Agua game, a bilingual, culturally- and environmentally-relevant educational game developed at the University of Texas at El Paso to introduce computing and STEM topics in middle school. The Sol y Agua RPP includes some critical areas for a successful RPP, including partnership building and the focus on a linguistically and culturally-responsive pedagogy and content development. We describe our approach to build a sustainable RPP, incorporating bilingual pedagogy, and integrating CT through a culturally- and environmentally-relevant game as part of our RPP experience.},
booktitle = {Proceedings of the 53rd ACM Technical Symposium on Computer Science Education V. 2},
pages = {1096},
numpages = {1},
keywords = {bpc, computational thinking, ell, pbl, rpp, translanguaging},
location = {Providence, RI, USA},
series = {SIGCSE 2022}
}

@article{10.1145/1378704.1378713,
author = {Guzdial, Mark},
title = {EducationPaving the way for computational thinking},
year = {2008},
issue_date = {August 2008},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {51},
number = {8},
issn = {0001-0782},
url = {https://doi.org/10.1145/1378704.1378713},
doi = {10.1145/1378704.1378713},
abstract = {Drawing on methods from diverse disciplines---including computer science, education, sociology, and psychology---to improve computing education.},
journal = {Commun. ACM},
month = aug,
pages = {25–27},
numpages = {3}
}

@inproceedings{10.1145/1734263.1734384,
author = {Ruthmann, Alex and Heines, Jesse M. and Greher, Gena R. and Laidler, Paul and Saulters, Charles},
title = {Teaching computational thinking through musical live coding in scratch},
year = {2010},
isbn = {9781450300063},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1734263.1734384},
doi = {10.1145/1734263.1734384},
abstract = {This paper discusses our ongoing experiences in developing an interdisciplinary general education course called Sound Thinking that is offered jointly by our Dept. of Computer Science and Dept. of Music. It focuses on the student outcomes we are trying to achieve and the projects we are using to help students realize those outcomes. It explains why we are moving from a web-based environment using HTML and JavaScript to Scratch and discusses the potential for Scratch's "musical live coding" capability to reinforce those concepts even more strongly.},
booktitle = {Proceedings of the 41st ACM Technical Symposium on Computer Science Education},
pages = {351–355},
numpages = {5},
keywords = {computer science education, curriculum design, generative music, interdisciplinary courses, musical live coding, performamatics, scratch},
location = {Milwaukee, Wisconsin, USA},
series = {SIGCSE '10}
}

@inproceedings{10.1145/3012430.3012493,
author = {Reimann, Daniela and Maday, Christiane},
title = {Smart textile objects and conductible ink as a context for arts based teaching and learning of computational thinking at primary school},
year = {2016},
isbn = {9781450347471},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3012430.3012493},
doi = {10.1145/3012430.3012493},
abstract = {The shaping of Smart Textile artefacts brings together a variety of learning activities, such as imagining, designing, drawing, constructing, wiring, programming, controlling, testing, debugging and presenting self-made, invented media objects, realized in project- and team based arrangements. A variety of human senses are addressed when pupils develop and sketch their project ideas to be realized. In the paper, we discuss the topic of self-made Smart Textile objects as a learning content for primary school level, towards the development of curriculum modules for project learning in the classroom as well as teacher training. It was developed in the 'Teachers Aids on Creating Contents for Learning Environments' TACCLE3 coding project.},
booktitle = {Proceedings of the Fourth International Conference on Technological Ecosystems for Enhancing Multiculturality},
pages = {31–35},
numpages = {5},
keywords = {art and design based learning, contextualized learning, cross-disciplinary learning, physical computing, smart textile, tangible media, wearables},
location = {Salamanca, Spain},
series = {TEEM '16}
}

@inproceedings{10.1145/3328778.3366797,
author = {Jocius, Robin and Joshi, Deepti and Dong, Yihuan and Robinson, Richard and Catet\'{e}, Veronica and Barnes, Tiffany and Albert, Jennifer and Andrews, Ashley and Lytle, Nicholas},
title = {Code, Connect, Create: The 3C Professional Development Model to Support Computational Thinking Infusion},
year = {2020},
isbn = {9781450367936},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3328778.3366797},
doi = {10.1145/3328778.3366797},
abstract = {Despite the increasing attention to infusing CT into middle and high school content area classrooms, there is a lack of information about the most effective practices and models to support teachers in their efforts to integrate disciplinary content and CT principles. To address this need, this paper proposes the Code, Connect and Create (3C) professional development (PD) model, which was designed to support middle and high school content area teachers in infusing computational thinking into their classrooms. To evaluate the model, we analyzed quantitative and qualitative data collected from Infusing Computing PD workshops designed for in-service science, math, English language arts, and social studies teachers located in two Southeastern states. Drawing on findings from our analysis of teacher-created learning segments, surveys, and interviews, we argue that the 3C professional development model supported shifts in teacher understandings of the role of computational thinking in content area classrooms, as well as their self-efficacy and beliefs regarding CT integration into disciplinary content. We conclude by offering implications for the use of this model to increase teacher and student access to computational thinking practices in middle and high school classrooms.},
booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
pages = {971–977},
numpages = {7},
keywords = {computational thinking, k-12 computing, professional development, teacher education},
location = {Portland, OR, USA},
series = {SIGCSE '20}
}

@article{10.1145/3415582,
author = {Wiese, Eliane S. and Linn, Marcia C.},
title = {“It Must Include Rules”: Middle School Students’ Computational Thinking with Computer Models in Science},
year = {2021},
issue_date = {April 2021},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {28},
number = {2},
issn = {1073-0516},
url = {https://doi.org/10.1145/3415582},
doi = {10.1145/3415582},
abstract = {When middle school students encounter computer models of science phenomenon in science class, how do they think those computer models work? Computer models operationalize real-world behaviors of selected variables, and can simulate interactions between the modeled elements through programmed instructions. This study explores how middle school students think about the high-level semantic meaning of those instructions, which we term rules. To investigate this aspect of students’ computational thinking, we developed the Computational Modeling Inventory and administered it to 253 7th grade students. The Inventory included three computer models that students interacted with during the assessment. In our sample, 99% of students identified at least one key rule underlying a model, but only 14% identified all key rules; 65% believed that model rules can contradict; and 98% could not distinguish between emergent patterns and behaviors that directly resulted from model rules. Despite these misconceptions, compared to the “typical” questions about the science content alone, questions about model rules elicited deeper science thinking, with 2--10 times more responses including reasoning about scientific mechanisms. These results suggest that incorporating computational thinking instruction into middle school science courses might yield deeper learning and more precise assessments around scientific models.},
journal = {ACM Trans. Comput.-Hum. Interact.},
month = apr,
articleno = {10},
numpages = {41},
keywords = {Middle school science, computer models, computer models in science}
}

@inproceedings{10.1145/3408877.3432558,
author = {Jocius, Robin and Joshi, Deepti and Albert, Jennifer and Barnes, Tiffany and Robinson, Richard and Catet\'{e}, Veronica and Dong, Yihuan and Blanton, Melanie and O'Byrne, Ian and Andrews, Ashley},
title = {The Virtual Pivot: Transitioning Computational Thinking PD for Middle and High School Content Area Teachers},
year = {2021},
isbn = {9781450380621},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3408877.3432558},
doi = {10.1145/3408877.3432558},
abstract = {In 2018 and 2019, Infusing Computing offered face-to-face summer PD workshops to support middle and high school teachers in integrating computational thinking into their classrooms through week-long summer PD workshops and academic-year support. Due to COVID-19, 151 teachers attended the Summer 2020 PD workshops in a week-long virtual conference format. In this paper, we describe Virtual Pivot: Infusing Computing, which employed emerging technology tools, pre-PD training, synchronous and asynchronous sessions, Snap! pair programming, live support, and live networking. Drawing on findings from participant interviews and post-PD surveys, we argue that three categories of changes (digital tools, formats, and supports for teacher engagement and collaboration) were effective in increasing participants' self-efficacy in teaching CT, supporting collaboration, and enabling participants to design CT-infused content-area lessons. We conclude by discussing how elements of this virtual PD can be replicated to increase teacher and student access to CT practices in middle and high school classrooms},
booktitle = {Proceedings of the 52nd ACM Technical Symposium on Computer Science Education},
pages = {1198–1204},
numpages = {7},
keywords = {computational thinking, disciplinary teaching, online learning, teacher professional development, virtual spaces},
location = {Virtual Event, USA},
series = {SIGCSE '21}
}

@inproceedings{10.1145/3078072.3084313,
author = {Gorson, Jamie and Patel, Nikita and Beheshti, Elham and Magerko, Brian and Horn, Michael},
title = {TunePad: Computational Thinking Through Sound Composition},
year = {2017},
isbn = {9781450349215},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3078072.3084313},
doi = {10.1145/3078072.3084313},
abstract = {Computational thinking skills will be important for the next generation of students. However, there is a disparity in the populations joining the field. Integrating computational thinking into artistic fields has shown to increase participation in computer science. In this paper, we present our initial design prototype for TunePad, a sound composition tablet application controlled by a block-based programming environment. TunePad is designed to introduce learners to computational thinking and to prepare them for text-based coding environments. From our preliminary testing, with children ages 7-14, we observed that our design actively engages learners and communicates how the programming blocks control the sounds being played. This testing is a prelude to more formal studies as we continue to improve the design and interface of TunePad. With this work, we intend to engage students in computational thinking who may not have otherwise been exposed, giving the opportunity to more people to enter the computer science field.},
booktitle = {Proceedings of the 2017 Conference on Interaction Design and Children},
pages = {484–489},
numpages = {6},
keywords = {broadening participation, computational thinking, cs education, music composition, steam},
location = {Stanford, California, USA},
series = {IDC '17}
}

@article{10.1145/3545179,
author = {Ragonis, Noa and Bukai, Ayelet and Hazzan, Orit},
title = {Selecting examples for CS courses: the case of a computational thinking MOOC},
year = {2022},
issue_date = {September 2022},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {13},
number = {3},
issn = {2153-2184},
url = {https://doi.org/10.1145/3545179},
doi = {10.1145/3545179},
journal = {ACM Inroads},
month = aug,
pages = {22–28},
numpages = {7}
}

@inproceedings{10.1145/3356393.3365371,
author = {Amatulli, Giuseppe and Sethi, Tushar},
title = {Geo computation with open-source software under Linux: Hands-on training for computational thinking and skills},
year = {2019},
isbn = {9781450369527},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3356393.3365371},
doi = {10.1145/3356393.3365371},
booktitle = {Proceedings of the 1st ACM SIGSPATIAL International Workshop on Geo-Computational Thinking in Education},
articleno = {4},
numpages = {2},
keywords = {computational thinking, geo computation courses, learning programming},
location = {Chicago, IL, USA},
series = {GeoEd'19}
}

@inproceedings{10.1145/3335055.3335070,
author = {Eriksson, Eva and Iversen, Ole Sejer and Baykal, G\"{o}k\c{c}e Elif and Van Mechelen, Maarten and Smith, Rachel and Wagner, Marie-Louise and Fog, Bjarke Vognstrup and Klokmose, Clemens and Cumbo, Bronwyn and Hjorth, Arthur and Musaeus, Line Have and Petersen, Marianne Graves and Bouvin, Niels Olof},
title = {Widening the scope of FabLearn Research: Integrating Computational Thinking, Design and Making},
year = {2019},
isbn = {9781450362665},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3335055.3335070},
doi = {10.1145/3335055.3335070},
abstract = {FabLearn has primarily been concerned with studies of digital fabrication technologies in education, however, we witness an increased interest in integrating other related topics such as computational thinking, digital design and empowerment as an integrated whole. In this paper, we present a five years design research program for digital fabrication, computational thinking and design, to highlight why the FabLearn community should embrace this wider agenda to accomplish its ultimate goal to encourage a new generation to critically and constructively engage in the design of digital technology. The contribution of this paper is a number of open questions and considerations regarding the scope of European FabLearn research that we hope the community will consider and that might give rise to further discussions.},
booktitle = {Proceedings of the FabLearn Europe 2019 Conference},
articleno = {15},
numpages = {9},
keywords = {Computational thinking, Design, Education, FabLearn, Making},
location = {Oulu, Finland},
series = {FabLearn Europe '19}
}

@article{10.1145/3418291,
author = {Liu, Yuhang and Sun, Xian-He and Wang, Yang and Bao, Yungang},
title = {HCDA: from computational thinking to a generalized thinking paradigm},
year = {2021},
issue_date = {May 2021},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {64},
number = {5},
issn = {0001-0782},
url = {https://doi.org/10.1145/3418291},
doi = {10.1145/3418291},
abstract = {As a new era in computing emerges, so too must our fundamental thinking patterns.},
journal = {Commun. ACM},
month = apr,
pages = {66–75},
numpages = {10}
}

@inproceedings{10.1145/3374920.3374972,
author = {Yu, Junnan and Zheng, Clement and Tamashiro, Mariana Aki and Gonzalez-millan, Christopher and Roque, Ricarose},
title = {CodeAttach: Engaging Children in Computational Thinking Through Physical Play Activities},
year = {2020},
isbn = {9781450361071},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3374920.3374972},
doi = {10.1145/3374920.3374972},
abstract = {Many toys and kits have been developed to help cultivate computational thinking in young children in the past decade. However, a majority of these kits ask children to move a robot/character around a limited space, constraining what could otherwise be generative and creative learning experiences into pre-defined activities and challenges with uniform outcomes. How can we expand what children can program and how they can create code? In this work, we present CodeAttach, a learning kit designed to engage young children in computational thinking through physical play activities. CodeAttach consists of three parts: (1) an interactive hardware device, (2) a mobile application to program the device, and (3) supporting materials for different play activities. With CodeAttach, children can attach the device to the supporting materials or other everyday objects to create their own props for physical play. The device offers different inputs and outputs and supports children to change the rules of existing physical activities or create new activities by programming this device. We outline the principles guiding the design of CodeAttach, its initial development process, and insights from early playtest with young kids and expert researchers.},
booktitle = {Proceedings of the Fourteenth International Conference on Tangible, Embedded, and Embodied Interaction},
pages = {453–459},
numpages = {7},
keywords = {coding kit, physical play, young children},
location = {Sydney NSW, Australia},
series = {TEI '20}
}

@article{10.1145/3263209,
author = {Peckham, Joan},
title = {Session details: Panel: computational thinking: on weaving it in},
year = {2009},
issue_date = {September 2009},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {41},
number = {3},
issn = {0097-8418},
url = {https://doi.org/10.1145/3263209},
doi = {10.1145/3263209},
journal = {SIGCSE Bull.},
month = aug
}

@inproceedings{10.1145/3257533,
author = {Peckham, Joan},
title = {Session details: Panel: computational thinking: on weaving it in},
year = {2009},
isbn = {9781605583815},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3257533},
doi = {10.1145/3257533},
booktitle = {Proceedings of the 14th Annual ACM SIGCSE Conference on Innovation and Technology in Computer Science Education},
location = {Paris, France},
series = {ITiCSE '09}
}

@inproceedings{10.1145/3230977.3230979,
author = {Rich, Kathryn M. and Binkowski, T. Andrew and Strickland, Carla and Franklin, Diana},
title = {Decomposition: A K-8 Computational Thinking Learning Trajectory},
year = {2018},
isbn = {9781450356282},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3230977.3230979},
doi = {10.1145/3230977.3230979},
abstract = {As new initiatives in computational thinking and computer science (CS/CT) are being developed and deployed, it is important to identify and understand the key concepts that are essential for student learning. In this study, we present the phases of construction of a learning trajectory (LT) for Decomposition in the context of CS/CT in K-8 education. From an extensive literature review, 63 learning goals representative of decomposition understanding and practices were identified and synthesized into 13 consensus goals. The focus of this paper is how relationships between these consensus goals were identified and used to place the goals into a learning trajectory. We discuss the theories and frameworks that guided the trajectory's construction as well as the methodology and justifications used to draw pathways through the trajectory in each phase. Finally, we discuss potential uses for the trajectory and suggest further explorations for decomposition in CS/CT.},
booktitle = {Proceedings of the 2018 ACM Conference on International Computing Education Research},
pages = {124–132},
numpages = {9},
keywords = {computational thinking, decomposition, k-8},
location = {Espoo, Finland},
series = {ICER '18}
}

@inproceedings{10.1145/3265757.3265790,
author = {Van de Staey, Zimcke and Verlinde, Tobias and Demoen, Bart and Martens, Bern},
title = {Co-de: an online learning platform for computational thinking},
year = {2018},
isbn = {9781450365888},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3265757.3265790},
doi = {10.1145/3265757.3265790},
abstract = {Computational thinking (CT) has gained wide recognition as an important K-12 educational goal, initially in the context of computer science (CS), and more recently also beyond CS. The development of CT teaching materials and approaches is therefore of prime importance. Here, an online learning platform for CT, named Co-De, is presented. It addresses five major aspects of CT explicitly, in the context of a variety of computational problems. Students using Co-De, work through classes, individually or in teams, doing a mixture of unplugged and online exercises and quizzes, as well as some programming. Teachers can fine-tune the default Co-De learning paths to cater for their specific groups of students and/or specific learning goals. Co-De is implemented on top of the open-source learning platform Moodle. It can be used directly at a central server, or a customised version can be installed and used locally.},
booktitle = {Proceedings of the 13th Workshop in Primary and Secondary Computing Education},
articleno = {32},
numpages = {2},
keywords = {computational thinking, computing education, learning tools, secondary education},
location = {Potsdam, Germany},
series = {WiPSCE '18}
}

@inproceedings{10.1145/3130859.3131335,
author = {Goyal, Sidhant and Chopra, Simran and Mohanan, Dileep},
title = {CodeFruits: Teaching Computational Thinking Skills Through Hand Gestures},
year = {2017},
isbn = {9781450351119},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3130859.3131335},
doi = {10.1145/3130859.3131335},
abstract = {Researchers in the past have explored several interactive tools and techniques to teach students abstract concepts of programming and computational thinking. They have explored playful and collaborative way to do so which includes text-based, visual or tangible programming toolkits. In CodeFruits, we are exploring hand gestures as an input interaction mechanism. These hand gestures represent different elements of programming languages such as functions and parameters. We have developed a gesture based interactive game which implicitly helps K-12 students to learn abstract concepts of computational thinking and write a computational code in an easier, playful and engaging way.},
booktitle = {Extended Abstracts Publication of the Annual Symposium on Computer-Human Interaction in Play},
pages = {291–298},
numpages = {8},
keywords = {computational thinking, games, hand gestures, k-12 students},
location = {Amsterdam, The Netherlands},
series = {CHI PLAY '17 Extended Abstracts}
}

@inproceedings{10.1145/3241815.3241886,
author = {Colombi, Alessandro and Fronza, Ilenia and Pahl, Claus and Basso, Demis},
title = {COCONATS: Combining Computational Thinking Didactics and Software Engineering in K-12},
year = {2018},
isbn = {9781450359542},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3241815.3241886},
doi = {10.1145/3241815.3241886},
abstract = {We report the status of the pre-experimental phase of a project called "Combining Computational Thinking Didactics and Software Engineering in K-12" (COCONATS), which aims at combining computational thinking and software engineering didactics in order to facilitate the acquisition of software engineering principles in K-12, while promoting the development of life-skills.},
booktitle = {Proceedings of the 19th Annual SIG Conference on Information Technology Education},
pages = {162},
numpages = {1},
keywords = {computational thinking, k-12, software engineering},
location = {Fort Lauderdale, Florida, USA},
series = {SIGITE '18}
}

@inproceedings{10.1145/3152832.3156620,
author = {Root, Erika and Steinkamp, Maren and Coldewey, Beatrice and Poloczek, Christin and Scharnowski, Frederik and Kettner, Mark and Koelle, Marion and Ananthanarayan, Swamy and Willms, Marlon},
title = {Grasping algorithms: exploring toys that teach computational thinking},
year = {2017},
isbn = {9781450353786},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3152832.3156620},
doi = {10.1145/3152832.3156620},
abstract = {Computational thinking has received increased attention over the past several years and is considered by many to be a fundamental and necessary literacy for children. One approach to teaching this skill has been through tangible programming since it facilitates intuitive interaction with children. In this paper, we introduce CodeTrain and CodeBox, two motorized toys whose behavior can be programmed through wooden building blocks without the use of a computer, tablet, or screen-based interface. The goal with both these designs is to foster playful exploration of computational thinking in pre-adolescent children through tangible objects. We describe the design process from the conceptual design to the functional prototype. Furthermore, we present first impressions of the prototypes from a pilot study and highlight some lessons learned from our first iteration.},
booktitle = {Proceedings of the 16th International Conference on Mobile and Ubiquitous Multimedia},
pages = {387–392},
numpages = {6},
keywords = {children, computational thinking, computational toys, playfully interaction, tangible programming},
location = {Stuttgart, Germany},
series = {MUM '17}
}

@article{10.1145/3343445,
author = {Shah, Vipul},
title = {CSpathshala: bringing computational thinking to schools},
year = {2019},
issue_date = {November 2019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {62},
number = {11},
issn = {0001-0782},
url = {https://doi.org/10.1145/3343445},
doi = {10.1145/3343445},
journal = {Commun. ACM},
month = oct,
pages = {54–55},
numpages = {2}
}

@inproceedings{10.1145/3304221.3319786,
author = {Lytle, Nicholas and Catet\'{e}, Veronica and Boulden, Danielle and Dong, Yihuan and Houchins, Jennifer and Milliken, Alexandra and Isvik, Amy and Bounajim, Dolly and Wiebe, Eric and Barnes, Tiffany},
title = {Use, Modify, Create: Comparing Computational Thinking Lesson Progressions for STEM Classes},
year = {2019},
isbn = {9781450368957},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3304221.3319786},
doi = {10.1145/3304221.3319786},
abstract = {Computational Thinking (CT) is being infused into curricula in a variety of core K-12 STEM courses. As these topics are being introduced to students without prior programming experience and are potentially taught by instructors unfamiliar with programming and CT, appropriate lesson design might help support both students and teachers. "Use-Modify-Create" (UMC), a CT lesson progression, has students ease into CT topics by first "Using" a given artifact, "Modifying" an existing one, and then eventually "Creating" new ones. While studies have presented lessons adopting and adapting this progression and advocating for its use, few have focused on evaluating UMC's pedagogical effectiveness and claims. We present a comparison study between two CT lesson progressions for middle school science classes. Students participated in a 4-day activity focused on developing an agent-based simulation in a block-based programming environment. While some classrooms had students develop code on days 2-4, others used a scaffolded lesson plan modeled after the UMC framework. Through analyzing student's exit tickets, classroom observations, and teacher interviews, we illustrate differences in perception of assignment difficulty from both the students and teachers, as well as student perception of artifact "ownership" between conditions.},
booktitle = {Proceedings of the 2019 ACM Conference on Innovation and Technology in Computer Science Education},
pages = {395–401},
numpages = {7},
keywords = {computational thinking, lesson design, modify-create},
location = {Aberdeen, Scotland Uk},
series = {ITiCSE '19}
}

@inproceedings{10.1145/1734263.1734357,
author = {Repenning, Alexander and Webb, David and Ioannidou, Andri},
title = {Scalable game design and the development of a checklist for getting computational thinking into public schools},
year = {2010},
isbn = {9781450300063},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1734263.1734357},
doi = {10.1145/1734263.1734357},
abstract = {Game design appears to be a promising approach to interest K-12 students in Computer Science. Unfortunately, balancing motivational and educational concerns is truly challenging. Over a number of years, we have explored how to achieve a functional balance by creating a curriculum that combines increasingly complex game designs, computational thinking patterns and authoring tools. Scalable Game Design is a research project exploring new strategies of how to scale up from after school and summer programs into required curriculum of public schools through game design approaches. The project includes inner city schools, remote rural areas and Native American communities. A requirement checklist of computational thinking tools regarding curriculum, teacher training, standards and authoring tools has been developed and is being tested with thousands of students.},
booktitle = {Proceedings of the 41st ACM Technical Symposium on Computer Science Education},
pages = {265–269},
numpages = {5},
keywords = {computational science, computational thinking, game design},
location = {Milwaukee, Wisconsin, USA},
series = {SIGCSE '10}
}

@inproceedings{10.1145/3328778.3372651,
author = {Ulzii-Orshikh, Nasanbayar and Dougherty, John},
title = {Iteration with Intention: Project-Based Learning of Computational Thinking},
year = {2020},
isbn = {9781450367936},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3328778.3372651},
doi = {10.1145/3328778.3372651},
abstract = {Globally, there is a growing interest in preparing students to develop fluency with computing. The K-12 Computer Science Framework states that by the end of 12th grade, students should be able to create computational artifacts through continuous testing and refining of their products considering unique perspectives of peers. It has been suggested that creative project experiences with iteration based on feedback encourage the development of these computational skills. However, traditional classrooms are more focused on getting the correct answer to standardized questions. Countries such as Mongolia may have particular challenges in offering students opportunities to develop projects, due to pressure from standardized exams for college entry and lack of teachers prepared to lead computational project-based learning (Uyanga, 2006). This is an exploratory study of an 8-session/16-hour intervention course that provided 13 high-school students in Mongolia an opportunity to create, share, and iterate on computational projects. Measurements included assessment of student attitudes and evaluated how they viewed their participation and learning in the course through pre- and post-surveys, analyzing their responses with qualitative coding. Results suggest that the opportunity to create projects was novel for these students; attitudes regarding feedback changed, and iteration was viewed as key in creating computational artifacts. The analysis also highlights the urgency of further research on localizing the K-12 Computer Science Framework throughout different countries to foster these skills and developing structures that allow students to embrace the freedom of project-based learning.},
booktitle = {Proceedings of the 51st ACM Technical Symposium on Computer Science Education},
pages = {1289},
numpages = {1},
keywords = {computational thinking, creativity, feedback, iteration, localization, project-based learning, scratch},
location = {Portland, OR, USA},
series = {SIGCSE '20}
}

@inproceedings{10.1145/3337722.3337768,
author = {Jiang, Xina and Harteveld, Casper and Huang, Xinyuan and Fung, Anthony Y. H.},
title = {The computational puzzle design framework: a design guide for games teaching computational thinking},
year = {2019},
isbn = {9781450372176},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3337722.3337768},
doi = {10.1145/3337722.3337768},
abstract = {Games have been designed to foster children's computational thinking (CT) skills, which is widely recognized as a key ability that should be mastered in this computing-driven era. Because learning coding skills is cognitively difficult and uninvolving for novices and it is recommended to learn CT concepts first, many educational games have been developed to teach CT in a non-coding environment. However, despite the breadth of such games and the demand for it, little is known about how to design such games or why such games are designed in a particular way. To address this gap, this paper presents a design framework that describes the building blocks for developing (non-coding) gameplay elements in games teaching CT. The framework focuses specifically on computational problem-solving because this is where games can specifically aid with. We illustrate the design framework through LittleWorld, a mobile game that teaches CT concepts through insects.},
booktitle = {Proceedings of the 14th International Conference on the Foundations of Digital Games},
articleno = {29},
numpages = {11},
keywords = {computational problem-solving, computational thinking, educational games, game design, games for teaching CT, preschoolers},
location = {San Luis Obispo, California, USA},
series = {FDG '19}
}

@inproceedings{10.1145/3406865.3418336,
author = {Gaikwad, Snehalkumar 'Neil' S.},
title = {Beyond Boundaries: Towards Symbiotic Relationship Between Ecological Arts and Computational Thinking for Sustainability},
year = {2020},
isbn = {9781450380591},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3406865.3418336},
doi = {10.1145/3406865.3418336},
abstract = {In today's Anthropocene era, human-and-climate induced sustainability challenges threaten the livelihood of vulnerable communities across the planet. To mitigate the risks of sustainability threats, data-and-theory driven scientific models, artistic practices, and environment designs play a critical role. However, these methods alone fail to reach a broader audience and translate into public discourse for participatory collective action. In this paper, we present Beyond Boundaries, a renaissance that re-envisions the relationship between ecological arts and computational thinking to contextualize threats to sustainability at regional and global scales. We establish an integrated framework combining Earth remote sensing satellite time-series, half a decade of ecological arts, and a public exhibition to curate the symbiotic relationship between arts and science. Beyond Boundaries sheds new light on how synergistic associations among disciplines can inspire scientific inquiry, artistic imaginations, and civic engagement-and-discourse for sustainability.},
booktitle = {Companion Publication of the 2020 Conference on Computer Supported Cooperative Work and Social Computing},
pages = {257–262},
numpages = {6},
keywords = {and civic engagement, and society, computations, data science, ecological arts, environmental justice, remote sensing, sustainability},
location = {Virtual Event, USA},
series = {CSCW '20 Companion}
}

@inproceedings{10.1145/3421590.3421607,
author = {Spieler, Bernadette and Kem\'{e}ny, Ferenc and Landerl, Karin and Binder, Bernd and Slany, Wolfgang},
title = {The learning value of game design activities: association between computational thinking and cognitive skills},
year = {2020},
isbn = {9781450387590},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3421590.3421607},
doi = {10.1145/3421590.3421607},
abstract = {Game design activities support young people to acquire Computational Thinking (CT) skills in an entertaining way. While the importance of CT is increasing, we still lack empirical data on how cognitive functions support learning to program. The current study is a step towards bridging this gap. We tested 48 participants aged 10-15 during summer courses to see how programming skills are associated with cognitive processes. Descriptive statistics of gaming and design elements of the participants' final projects were correlated with measures of working memory, creativity, and arithmetic. Results show that different concepts of CT applied in games were associated with separate cognitive measures. The number of design elements (shape and structure of the game, sound, visual design) correlated with both working memory and arithmetic skills; the number of game elements (interactivity, mechanics, dynamics, aesthetics) correlated with creativity; whereas the complexity of the project was only predicted by age. The overall evaluation of the project was associated with age and arithmetic skills. Since the different concepts of CT were predicted by different cognitive skills, the current study provides empirical evidence that CT is not a single homogenous skill, but a set of subskills, with each part loading on different cognitive functions.},
booktitle = {Proceedings of the 15th Workshop on Primary and Secondary Computing Education},
articleno = {19},
numpages = {4},
keywords = {arithmetic skills, computational thinking skills, creativity, game design strategies, working memory},
location = {Virtual Event, Germany},
series = {WiPSCE '20}
}

@inproceedings{10.1145/3392561.3394634,
author = {India, Gesu and Ramakrishna, Geetha and Pal, Joyojeet and Swaminathan, Manohar},
title = {Conceptual Learning through Accessible Play: Project Torino and Computational Thinking for Blind Children in India},
year = {2020},
isbn = {9781450387620},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3392561.3394634},
doi = {10.1145/3392561.3394634},
abstract = {Project Torino is a physical programming environment designed for teaching computational thinking (CT) to school children in the UK, regardless of the level of vision. We introduced Project Torino to children in three schools for the blind in Bangalore, India as a toy for playing with songs, rhymes, and stories. We present the results of 103 semi-structured play sessions spread over three months with 12 children (2 girls, 10 boys) with diverse backgrounds. We found that children progressed from playing with pre-connected examples, to making changes, to actively participating in what items are played. Engaging the children in conversation while they played, we established that the teams had grasped three basic concepts of computational thinking--flow of control, variables, and loops, without any explicit instructions towards learning them. We propose that play-based approaches can be successfully used with low resource overhead to introduce fundamental concepts of CT.},
booktitle = {Proceedings of the 2020 International Conference on Information and Communication Technologies and Development},
articleno = {6},
numpages = {11},
keywords = {Education/Learning, Empirical study that tells us about how people use a system, Individuals with Disabilities &amp; Assistive Technologies, User Experience Design},
location = {Guayaquil, Ecuador},
series = {ICTD '20}
}

@inproceedings{10.1145/3287324.3287431,
author = {Dong, Yihuan and Catete, Veronica and Jocius, Robin and Lytle, Nicholas and Barnes, Tiffany and Albert, Jennifer and Joshi, Deepti and Robinson, Richard and Andrews, Ashley},
title = {PRADA: A Practical Model for Integrating Computational Thinking in K-12 Education},
year = {2019},
isbn = {9781450358903},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3287324.3287431},
doi = {10.1145/3287324.3287431},
abstract = {One way to increase access to education on computing is to integrate computational thinking (CT) into K12 disciplinary courses. However, this challenges teachers to both learn CT and decide how to best integrate CT into their classes. In this position paper, we present PRADA, an acronym for Pattern Recognition, Abstraction, Decomposition, and Algorithms, as a practical and understandable way of introducing the core ideas of CT to non-computing teachers. We piloted the PRADA model in two, separate, week-long professional development workshops designed for in-service middle and high school teachers and found that the PRADA model supported teachers in making connections between CT and their current course material. Initial findings, which emerged from the analysis of teacher-created learning materials, survey responses, and focus group interviews, indicate that the PRADA model supported core content teachers in successfully infusing CT into their existing curricula and increased their self-efficacy in CT integration.},
booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
pages = {906–912},
numpages = {7},
keywords = {computational thinking, professional development},
location = {Minneapolis, MN, USA},
series = {SIGCSE '19}
}

@inproceedings{10.1145/3078072.3084306,
author = {Eloy, Adelmo Antonio da Silva and Martins, Amilton Rodrigues Quadros and Pazinato, Ariane Mileidi and Lukjanenko, Maria de Fatima S. Polesi and Lopes, Roseli de Deus},
title = {Programming Literacy: Computational Thinking in Brazilian Public Schools},
year = {2017},
isbn = {9781450349215},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3078072.3084306},
doi = {10.1145/3078072.3084306},
abstract = {Bringing Programming to K-12 Education has been a strong tendency in Brazil and in the world. In this work-in-progress, we describe an experience in teacher training with the goal of promoting the practice of programming and the development of computational thinking in students of Brazilian public schools, through an initiative called Programming Literacy. Here we present strategies used in the implementation of the initiative, design of a curricular structure and training program, as well as monitoring and evaluation strategies. The results and findings of the initiative, involving more than 500 students from four cities in 2016, are shared as well as the perspectives on next steps.},
booktitle = {Proceedings of the 2017 Conference on Interaction Design and Children},
pages = {439–444},
numpages = {6},
keywords = {computational thinking, computer science education, k-12 education, programming, teacher training},
location = {Stanford, California, USA},
series = {IDC '17}
}

@inproceedings{10.1145/3450522.3451250,
author = {Schwartz, Lou and Maquil, Val\'{e}rie and Johannsen, Laurence and Moll, Christian},
title = {Enseigner la pens\'{e}e informatique avec Kniwwelino : \'{E}tude exploratoire de terrain en milieu scolaire: Teaching Computational Thinking with Kniwwelino: Exploratory Field Study in School Settings},
year = {2022},
isbn = {9781450383622},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3450522.3451250},
doi = {10.1145/3450522.3451250},
abstract = {We are presenting the results of a study carried out with six primary and secondary schools in Luxembourg, pilots in introducing the Kniwwwelino Classroom kit (KCK) in their teaching of programming and computational thinking to children. The aim of the study was to explore: (1) how teachers appropriate this kind of tool for teaching computational thinking and programming, (2) whether the KCK is suitable for this purpose, and (3) the user experience of the KCK. To these ends, we used several data collection tools through a mainly qualitative exploratory approach: semi-guided interviews, diaries and several questionnaires. We have learned that: (1) the KCK is versatile enough to adapt to different environments, objectives and pedagogical approaches and thus offers a great deal of freedom to teachers, (2) the playful and tangible approach of the KCK seems more adapted to introducing programming and enables pupils to develop problem-solving, collaboration and creativity skills, and (3) if the user experience has been positive for both teachers and students, this first KCK prototype is still addressing intermediate computer-skilled teachers.},
booktitle = {Proceedings of the 32nd Conference on l'Interaction Homme-Machine},
articleno = {6},
numpages = {11},
keywords = {Computational Thinking, Field Studies, Interactive Learning Environments, K-12 Education, Programming},
location = {Virtual Event, France},
series = {IHM '21}
}

@inproceedings{10.1145/3304221.3319772,
author = {Dong, Yihuan and Catet\'{e}, Veronica and Lytle, Nicholas and Isvik, Amy and Barnes, Tiffany and Jocius, Robin and Albert, Jennifer and Joshi, Deepti and Robinson, Richard and Andrews, Ashley},
title = {Infusing Computing: Analyzing Teacher Programming Products in K-12 Computational Thinking Professional Development},
year = {2019},
isbn = {9781450368957},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3304221.3319772},
doi = {10.1145/3304221.3319772},
abstract = {In summer 2018, we conducted two week-long professional development workshops for 116 middle and high school teachers interested in infusing computational thinking (CT) into their classrooms. Teachers learned to program in Snap!, connect CT to their disciplines, and create infused CT learning segments for their classes. This paper investigates the extent to which teachers were able to successfully infuse CT skills of pattern recognition, abstraction, decomposition, and algorithms into their learning products.In this work, we analyzed 58 teacher-designed programming products to look for common characteristics, such as project type, intended coding requirements for their students, and code features/functionality. Teacher-created products were classified into five types: animation, interactive story, quiz, intended game, and simulation/exploration tools. Coding requirements varied from using and/or explaining provided code, modifying existing code, programming with starter code, to building entire programs. Products were classified according to the extent to which they involved sprite manipulation, questions/answers, event handling, drawing, and control blocks. We found that teachers from different disciplines created products that vary in type, coding requirements, and features to suit their specific needs. Moreover, we found relationships between discipline, project type, and the required coding teachers expected students to do.Our results inform future Infusing Computing Professional Development (PD) to provide more targeted training to support different teacher needs.},
booktitle = {Proceedings of the 2019 ACM Conference on Innovation and Technology in Computer Science Education},
pages = {278–284},
numpages = {7},
keywords = {computational thinking, k-12, professional development, programming},
location = {Aberdeen, Scotland Uk},
series = {ITiCSE '19}
}

@inproceedings{10.1145/3141880.3143782,
author = {Vrieler, Tina},
title = {Digital capital: a platform for developing computational thinking},
year = {2017},
isbn = {9781450353014},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3141880.3143782},
doi = {10.1145/3141880.3143782},
abstract = {The introduction of computational thinking (CT) and computer science (CS) in the K-12 curricula highlights the need to understand young learners' various perceptions and attitudes towards CT and CS. To address this challenge we draw on the work of Bourdieu's capital and Archer et al.'s science capital to propose a new capital "digital capital" as a theoretical framework. We believe that a study on young people's development of digital capital is long overdue and can give a good indication of pupils' potential for developing CT skills, as well as CS aspirations in the future.},
booktitle = {Proceedings of the 17th Koli Calling International Conference on Computing Education Research},
pages = {205–206},
numpages = {2},
keywords = {bourdieu, digital capital, science capital},
location = {Koli, Finland},
series = {Koli Calling '17}
}

@inproceedings{10.1145/3213818.3213824,
author = {Carlborg, Niklas and Tyr\'{e}n, Markus and Heath, Carl and Eriksson, Eva},
title = {The Scope of Autonomy Model: Development of Teaching Materials for Computational Thinking in Primary School},
year = {2018},
isbn = {9781450353717},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3213818.3213824},
doi = {10.1145/3213818.3213824},
abstract = {During the 21st century there has been an increasing interest in the field of computational thinking as a consequence of the ever faster technical development. However, educating future generations in programming and computational thinking is not trivial. Many different platforms and teaching approaches can be used for this purpose. Inspired by the UK initiative with BBC micro:bit, this paper strives to identify what may be important to consider when designing teaching materials with the micro:bit for training Swedish primary school pupils' computational thinking skills relating to mathematical and technical school subjects. This has been investigated in an iterative process, by conducting 21 workshops with the goal to support primary school teachers in developing micro:bit teaching materials. The contribution of this paper is the Scope of autonomy model, which is based on the relation between pupils learning potential, their risk of feeling overwhelmed and the amount of choices provided in exercises. The model aim to support teachers in developing material for teaching programming and computational thinking in accordance with the new curriculum.},
booktitle = {Proceedings of the Conference on Creativity and Making in Education},
pages = {37–44},
numpages = {8},
keywords = {Autonomy, Computational thinking, Education, Micro:bit, Teaching},
location = {Trondheim, Norway},
series = {FabLearn Europe'18}
}

@inproceedings{10.1145/3291280.3291787,
author = {Katchapakirin, Kantinee and Anutariya, Chutiporn},
title = {An Architectural Design of ScratchThAI: A conversational agent for Computational Thinking Development using Scratch},
year = {2018},
isbn = {9781450365680},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3291280.3291787},
doi = {10.1145/3291280.3291787},
abstract = {Scratch is a visual, block-based programming language, adopted as a computational thinking development tool in elementary education among many countries. Thailand has also recently included Scratch as part of the computing science course in its basic education. However, Thailand is facing a shortage of ICT teachers who are skillful in Scratch programming, especially in small provincial schools. This research aims to overcome the shortage by developing ScratchThAI, a Scratch tutorial chatbot. It is designed to assist young learners directly through a messaging platform. By giving supports through a textual conversation, more relevant advice, knowledge, and resources could be provided precisely. Different levels of each computational thinking concept are extracted and evaluated by the designed assessment algorithm. Extra predefined exercises are assigned based on the analyzed learner's strengths and weaknesses in order to actively improving the learner's understanding. Moreover, gamification is incorporated to engage and motivate young learners in computational thinking development.},
booktitle = {Proceedings of the 10th International Conference on Advances in Information Technology},
articleno = {7},
numpages = {7},
keywords = {AI in Education, Computational thinking development, Educational Technology, Game-Based Learning, Personalized Learning, Scratch Tutoring Chatbot, Virtual Scratcher, Virtual Teaching Assistant},
location = {Bangkok, Thailand},
series = {IAIT '18}
}

@inproceedings{10.1145/3291279.3339400,
author = {Kafai, Yasmin and Proctor, Chris and Lui, Debora},
title = {From Theory Bias to Theory Dialogue: Embracing Cognitive, Situated, and Critical Framings of Computational Thinking in K-12 CS Education},
year = {2019},
isbn = {9781450361859},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3291279.3339400},
doi = {10.1145/3291279.3339400},
abstract = {The increased interest in promoting CS education for all has been coalescing around the idea of "computational thinking." Several framings for promoting computational thinking in K-12 education have been proposed by practitioners and researchers that each place different emphases on either (1) skill and competence building, (2) creative expression and participation, or (3) social justice and ethics. We review each framing and how the framings structure the theory space of computational thinking. We then discuss how CS education can leverage the explanatory potential that each framing offers to the implementation and evaluation of learning, teaching, and tools in computing education. Our goal is to help CS education researchers, teachers, and designers unpack and leverage the complexities of this theory space (rather than ignoring it) while also addressing broader educational concerns regarding diversity, providing new directions for how students and teachers can actively participate in designing their digital futures, and directing current computing education efforts towards a more humanistic orientation.},
booktitle = {Proceedings of the 2019 ACM Conference on International Computing Education Research},
pages = {101–109},
numpages = {9},
keywords = {computational thinking, literacy, pedagogy, programming},
location = {Toronto ON, Canada},
series = {ICER '19}
}

@inproceedings{10.1145/2184512.2184547,
author = {Jenkins, Janet T. and Jerkins, James A. and Stenger, Cynthia L.},
title = {A plan for immediate immersion of computational thinking into the high school math classroom through a partnership with the Alabama math, science, and technology initiative},
year = {2012},
isbn = {9781450312035},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2184512.2184547},
doi = {10.1145/2184512.2184547},
abstract = {This paper describes a design for an immediate immersion of computational thinking into current high school math classrooms in Alabama. Most schools in our region have eliminated computer science classes from the curriculum. Alabama has an existing state initiative to improve mathematics, science and technology education in K-12. The Alabama Math, Science, and Technology Initiative (AMSTI) emphasizes learning by doing, with hands-on, activity based instruction. We have developed an instructional treatment that uses strategically designed computer exercises to push students to form the mental foundation necessary for abstraction and generalization. We selected popular problems from the AMSTI mathematics curriculum and applied our instructional design.The first step we took in implementing our plan for reintroducing computational thinking into the secondary schools was to conduct a workshop for math education leaders. This training was sponsored and supported by AMSTI. Results from the workshop included demonstrating to a select group of math education leaders that computer programming could be easily integrated with the AMSTI math curriculum and could be used to meet the educational goals of the initiative and the educators.},
booktitle = {Proceedings of the 50th Annual ACM Southeast Conference},
pages = {148–152},
numpages = {5},
keywords = {Python, abstraction, computational thinking},
location = {Tuscaloosa, Alabama},
series = {ACMSE '12}
}

@inproceedings{10.1145/2818314.2818315,
author = {Selby, Cynthia C.},
title = {Relationships: computational thinking, pedagogy of programming, and Bloom's Taxonomy},
year = {2015},
isbn = {9781450337533},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2818314.2818315},
doi = {10.1145/2818314.2818315},
abstract = {This study explores the relationship between computational thinking, teaching programming, and Bloom's Taxonomy. Data is collected from teachers, academics, and professionals, purposively selected because of their knowledge of the topics of problem solving, computational thinking, or the teaching of programming. This data is analysed following a grounded theory approach. A computational thinking taxonomy is developed. The relationships between cognitive processes, the pedagogy of programming, and the perceived levels of difficulty of computational thinking skills are illustrated by a model.Specifically, a definition for computational thinking is presented. The skills identified are mapped to Bloom's Taxonomy: Cognitive Domain. This mapping concentrates computational skills at the application, analysis, synthesis, and evaluation levels. Analysis of the data indicates that abstraction of functionality is less difficult than abstraction of data, but both are perceived as difficult. The most difficult computational thinking skill is reported as decomposition. This ordering of difficulty for learners is a reversal of the cognitive complexity predicted by Bloom's model. The plausibility of this inconsistency is explored.The taxonomy, model, and the other results of this study may be used by educators to focus learning onto the computational thinking skills acquired by the learners, while using programming as a tool. They may also be employed in the design of curriculum subjects, such as ICT, computing, or computer science.},
booktitle = {Proceedings of the Workshop in Primary and Secondary Computing Education},
pages = {80–87},
numpages = {8},
keywords = {Bloom's Taxonomy, Computational thinking, pedagogy, programming},
location = {London, United Kingdom},
series = {WiPSCE '15}
}

@inproceedings{10.1145/3287324.3293835,
author = {Nguyen, N. Rich and Poliakova, Iuliia and Meduri, Sahithi and Hutcheson, Joshua and Ke, Ryan},
title = {CodeNC: Integrating Computational Thinking into K-12 Instructional Activities using Animated Videos},
year = {2019},
isbn = {9781450358903},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3287324.3293835},
doi = {10.1145/3287324.3293835},
abstract = {Increasing the representation of minorities in computer science (CS) has become a national priority. One of the many reasons minority students nationwide choose not to study CS is that they often lack mentors and role models to encourage them early in their learning. In her seminal article, Jeannette Wing argues that computational thinking (CT) is an emerging essential skill that should become an integral part of K-12 education. However, a big issue facing this initiative is that many K-12 teachers find themselves lack (1) relevant materials, (2) systematic training, and (3) a supportive community. The democratization of media, such as photos and videos, has provided a great variety of options to educate a broad audience on myriad topics. In this poster, we will describe the challenges and successes of using animated videos including its beauty, soundness, and utility as critical elements in establishing a strong CT comprehension while engaging K-12 teachers in a non-threatening way. Using a process of iterative design, we have found ways to integrate CT concepts in six non-CS disciplines in the K-12 curriculum. The teachers who have collaborated with us respond positively that this design approach provides them with a greater comprehension of the CT concepts while giving them exciting instructional activities. Therefore, this poster may be of interest to any CS educator who wishes to improve the engagement of K-12 teachers while sustaining a CT training program at their institution.},
booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
pages = {1276},
numpages = {1},
keywords = {animated videos, computational thinking, instructional activities, k-12},
location = {Minneapolis, MN, USA},
series = {SIGCSE '19}
}

@inproceedings{10.1145/2800835.2800871,
author = {Han, Ahyoung and Kim, Jihyun and Wohn, Kwangyun},
title = {Entry: visual programming to enhance children's computational thinking},
year = {2015},
isbn = {9781450335751},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2800835.2800871},
doi = {10.1145/2800835.2800871},
abstract = {This paper introduces Entry, a visual programming application which is developed to facilitate children's computational thinking. As an HTML5-based visual programming platform, it provides children and beginners with an integrated environment in which they not only learn programming in an easy and fun way but also create, post and share their own programs. This will enhance children's computational thinking and is expected to serve as an effective learning tool for the STEAM education. We have held a workshop with 16 elementary school teachers and conducted a preliminary survey to illuminate Entry's 1) potential educational implications on logical thinking, problem solving and creativity, and 2) applicability in the field of education. This paper is expected to contribute to future research on programming education and STEAM education programs for children.},
booktitle = {Adjunct Proceedings of the 2015 ACM International Joint Conference on Pervasive and Ubiquitous Computing and Proceedings of the 2015 ACM International Symposium on Wearable Computers},
pages = {73–76},
numpages = {4},
keywords = {computational thinking, education, visual programming},
location = {Osaka, Japan},
series = {UbiComp/ISWC'15 Adjunct}
}

@inproceedings{10.1145/3287324.3287361,
author = {Basawapatna, Ashok and Repenning, Alexander and Savignano, Mark},
title = {The Zones of Proximal Flow Tutorial: Designing Computational Thinking Cliffhangers},
year = {2019},
isbn = {9781450358903},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3287324.3287361},
doi = {10.1145/3287324.3287361},
abstract = {The creation of computer science tutorials is becoming critically important as hundreds of millions of students each year get their first CS experience through self-directed online activities. Creating a "cliffhanger" activity, with high engagement during and motivation to continue learning post activity, is a balancing act. If tutorials provide too much detailed information, users may be able to follow instructions but can feel overwhelmed or bored. On the other hand, tutorials that do not sufficiently explain crucial steps risk frustrating users who might drop out of the activity. Zones of Proximal Flow (ZPF) tutorials are simple to create and provide a navigation structure of differentiated instruction allowing users to choose appropriate detail based on their self-assessed state of flow, from bored to anxious. Using Retention of Flow analysis, two Hour of Code game design tutorials were analyzed: a sophisticated online tutorial for the creation of Frogger, and a simple ZPF tutorial for the creation of Pac-Man. One hope was that the simple ZPF Pac-Man tutorial would not do much worse than the sophisticated Frogger tutorial, but surprisingly the ZPF Pac-Man tutorial significantly outperformed the Frogger tutorial in terms of student retention. The Pac-Man tutorial also displayed a high student motivation to continue programming past the end of differentiated instruction.},
booktitle = {Proceedings of the 50th ACM Technical Symposium on Computer Science Education},
pages = {428–434},
numpages = {7},
keywords = {computational thinking, cyberlearning, exposure, flow, hour of code, retention, retention of flow, tutorial, zone of proximal development, zones of proximal flow},
location = {Minneapolis, MN, USA},
series = {SIGCSE '19}
}

@inproceedings{10.1145/3141880.3141910,
author = {Montero, Calkin Suero and Pihlainen, Kaisa},
title = {Let's play! music improvisation as a medium to facilitate computational thinking},
year = {2017},
isbn = {9781450353014},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3141880.3141910},
doi = {10.1145/3141880.3141910},
abstract = {The current curricular changes across Europe towards the inclusion of computational thinking through coding in comprehensive schools have prompted new challenges for teachers that may not be confident nor have a scripted pedagogy to teach the core concepts, as well as for students that may have a negative bias towards such subjects. In this poster, we present our exploratory experiences using music improvisation as facilitation medium for presenting computational concepts to students, through a relaxed and anxiety-free atmosphere. We show the results of preliminary experiments in the wild, indicating that the emotional state of the participants is positively enhanced after a short section of music improvisation. Furthermore, we pose open questions to the CSE research community on the value of including short improvisation activities prior teaching programming concepts such as data, sequence, loops and conditionals, which are, oftentimes, perceived as difficult.},
booktitle = {Proceedings of the 17th Koli Calling International Conference on Computing Education Research},
pages = {199–200},
numpages = {2},
keywords = {comprehensive education, computational thinking, music improvisation},
location = {Koli, Finland},
series = {Koli Calling '17}
}

@inproceedings{10.1145/3059009.3072987,
author = {Lonati, Violetta and Malchiodi, Dario and Monga, Mattia and Morpurgo, Anna},
title = {Bebras as a Teaching Resource: Classifying the Tasks Corpus Using Computational Thinking Skills},
year = {2017},
isbn = {9781450347044},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3059009.3072987},
doi = {10.1145/3059009.3072987},
abstract = {We present a new classification method for Bebras tasks based on the ISTE/CSTA operational definition of computational thinking. The classification can be appreciated by teachers without a formal education in informatics and it helps in detecting the cognitive skills involved by tasks, and makes their educational potential more explicit.},
booktitle = {Proceedings of the 2017 ACM Conference on Innovation and Technology in Computer Science Education},
pages = {366},
numpages = {1},
keywords = {bebras, computational thinking, computing education},
location = {Bologna, Italy},
series = {ITiCSE '17}
}

@inproceedings{10.1145/3102071.3102106,
author = {Bauer, Aaron and Butler, Eric and Popovi\'{c}, Zoran},
title = {Dragon architect: open design problems for guided learning in a creative computational thinking sandbox game},
year = {2017},
isbn = {9781450353199},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3102071.3102106},
doi = {10.1145/3102071.3102106},
abstract = {Educational games have a potentially significant role to play in the increasing efforts to expand access to computer science education. Computational thinking is an area of particular interest, including the development of problem-solving strategies like divide and conquer. Existing games designed to teach computational thinking generally consist of either open-ended exploration with little direct guidance or a linear series of puzzles with lots of direct guidance, but little exploration. Educational research indicates that the most effective approach may be a hybrid of these two structures. We present Dragon Architect, an educational computational thinking game, and use it as context for a discussion of key open problems in the design of games to teach computational thinking. These problems include how to directly teach computational thinking strategies, how to achieve a balance between exploration and direct guidance, and how to incorporate engaging social features. We also discuss several important design challenges we have encountered during the design of Dragon Architect. We contend the problems we describe are relevant to anyone making educational games or systems that need to teach complex concepts and skills.},
booktitle = {Proceedings of the 12th International Conference on the Foundations of Digital Games},
articleno = {26},
numpages = {6},
keywords = {computational thinking, game-based learning, programming education},
location = {Hyannis, Massachusetts},
series = {FDG '17}
}

@inproceedings{10.1145/2978249.2978269,
author = {Millwood, Richard and Strong, Glenn and Bresnihan, Nina and Cowan, Pamela},
title = {CTWINS: improving Computational Thinking confidence in educators through paired activities},
year = {2016},
isbn = {9781450342230},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2978249.2978269},
doi = {10.1145/2978249.2978269},
abstract = {The CTwins project is a cross-border initiative targeting teachers of subjects other than Computing in the Republic of Ireland and Northern Ireland who want to use technology in the classroom but lack the confidence to do so. It aims to develop confidence in educators' capacity to use computational thinking through a playful and supportive introduction to computer programming. This will be done through paired learning exercises with an output intended to be aesthetically pleasing and fulfilling. Learning will be supported by an online community of practice.The project will be evaluated for its effect on building the confidence in participating educators and the design and resources will be created as a open educational resource.},
booktitle = {Proceedings of the 11th Workshop in Primary and Secondary Computing Education},
pages = {106–107},
numpages = {2},
keywords = {Computational Thinking, Programming, Teacher Training},
location = {M\"{u}nster, Germany},
series = {WiPSCE '16}
}

@inproceedings{10.1145/2839462.2856541,
author = {Goyal, Sidhant and Vijay, Rohan S. and Monga, Charu and Kalita, Pratul},
title = {Code Bits: An Inexpensive Tangible Computational Thinking Toolkit For K-12 Curriculum},
year = {2016},
isbn = {9781450335829},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2839462.2856541},
doi = {10.1145/2839462.2856541},
abstract = {The extensive research in the domain of computational thinking has identified itself as one of the critical skills that needs to be a part of regular K-12 curriculum. However, most of the tangible computational thinking toolkits that are being developed are bulky and expensive to be deployed in classroom environments. In this paper we present Code Bits, a paper based tangible computational thinking toolkit that is inexpensive, portable and scalable. The students create programs using the tangible paper bits on any flat surface and use the Code Bits mobile application to process the code, which runs on any android device with a camera and uses augmented reality based games to improve the computational thinking skills of the students. The toolkit has been designed in way so as to promote collaboration amongst students.},
booktitle = {Proceedings of the TEI '16: Tenth International Conference on Tangible, Embedded, and Embodied Interaction},
pages = {441–447},
numpages = {7},
keywords = {Augmented Reality, Computational Thinking, K-12 education, Tangible User Interfaces},
location = {Eindhoven, Netherlands},
series = {TEI '16}
}

@article{10.1145/3380956,
author = {Wiedemann, Kenia and Chao, Jie and Galluzzo, Benjamin and Simoneau, Eric},
title = {Mathematical modeling with R: embedding computational thinking into high school math classes},
year = {2020},
issue_date = {March 2020},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {11},
number = {1},
issn = {2153-2184},
url = {https://doi.org/10.1145/3380956},
doi = {10.1145/3380956},
journal = {ACM Inroads},
month = feb,
pages = {33–42},
numpages = {10}
}

@inproceedings{10.1145/3013499.3013506,
author = {Duncan, Caitlin and Bell, Tim and Atlas, James},
title = {What do the Teachers Think? Introducing Computational Thinking in the Primary School Curriculum},
year = {2017},
isbn = {9781450348232},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3013499.3013506},
doi = {10.1145/3013499.3013506},
abstract = {This paper reports on the preliminary results of an ongoing study examining the teaching of new primary school topics based on Computational Thinking in New Zealand. We analyse detailed feedback from 13 teachers participating in the study, who had little or no previous experience teaching Computer Science or related topics. From this we extract key themes identified by the teachers that are likely to be encountered when deploying a new curriculum, including unexpected opportunities for cross-curricula learning, development of students' social skills, and engaging a wide range of students. From here we articulate key concepts and issues that arise in the primary school context, based on feedback during professional development for the study, and direct feedback from teachers on the experience of delivering the new material in the classroom.},
booktitle = {Proceedings of the Nineteenth Australasian Computing Education Conference},
pages = {65–74},
numpages = {10},
keywords = {Computational thinking, curriculum, teachers},
location = {Geelong, VIC, Australia},
series = {ACE '17}
}

@inproceedings{10.1145/2445196.2445302,
author = {Bennett, Vicki E. and Koh, KyuHan and Repenning, Alexander},
title = {Computing creativity: divergence in computational thinking},
year = {2013},
isbn = {9781450318686},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2445196.2445302},
doi = {10.1145/2445196.2445302},
abstract = {Conventionally creativity is often conceived as an aptitude to be discovered in an individual that cannot be mathematically measured. But the concept of creative thinking as a divergence from a standard "norm" is used in creativity research for the purpose of assessing creativity and is also linked to non-traditional or creative processes that lead to unique and divergent artifacts [1,2]. Using Computational Thinking Pattern Analysis (CTPA)[3], the divergence between implemented computational thinking patterns in a student-created game, and that game's tutorial "norm" is calculated as an indicator of creativity. Through a case study of one teacher using three unique learning conditions, CTPA's computed divergence is explored as a valid measurement of creativity in these student games.},
booktitle = {Proceeding of the 44th ACM Technical Symposium on Computer Science Education},
pages = {359–364},
numpages = {6},
keywords = {ACM proceedings, computational thinking, computational thinking pattern analysis, creativity measurement, game design},
location = {Denver, Colorado, USA},
series = {SIGCSE '13}
}

@inproceedings{10.1145/3311927.3323152,
author = {Troiano, Giovanni Maria and Snodgrass, Sam and Arg\i{}mak, Erin\c{c} and Robles, Gregorio and Smith, Gillian and Cassidy, Michael and Tucker-Raymond, Eli and Puttick, Gillian and Harteveld, Casper},
title = {Is My Game OK Dr. Scratch? Exploring Programming and Computational Thinking Development via Metrics in Student-Designed Serious Games for STEM},
year = {2019},
isbn = {9781450366908},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3311927.3323152},
doi = {10.1145/3311927.3323152},
abstract = {Computational thinking (CT) is key to digital literacy and helps develop problem-solving skills, which are fundamental in modern school. As game design shows potential for teaching CT, metrics like Dr. Scratch emerge that help scholars systematically assess the CT of student-designed games, particularly with Scratch. Compared to other CT metrics, Dr. Scratch scores the CT of Scratch projects automatically and can be used to describe CT development. However, previous research using Dr. Scratch summatively assessed CT, but did not look at CT development. We use Dr. Scratch to assess the CT development of Scratch games designed by 8th-grade students in STEM curricula. We show how CT proficiency in student-designed games develops differently in each CT dimension, where parallelism, synchronization, and logic develop proficiently, while developing abstraction seems hard. We discuss insights into game-based CT development for STEM, and suggest improvements for metric-based CT assessment.},
booktitle = {Proceedings of the 18th ACM International Conference on Interaction Design and Children},
pages = {208–219},
numpages = {12},
keywords = {Computational thinking, Dr. Scratch, STEM, Scratch, assessment, constructionist learning, game design, metrics},
location = {Boise, ID, USA},
series = {IDC '19}
}

@inproceedings{10.1145/2851581.2851589,
author = {Lin, Veronica and Shaer, Orit},
title = {Beyond the Lab: Using Technology Toys to Engage South African Youth in Computational Thinking},
year = {2016},
isbn = {9781450340823},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2851581.2851589},
doi = {10.1145/2851581.2851589},
abstract = {We present a two-part case study to explore how technology toys can promote computational thinking for young children. First, we conducted a formal study using littleBits, a commercially available technology toy, to explore its potential as a learning tool for computational thinking in three different educational settings. Our findings revealed differences in learning indicators across settings. We applied these insights during a teaching project in Cape Town, South Africa, where we partnered with an educational NGO, ORT SA CAPE, to offer enriching learning opportunities for both privileged and impoverished children. We describe our methods, observations, and lessons learned using littleBits to teach computational thinking to children in early elementary school, and discuss how our lab study informed practical work in the developing world.},
booktitle = {Proceedings of the 2016 CHI Conference Extended Abstracts on Human Factors in Computing Systems},
pages = {655–661},
numpages = {7},
keywords = {child-computer interaction, computational thinking, education, tangible user interfaces., youth},
location = {San Jose, California, USA},
series = {CHI EA '16}
}

@inproceedings{10.1145/3141880.3143781,
author = {Spangsberg, Thomas Hvid},
title = {Teaching programming to non-STEM novices: a didactical study of computational thinking and non-STEM computing education},
year = {2017},
isbn = {9781450353014},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3141880.3143781},
doi = {10.1145/3141880.3143781},
abstract = {The PhD project presented here is concerned with teaching introductory programming to non-STEM students. Particularly students in the field of Information Studies and HCI. The research is carried out through three Teaching and Learning Explorations (TLE - I-III) which are set in an inductive action research approach. Computational thinking plays a significant role in computing education but it is still unclear how it should be interpreted to best serve its purpose. Constructionism and Computational Making seems to be promising frameworks to do this. In regards to specific teaching activities, the translation-grammar method of a structural approach to natural language teaching shows promising results when actualized in a concrete exercise named code-labelling.},
booktitle = {Proceedings of the 17th Koli Calling International Conference on Computing Education Research},
pages = {201–202},
numpages = {2},
keywords = {computational making, computational thinking, constructionism, non-STEM computing education},
location = {Koli, Finland},
series = {Koli Calling '17}
}

@inproceedings{10.1145/2676723.2691876,
author = {Boyer, Kristy and Buffum, Philip Sheridan and Culbertson, Kirby and Frankosky, Megan and Lester, James and Martinez-Arocho, Allison and Min, Wookhee and Mott, Bradford and Rodriguez, Fernando and Wiebe, Eric},
title = {ENGAGE: A Game-based Learning Environment for Middle School Computational Thinking},
year = {2015},
isbn = {9781450329668},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2676723.2691876},
doi = {10.1145/2676723.2691876},
abstract = {We present ENGAGE, a game-based learning environment for teaching computational thinking to middle school students. This project has dual aims: introducing computational thinking practices to students at a young age, and improving computational thinking attitudes among underrepresented students. In pursuit of these two goals, the ENGAGE team has mapped the learning objectives of the AP CS Principles course to the middle school level, and then built an immersive game experience upon that foundation. Students choose computer scientist avatars to represent themselves, and then play in pairs as they investigate a data-related mystery in an underwater research station, solving computational thinking challenges along the way. ENGAGE is currently being implemented as part of a quarterly elective in four middle schools in North Carolina. During the elective, students spend a total of ten classroom sessions playing the game, supplemented by "unplugged" activities that reinforce concepts learned in the game environment. We plan to expand to more middle schools in the 2015-2016 school year. In this demo, members of the SIGCSE community will be able to experience the ENGAGE game for themselves and learn more about its development and future directions. We will also discuss our success in recruiting and teaching the ENGAGE curriculum to middle school teachers who had no prior computer science experience, and the success of those middle school teachers in implementing ENGAGE within their classrooms.},
booktitle = {Proceedings of the 46th ACM Technical Symposium on Computer Science Education},
pages = {440},
numpages = {1},
keywords = {computational thinking, game-based learning, middle school},
location = {Kansas City, Missouri, USA},
series = {SIGCSE '15}
}

@inproceedings{10.1145/2593968.2610489,
author = {Apostolellis, Panagiotis and Stewart, Michael and Frisina, Chris and Kafura, Dennis},
title = {RaBit EscAPE: a board game for computational thinking},
year = {2014},
isbn = {9781450322720},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2593968.2610489},
doi = {10.1145/2593968.2610489},
abstract = {Computational thinking (CT) is increasingly seen as a core literacy skill for the modern world on par with the longestablished skills of reading, writing, and arithmetic. To promote the learning of CT at a young age we capitalized on children's interest in play. We designed RabBit EscApe, a board game that challenges children, ages 610, to orient tangible, magnetized manipulatives to complete or create paths. We also ran an informal study to investigate the effectiveness of the game in fostering children's problemsolving capacity during collaborative game play. We used the results to inform our instructional interaction design that we think will better support the learning activities and help children hone the involved CT skills. Overall, we believe in the power of such games to challenge children to grow their understanding of CT in a focused and engaging activity.},
booktitle = {Proceedings of the 2014 Conference on Interaction Design and Children},
pages = {349–352},
numpages = {4},
keywords = {computational thinking, education, tangible games},
location = {Aarhus, Denmark},
series = {IDC '14}
}

@article{10.1145/3243138,
author = {Richard, Gabriela T. and Giri, Sagun},
title = {Digital and Physical Fabrication as Multimodal Learning: Understanding Youth Computational Thinking When Making Integrated Systems Through Bidirectionally Responsive Design},
year = {2019},
issue_date = {September 2019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {19},
number = {3},
url = {https://doi.org/10.1145/3243138},
doi = {10.1145/3243138},
abstract = {This article proposes and explores the kinds of computational thinking, creative practices, design activities, and inclusive learning opportunities provided to diverse high school youth when designing integrated systems through simultaneously physically and digitally responsive wearable games and systems. Previous work in this area, conducted by Richard, coined the term “bidirectionally responsive design” (BRD) to describe the design of dual-feedback systems using multiple digital and physical interfaces. BRD also emphasizes using simplified fabrication tools, media and coding platforms, and microcontrollers common in youth content creation communities and makerspaces. This study provides a framework to analyze computational concepts, practices, and perspectives that leverage an integrated systems and multimodal learning approach, such as BRD, adding to, building on, and integrating previous analytic approaches to looking at Scratch coding, media design, physical computing and e-textiles. Using a detailed case study of one team during one of the early workshop iterations, we conduct a multimodal analysis of bidirectionally responsive making activities and discuss the ways that they present novel understanding of integrating diverse interests and encouraging collaborative and distributed computational thinking. We further examine how BRD operationalizes and extends multimodal learning theory by adding tangible and integrative dimensions as additional modalities learners can leverage to facilitate meaning making, metacognition, and agency. We also discuss how designing integrated systems, as facilitated through BRD, provides an opportunity to engage in authentic practices around the design of complex systems.},
journal = {ACM Trans. Comput. Educ.},
month = jan,
articleno = {17},
numpages = {35},
keywords = {Education/learning, collaboration, content analysis, creativity support, design research methods, embodied interaction, fashion/clothing, games/play, interview, participatory design, schools/educational setting, sensors, tangible, teens, wearable computers}
}

@inproceedings{10.1145/2670757.2670778,
author = {Sabitzer, Barbara and Antonitsch, Peter K. and Pasterk, Stefan},
title = {Informatics concepts for primary education: preparing children for computational thinking},
year = {2014},
isbn = {9781450332507},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2670757.2670778},
doi = {10.1145/2670757.2670778},
abstract = {In Austria Informatics is not taught in primary schools, but the curriculum includes some issues in several subjects that are related to computational thinking. Teachers are not aware that they already teach and use informatics concepts in their daily lessons. Informatics didactics experts and teacher trainers have to inform them and reveal connections between their primary school contents and different informatics concepts. Furthermore, one general educational aim of the curriculum is the acquisition of elementary cultural techniques including a child-friendly approach to modern information and communication technologies (ICT). The aim of this paper is to show how this is possible in practice and lists informatics concepts already "hidden" in the primary school curriculum. It reports on different initiatives that aim at introducing informatics in primary schools as well as a sample project on computational thinking funded by the regional teacher support program Teaching Informatics creatively. The qualitative results of this and other primary school projects show that it is possible and worth integrating informatics already at this early stage.},
booktitle = {Proceedings of the 9th Workshop in Primary and Secondary Computing Education},
pages = {108–111},
numpages = {4},
keywords = {computational thinking, informatics, primary education},
location = {Berlin, Germany},
series = {WiPSCE '14}
}

@inproceedings{10.1145/3159450.3162285,
author = {Dickes, Amanda and Metcalf, Shari and Kamarainen, Amy and Reilly, Joe and Brennan, Karen and Grotzer, Tina and Dede, Chris},
title = {EcoMOD: Integrating Computational Thinking into Ecosystems Science Education via Modeling in Immersive Virtual Worlds (Abstract Only)},
year = {2018},
isbn = {9781450351034},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3159450.3162285},
doi = {10.1145/3159450.3162285},
abstract = {In recent years, the field of education has challenged researchers and practitioners to incorporate computing as an essential focus of K12 STEM education. Widely recognized as a "basic skill" necessary for economic opportunity and social mobility, integrating computing within K12 STEM supports learners of all ages in applying computational thinking within established and accessible contexts while co-developing practices essential to mathematical and scientific expertise. The EcoMOD project is an example of such an integration. In EcoMOD, immersive virtual environments are blended with interactive computational modeling tools designed specifically for younger children in an attempt to support ecological knowledge, complex causal reasoning and computational creation in third grade students. Our curricular design is grounded in the Science-as-Practice perspective and literature on young children's computing. In this proposal, we present outcomes from early pilot work with 35 third graders across the greater Boston area. This work has implications for designers of educational technologies by illuminating aspects of children's understanding that researchers and designers can leverage to support deeper and earlier understandings of ecological dynamics and computational practices.},
booktitle = {Proceedings of the 49th ACM Technical Symposium on Computer Science Education},
pages = {1076},
numpages = {1},
keywords = {computational literacy, computational thinking, modeling, programming, science education},
location = {Baltimore, Maryland, USA},
series = {SIGCSE '18}
}

@inproceedings{10.1145/2978192.2978220,
author = {Fronza, Ilenia and El Ioini, Nabil and Corral, Luis},
title = {Teaching Software Design Engineering Across the K-12 Curriculum: Using Visual Thinking and Computational Thinking},
year = {2016},
isbn = {9781450344524},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2978192.2978220},
doi = {10.1145/2978192.2978220},
abstract = {Over the years a number of methodologies have been proposed in Software Engineering to deal with systems design. High among them is visual thinking (VT). VT is a well known strategy to foster more ideas and generate consensus within a group. In this paper, we propose the application of VT in the design phase of computational thinking in the K-12 curriculum. The goal is to facilitate the interchange of ideas in a team of students, and assist on orchestrating an all-hands, brainstorming working strategy that ensures that all the participants speak and are listened, and that all the viewpoints are taken into account. We describe the results of an experience of visual thinking applied in the design phase across the K-12 curriculum.},
booktitle = {Proceedings of the 17th Annual Conference on Information Technology Education},
pages = {97–101},
numpages = {5},
keywords = {computational thinking, software design, visual thinking},
location = {Boston, Massachusetts, USA},
series = {SIGITE '16}
}

@inproceedings{10.1145/2445196.2445430,
author = {Weintrop, David and Wilensky, Uri},
title = {Robobuilder: a computational thinking game (abstract only)},
year = {2013},
isbn = {9781450318686},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2445196.2445430},
doi = {10.1145/2445196.2445430},
abstract = {RoboBuilder is a blocks-based, program-to-play game designed to introduce students to core aspects of computational thinking in a fun and engaging environment. The game employs a constructionist design to challenge players to invent and implement strategies to control an on-screen robot using a specially designed visual programming language. During the game, players' robots compete against a series of progressively more challenging opponents in one-on-one battles. Through playing the game, players construct working programs, providing learners with the experience of reifying their own ideas using a computational medium, a practice central to our notion of computational thinking. This poster presents the design rationale for RoboBuilder and discusses key aspects of the game that contribute to giving learners a positive, hands-on introduction to core computational thinking skills including computationally expressing ideas, algorithmic thinking, and debugging.},
booktitle = {Proceeding of the 44th ACM Technical Symposium on Computer Science Education},
pages = {736},
numpages = {1},
keywords = {computational thinking, design, game-based learning, novice programming environments},
location = {Denver, Colorado, USA},
series = {SIGCSE '13}
}

@inproceedings{10.1145/2771839.2771894,
author = {Portelance, Dylan J. and Bers, Marina Umaschi},
title = {Code and tell: assessing young children's learning of computational thinking using peer video interviews with ScratchJr},
year = {2015},
isbn = {9781450335904},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2771839.2771894},
doi = {10.1145/2771839.2771894},
abstract = {In this paper, we present a novel technique for assessing the learning of computational thinking in the early childhood classroom. Students in three second grade classrooms learned foundational computational thinking concepts using ScratchJr and applied what they learned to creating animated collages, stories, and games. They then conducted artifact-based video interviews with each other in pairs using their iPad cameras. As discussed in the results, this technique can show a broad range of what young children learn about computational thinking in classroom interventions using ScratchJr than more traditional assessment techniques. It simultaneously provides a developmentally appropriate educational activity (i.e. peer interviews) for early childhood classrooms.},
booktitle = {Proceedings of the 14th International Conference on Interaction Design and Children},
pages = {271–274},
numpages = {4},
keywords = {ScratchJr, artifact-based interviews, assessments, coding, computational thinking, early childhood, education, iPad, programming},
location = {Boston, Massachusetts},
series = {IDC '15}
}

@inproceedings{10.1145/2445196.2445323,
author = {Bort, Heather and Brylow, Dennis},
title = {CS4Impact: measuring computational thinking concepts present in CS4HS participant lesson plans},
year = {2013},
isbn = {9781450318686},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2445196.2445323},
doi = {10.1145/2445196.2445323},
abstract = {In this paper, we aim to directly measure a CS4HS workshop's participating teachers' ability to synthesize CSTA computational thinking core concepts into actionable lesson plans for courses in their current teaching repertoire. Participants were expected to present a lesson plan on the final day of the workshop, highlighting the integration of their classroom curriculum with computing and computational thinking skills. We present our evaluation rubric, used to rate the teachers effective use of the computational thinking core concepts in their lesson plans, and describe how our method of evaluation may more accurately gauge the overall impact that CS4HS workshops have on their participants.},
booktitle = {Proceeding of the 44th ACM Technical Symposium on Computer Science Education},
pages = {427–432},
numpages = {6},
keywords = {CS4HS, K-12 outreach, computational thinking, lesson planning},
location = {Denver, Colorado, USA},
series = {SIGCSE '13}
}

@inproceedings{10.1145/2808006.2808033,
author = {Fronza, Ilenia and El Ioini, Nabil and Corral, Luis},
title = {Students Want to Create Apps: Leveraging Computational Thinking to Teach Mobile Software Development},
year = {2015},
isbn = {9781450338356},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2808006.2808033},
doi = {10.1145/2808006.2808033},
abstract = {Computational Thinking (CT) is recognised as one of the fundamental skills of all graduates. Nevertheless, some issues can emerge when trying to introduce CT into schools; for example, teachers might not be willing to add topics to their intensive syllabi. Therefore, out-of-school venues such as summer schools can be considered a great opportunity for exposure to CT. Moreover, summer schools allow students to meet first hand researchers and help them pursue their interest far from the regular school climate. High school students in general are very curious for the creation of mobile apps; however, most of them get discouraged because they perceive this activity as a very difficult task. Here we describe the MobileDev summer school, a one-week training and hands-on experience in current topics of software development for mobile devices. The curiosity of the students for developing mobile apps is used to introduce and train CT via programming mobile applications through exercises (also with "pen and paper'") of increasing difficulty. The school was repeated twice at our university and was targeted to a reduced class of students concluding the third and the fourth year of high school. Participants were in total 19 and coming from different types of schools. This paper describes the structure of MobileDev and discusses the results to provide directions for further research.},
booktitle = {Proceedings of the 16th Annual Conference on Information Technology Education},
pages = {21–26},
numpages = {6},
keywords = {computational thinking, mobile development, summer school},
location = {Chicago, Illinois, USA},
series = {SIGITE '15}
}

@inbook{10.1145/3507951.3519284,
author = {Bofferding, Laura and Kocabas, Sezai and Aqazade, Mahtob and Haiduc, Ana-Maria and Chen, Lizhen},
title = {The effect of play and worked examples on first and third graders' creating and debugging of programming algorithms},
year = {2022},
isbn = {9781450396158},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3507951.3519284},
abstract = {Although learning to program can improve students' computational thinking skills---specifically, creating and debugging algorithms---we need to determine instructional strategies that foster such skills in young students. We investigated the role of analyzing worked examples that focused on creating and debugging programming algorithms with 28 first and 27 third graders. Students played a tangible, block-based programming game, Coding Awbie, across six, 20-minute sessions and were randomly assigned to also analyze programming worked examples during sessions one to three (immediate group) or sessions four to six (delayed group). To measure changes in creating and debugging algorithms before and after their worked example intervention, students completed a pretest, midtest (after session three), and a posttest. By midtest, students who were in the immediate group wrote significantly more accurate programs, although both groups had similar accuracy when given the chance to debug their programs. By posttest, both groups made significant gains in accuracy of their programs. Overall, analyzing worked examples proved to be a powerful support for students' programming skills in creating and debugging algorithms. However, students' common bugs indicate that additional worked examples should focus on double-counting errors.},
booktitle = {Computational Thinking in PreK-5: Empirical Evidence for Integration and Future Directions},
pages = {19–29},
numpages = {11}
}

@inproceedings{10.1145/2481449.2481487,
author = {Gallenbacher, Jens},
title = {Abenteuer informatik: hands-on exhibits for learning about computational thinking},
year = {2012},
isbn = {9781450317870},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2481449.2481487},
doi = {10.1145/2481449.2481487},
abstract = {Computational thinking is one of the pillars of the ACM-CSTA standards for teaching computer science from kindergarten to college. Our approaches Abenteuer Informatik -- Informatik begreifen (adventures in informatics -- hands on computer science) and Abenteuer Technik are well established in the german-speaking community as means to connect computer science with other subjects and as means of clarifying some prejudices against computer science, especially problematic for establishing computer science as subject in schools.},
booktitle = {Proceedings of the 7th Workshop in Primary and Secondary Computing Education},
pages = {149–150},
numpages = {2},
keywords = {abenteuer informatik, computational thinking, computer science education, computer science unplugged, curriculum},
location = {Hamburg, Germany},
series = {WiPSCE '12}
}

@inproceedings{10.1145/2380552.2380606,
author = {L'Heureux, Jaime and Boisvert, Deborah and Cohen, Robert and Sanghera, Kamaljeet},
title = {IT problem solving: an implementation of computational thinking in information technology},
year = {2012},
isbn = {9781450314640},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2380552.2380606},
doi = {10.1145/2380552.2380606},
abstract = {This paper describes the implementation of information technology problem-solving constructs and scenarios designed to cultivate computational thinking in information technology education at the college level via a course entitled "IT Problem Solving." A project of Broadening Advanced Technological Connections (BATEC), these scenarios were developed by a team of researchers under the auspices of an NSF CPATH grant focusing on adapting Computational Thinking as defined by Jeanette Wing into a more applied framework in partnership with and validated by a broad set of Information Technology (IT) professionals. The methodologies used within this highly successful course at Bunker Hill Community College may be of interest to other departments with existing IT programs that would like to take advantage of the strengths of the problem solving approach.},
booktitle = {Proceedings of the 13th Annual Conference on Information Technology Education},
pages = {183–188},
numpages = {6},
keywords = {computational thinking, cpath, curriculum development, education, information technology (it), problem solving},
location = {Calgary, Alberta, Canada},
series = {SIGITE '12}
}

@inproceedings{10.1145/1734263.1734276,
author = {Freudenthal, Eric Andrew and Roy, Mary K. and Ogrey, Alexandria Nicole and Magoc, Tanja and Siegel, Alan},
title = {MPCT: media propelled computational thinking},
year = {2010},
isbn = {9781450300063},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1734263.1734276},
doi = {10.1145/1734263.1734276},
abstract = {Media-Propelled Computational Thinking (MPCT - pronounced impact) is a course designed to introduce programming in the context of engaging problems in media computation, math, and physics. Programming concepts are introduced as incremental steps needed to solve pragmatic problems students already understand. The problems, graphical API, and hands-on program features are intended to expose fundamental concepts in mathematics and quantitative science.MPCT is offered in an entering students program for freshmen who plan to specialize in a variety of STEM (science, technology, engineering and math) and non-STEM subjects. The curriculum is intended to strengthen student intuition and interest in mathematical modeling and programming by engaging students in the direct manipulation of simple mathematical systems that model and display familiar physical phenomena. MPCT uses programs as concrete and manipulatable examples of fundamental concepts to engage a diverse range of students including women and underrepresented minorities.Variants of MPCT are being developed for high schools, and as a means to introduce computational science to upper division undergraduates studying non-computational STEM disciplines. This paper provides an overview of MPCT and representative problem studies including models of ballistics and resonant systems. The evaluation plan is described and very preliminary results are presented.},
booktitle = {Proceedings of the 41st ACM Technical Symposium on Computer Science Education},
pages = {37–41},
numpages = {5},
keywords = {computational thinking, cs-zero, first year programs},
location = {Milwaukee, Wisconsin, USA},
series = {SIGCSE '10}
}

@inproceedings{10.1145/2538862.2538950,
author = {Basawapatna, Ashok Ram and Repenning, Alexander and Koh, Kyu Han and Savignano, Mark},
title = {The consume - create spectrum: balancing convenience and computational thinking in stem learning},
year = {2014},
isbn = {9781450326056},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2538862.2538950},
doi = {10.1145/2538862.2538950},
abstract = {Future school science standards, such as the Next Generation Science Standards (NGSS), emphasize the integration of simulation and modeling activities in the classroom environment. The extremes of these activities have two vastly different implementations. On one hand, a teacher can have students experiment on a pre-made simulation associated with the material. On the other hand, students can use, for example, an end-user programming tool to create the simulation from scratch. This allows students to not only experiment on, but also, to model the real world phenomenon being studied- a key component of computational thinking. However, the greater amount of time necessary for student authoring of simulations can make such an approach infeasible in the classroom environment. This paper presents a spectrum of strategies for integrating simulations into class- rooms emphasizing our research at the Scalable Game Design Lab, University of Colorado Boulder as well as research from other entities. Starting at consuming simulations and adding more user interaction and authoring elements begins to provide a gentle slope from consumption towards simulation creation. Results indicate that many of these strategies are quite effective.},
booktitle = {Proceedings of the 45th ACM Technical Symposium on Computer Science Education},
pages = {659–664},
numpages = {6},
keywords = {computational thinking, high school computer education, middle school computer education, next generation science standards, simulation and modeling},
location = {Atlanta, Georgia, USA},
series = {SIGCSE '14}
}

@inproceedings{10.1145/2462476.2462511,
author = {Settle, Amber and Goldberg, Debra S. and Barr, Valerie},
title = {Beyond computer science: computational thinking across disciplines},
year = {2013},
isbn = {9781450320788},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2462476.2462511},
doi = {10.1145/2462476.2462511},
booktitle = {Proceedings of the 18th ACM Conference on Innovation and Technology in Computer Science Education},
pages = {311–312},
numpages = {2},
keywords = {biology, computational thinking, economics, english, humanities, k-12, language arts, science, undergraduate, visual arts},
location = {Canterbury, England, UK},
series = {ITiCSE '13}
}

@article{10.1145/3381887,
author = {Kafai, Yasmin and Proctor, Chris and Lui, Debora},
title = {From theory bias to theory dialogue: embracing cognitive, situated, and critical framings of computational thinking in K-12 CS education},
year = {2020},
issue_date = {March 2020},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {11},
number = {1},
issn = {2153-2184},
url = {https://doi.org/10.1145/3381887},
doi = {10.1145/3381887},
journal = {ACM Inroads},
month = feb,
pages = {44–53},
numpages = {10}
}

@inproceedings{10.1145/2445196.2445346,
author = {Basawapatna, Ashok Ram and Repenning, Alexander and Lewis, Clayton H.},
title = {The simulation creation toolkit: an initial exploration into making programming accessible while preserving computational thinking},
year = {2013},
isbn = {9781450318686},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2445196.2445346},
doi = {10.1145/2445196.2445346},
abstract = {Computational thinking aims to outline fundamental skills from computer science that everyone should learn. These skills include problem formulation, logically organizing data, automating solutions through algorithmic thinking, and representing data through abstraction. One aim of the NSF is to integrate these and other computational thinking concepts into the classroom. This paper introduces a tool called the Simulation Creation Toolkit wherein users apply high-level agent interactions called Computational Thinking Patterns (CTPs) to create simulations. Programming at the Computational Thinking Pattern level allows users to directly create agent interactions in a simulation by employing generic icons acting out a scientific phenomenon they are trying to represent. The Simulation Creation Toolkit aims to preserve the computational thinking benefits of simulation creation while enabling higher-level implementation of agent behaviors. Initial study data collected from sixth grade students with no prior programming experience indicates that students can work the mechanics necessary to create simulations in the classroom environment using the Simulation Creation Toolkit.},
booktitle = {Proceeding of the 44th ACM Technical Symposium on Computer Science Education},
pages = {501–506},
numpages = {6},
keywords = {computational thinking, computational thinking patterns, middle school computer education, scalable game design, student observation, university programming education},
location = {Denver, Colorado, USA},
series = {SIGCSE '13}
}

@inproceedings{10.1145/2676723.2691906,
author = {Kurt-Peker, Yesem and Ray, Lydia and Hodhod, Rania and Khan, Shamim},
title = {Computing in the Classroom: A Workshop for Teachers to Infuse Computational Thinking into K-12 Classrooms (Abstract Only)},
year = {2015},
isbn = {9781450329668},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2676723.2691906},
doi = {10.1145/2676723.2691906},
abstract = {Computational thinking is an essential skill for everyone in today's world. It is a problem solving skill that incorporates problem decomposition, pattern recognition, abstraction, logical and algorithmic thinking. Yet the exposure of students in K-12 curriculum to computational thinking is minimal in most schools. There are various opportunities for computational thinking to be included in almost all content areas in the curriculum. In order for this to be realized, teachers need introduction to the concept of computational thinking and they need to be equipped with tools to provide practices in this concept in the classrooms. Inspired by this idea, we organized a workshop in June 2014 to involve all teachers from all grade levels and all disciplines where we introduced them to the concept of computational thinking and taught them tools such as Scratch, Google Sites, HTML, and AppInventor. The workshop attracted 34 teachers mostly from the Muscogee County School District in Georgia. In this poster we present our recruitment strategy, methodology of our workshop, and results from our pre and post surveys. In particular, we present the influence of our workshop on teachers' views of computational thinking. We also share highlights from the projects that the teachers worked on during the workshop and presented at the end.},
booktitle = {Proceedings of the 46th ACM Technical Symposium on Computer Science Education},
pages = {676},
numpages = {1},
keywords = {computational thinking, computing in k-12, computing workshop for teachers},
location = {Kansas City, Missouri, USA},
series = {SIGCSE '15}
}

@inproceedings{10.1145/2157136.2157200,
author = {Werner, Linda and Denner, Jill and Campe, Shannon and Kawamoto, Damon Chizuru},
title = {The fairy performance assessment: measuring computational thinking in middle school},
year = {2012},
isbn = {9781450310987},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2157136.2157200},
doi = {10.1145/2157136.2157200},
abstract = {Computational thinking (CT) has been described as an essential capacity to prepare students for computer science, as well as to be productive members of society. But efforts to engage K-12 students in CT are hampered by a lack of definition and assessment tools. In this paper, we describe the first results of a newly created performance assessment tool for measuring CT in middle school. We briefly describe the context for the performance assessment (game-programming courses), the aspects of CT that are measured, the results, and the factors that are associated with performance. We see the development of assessment tools as a critical step in efforts to bring CT to K-12, and to strengthen the use of game programming in middle school. We discuss problems and implications of our results.},
booktitle = {Proceedings of the 43rd ACM Technical Symposium on Computer Science Education},
pages = {215–220},
numpages = {6},
keywords = {Alice, assessment, computational thinking, game programming, middle school, pair programming},
location = {Raleigh, North Carolina, USA},
series = {SIGCSE '12}
}

@inproceedings{10.1145/2212776.2223794,
author = {Lee, Tak Yeon and Mauriello, Matthew Louis and Ingraham, John and Sopan, Awalin and Ahn, June and Bederson, Benjamin B.},
title = {CTArcade: learning computational thinking while training virtual characters through game play},
year = {2012},
isbn = {9781450310161},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2212776.2223794},
doi = {10.1145/2212776.2223794},
abstract = {In this paper we describe CTArcade, a web application framework that seeks to engage users through game play resulting in the improvement of computational thinking (CT) skills. Our formative study indicates that CT skills are employed when children are asked to define strategies of common games such as Connect Four. In CTArcade, users can train their own virtual characters while playing games with it. Trained characters then play matches against other virtual characters. Based on reviewing the matches played, users can improve their game character. A basic usability evaluation was performed on the system, which helped to define plans for improving CTArcade and assessing its design goals.},
booktitle = {CHI '12 Extended Abstracts on Human Factors in Computing Systems},
pages = {2309–2314},
numpages = {6},
keywords = {computational thinking, learning and games},
location = {Austin, Texas, USA},
series = {CHI EA '12}
}

@inproceedings{10.1145/2676723.2691934,
author = {Kos, Brittany Ann and Sims, Elizabeth},
title = {STEM Ccareers Inforgaphic Project (SCIP): Teaching Media-Based Computational Thinking Practices (Abstract Only)},
year = {2015},
isbn = {9781450329668},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2676723.2691934},
doi = {10.1145/2676723.2691934},
abstract = {The STEM Career Infographic Project (SCIP) was a 4-week exploratory project deployed in an 8th grade classroom at Mountain Vista Middle School (MVMS). SCIP was poised to address the growing focus on STEM fields at MVMS and within the school district. We piloted SCIP in Spring 2014 with six science classes or about 180 students. SCIP allowed for students to explore their own STEM interests, while simultaneously engaging in the 6 Computational Thinking Practices (CTP) outlined by the College Board.Students were required to research a STEM career in-depth, then report on their careers using infographics (CTP #2: Creating Computational Artifacts and CTP #3: Abstracting). We used free and online programs to create the infographics; this provided the students the opportunity to learn software they were not previously exposed to and to explore new communication tools (CTP #1: Connecting Computing and CTP #2: Analyzing Problems and Artifacts). SCIP also provided many occasions for the students to work together by sharing career information or helping each other with the software (CTP #6: Collaborating). At the end of the project the students presented their infographics in front of the class and taught their classmates about their career (CTP #5: Communicating).The project was incredibly successful. The students had a positive affect through the duration of the project and many also expressed an extreme level of interest in doing similar projects in the future. We will be repeating this project in Spring 2015, with a few adaptations and formal evaluation scheme.},
booktitle = {Proceedings of the 46th ACM Technical Symposium on Computer Science Education},
pages = {681},
numpages = {1},
keywords = {computational thinking, computing education, infographics, media-based computing, middle school education, stem education},
location = {Kansas City, Missouri, USA},
series = {SIGCSE '15}
}

@inproceedings{10.1145/2538862.2539016,
author = {Pulimood, Sarah Monisha and Pearson, Kim and Bates, Diane C.},
title = {CABECT: collaborating across boundaries to engage undergraduates in computational thinking (abstract only)},
year = {2014},
isbn = {9781450326056},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2538862.2539016},
doi = {10.1145/2538862.2539016},
abstract = {Innovative solutions for complex problems entail diversity of perspectives, and students must learn to integrate concepts from multiple disciplinary areas. Yet, to provide collaborative experiences that cross disciplinary boundaries, educators must navigate numerous administrative and pedagogical challenges. In this hands-on workshop participants will learn how to leverage existing courses for students and faculty to collaborate across disciplines and with a community partner, to develop socially-relevant computational solutions for real-world problems. Participants will also brainstorm ideas on addressing specific challenges at their own institutions. The intended audience is educators interested in engaging their students in deep computational thinking through immersive multidisciplinary collaborative experiences. Registered participants will be reimbursed the workshop registration fee through NSF Award# 1141170. We will additionally offer a stipend to participants who adopt our model, administer assessments and provide us with their results for analysis and inclusion in reports. More information will be available at http://tardis.tcnj.edu/cabect/. Laptop Recommended.},
booktitle = {Proceedings of the 45th ACM Technical Symposium on Computer Science Education},
pages = {741},
numpages = {1},
keywords = {collaboration, community engaged learning, computational thinking},
location = {Atlanta, Georgia, USA},
series = {SIGCSE '14}
}

@inproceedings{10.1145/3701625.3701681,
author = {Menolli, Andr\'{e} and Strik, Bruno and Rodrigues, Luiz},
title = {Teaching Refactoring to Improve Code Quality with ChatGPT: An Experience Report in Undergraduate Lessons},
year = {2024},
isbn = {9798400717772},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3701625.3701681},
doi = {10.1145/3701625.3701681},
abstract = {Refactoring presents a complex computational challenge, and its learning is intricate, requiring a solid foundation in computational thinking, programming and object-oriented concepts. Moreover, making students realize the importance and benefits of refactoring is also challenging. To address this complexity, we introduce a refactoring teaching method based on Generative Artificial Intelligence (GAI), incorporating single-loop and double-loop learning principles, focusing on fostering deeper and critical learning. We used ChatGPT, a GAI-based tool, and conducted an eight-week mixed-methods study involving 23 computer science undergraduate students. The study involved applying four distinct projects extracted from GitHub, where participants were tasked with identifying code smells and performing the necessary refactoring to improve code quality. The primary focus was on identifying both the positive and negative aspects of the method, as well as delineating the computational thinking characteristics developed during the process. The results indicate that the use of ChatGPT facilitated the learning of refactoring, contributing to the development of numerous computational thinking skills, especially problem formulation, decomposition, and abstraction. Thus, this paper contributes a GAI-based teaching method along with evidence on how it helps students develop refactoring skills.},
booktitle = {Proceedings of the XXIII Brazilian Symposium on Software Quality},
pages = {563–574},
numpages = {12},
keywords = {Generative Artificial Intelligence, ChatGPT, Refactory, Higher Education, Teaching, Computational Thinking},
location = {
},
series = {SBQS '24}
}

@inproceedings{10.1145/2148131.2148234,
author = {Peng, Huaishu},
title = {Algo.Rhythm: computational thinking through tangible music device},
year = {2012},
isbn = {9781450311748},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2148131.2148234},
doi = {10.1145/2148131.2148234},
abstract = {I present the design of Algo.Rhythm, a tangible computational drum kit with programmable behaviors. By arranging and physically connecting a number of drum-bots, each of them records beat patterns from outside world or its precursor, replays the patterns in selectable ways, and passes the rhythm to its neighbors along the drum-bot's surface in 3D space. The construction of drum-bots and the delivery of the beat patterns provide users a unique opportunity to learn a set of computational concepts like sequential execution, iteration, or forking through composing music.},
booktitle = {Proceedings of the Sixth International Conference on Tangible, Embedded and Embodied Interaction},
pages = {401–402},
numpages = {2},
keywords = {algorithmic specification, computational thinking, musical instrument, tangible interfaces},
location = {Kingston, Ontario, Canada},
series = {TEI '12}
}

@inproceedings{10.1145/2818314.2818316,
author = {Jenkins, Craig},
title = {A Work in Progress Paper: Evaluating a Microworlds-based Learning Approach for Developing Literacy and Computational Thinking in Cross-curricular Contexts},
year = {2015},
isbn = {9781450337533},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2818314.2818316},
doi = {10.1145/2818314.2818316},
abstract = {In the 1960s, Papert and his team at the Massachusetts Institute of Technology (MIT) developed Turtle Graphics using the LOGO programming language. Underpinning this development was a profound new philosophy of how learning happens with computers: a microworlds-based approach to learning. The wider aim of this research project is to examine how a microworlds-based approach may be revived in contemporary educational contexts by secondary school teachers in cross-curricular subject areas. It examines the microworld as a tool for secondary level learning at ages eleven-to-fourteen and explores its potential role in making relevant conceptual learning accessible through practical, constructionist approaches in cross-curricular applications.This particular work-in-progress paper reports on a comparative evaluation of a microworlds-based approach to teaching poetic verse in the subject domain of drama. A quasi-experimental design was used in order to measure performance gains in specific aspects of computational thinking and literacy development following the microworld-based intervention. Preliminary data reveals a higher improvement in performance but further qualitative data needs to be collected in order to provide further insight to support the quantitative findings.},
booktitle = {Proceedings of the Workshop in Primary and Secondary Computing Education},
pages = {61–64},
numpages = {4},
keywords = {Computational thinking, literacy, microworlds},
location = {London, United Kingdom},
series = {WiPSCE '15}
}

@article{10.1145/2723169,
author = {Cooper, Stephen and Dann, Wanda},
title = {Programming: a key component of computational thinking in CS courses for non-majors},
year = {2015},
issue_date = {March 2015},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {6},
number = {1},
issn = {2153-2184},
url = {https://doi.org/10.1145/2723169},
doi = {10.1145/2723169},
journal = {ACM Inroads},
month = feb,
pages = {50–54},
numpages = {5},
keywords = {computational thinking, non-majors, programming}
}

@inproceedings{10.1145/2674683.2674686,
author = {Nowack, Palle and Caspersen, Michael E.},
title = {Model-based thinking and practice: a top-down approach to computational thinking},
year = {2014},
isbn = {9781450330657},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2674683.2674686},
doi = {10.1145/2674683.2674686},
abstract = {In this paper, we discuss using models and modeling in a new way to teach basic computing to pupils within the K-12 segment. We argue why we believe understanding and creating models are fundamental skills for all pupils as it can be characterized as the skill that enable us to analyze and understand phenomena as well as design and construct artifacts. We also try to characterize the essence of model-based thinking and practice. We propose that a strong focus on the relation between mental models (of real or imaginary systems) and computerized models (embedded in computer-based systems) could provide a new approach to teaching computing. This approach should clarify and make explicit the role of models in computing in connection with other subject areas. We believe that such an approach would strongly broaden the participation in computing, as it will allow more pupils to become active creators with computing.},
booktitle = {Proceedings of the 14th Koli Calling International Conference on Computing Education Research},
pages = {147–151},
numpages = {5},
keywords = {modeling, models, practice, teaching, thinking},
location = {Koli, Finland},
series = {Koli Calling '14}
}

@inproceedings{10.1145/2462476.2465614,
author = {Qureshi, Shahzore and Estevez, Francisco and Pulimood, Sarah Monisha},
title = {Students organizing against pollution: computational thinking across boundaries},
year = {2013},
isbn = {9781450320788},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2462476.2465614},
doi = {10.1145/2462476.2465614},
abstract = {There is a growing need in computer science education to develop courses that demonstrate the articulations between computer science and an array of computing-dependent fields. This poster describes an effort to develop a model for students and faculty to collaborate across disciplines and with a community organization to develop computational solutions to address complex real-world problems. Students in computer science classes are collaborating with students in journalism classes and Habitat for Humanity, to develop a web-based system that manages pollution related data. This is an initiative aimed at empowering citizens in the Trenton area of New Jersey with the opportunity to learn, share, and contribute pollution data while encouraging them to become participants in environmental advocacy and public policy deliberations on these issues. While students focus on the objectives of the individual courses, they are also deeply engaged in the complexities of privacy, security, accessibility of data, user-centered design, etc. as they ponder civic justice issues.},
booktitle = {Proceedings of the 18th ACM Conference on Innovation and Technology in Computer Science Education},
pages = {356},
numpages = {1},
keywords = {civic engagement, collaborative learning, information access, user-generated content moderation, web-based database system},
location = {Canterbury, England, UK},
series = {ITiCSE '13}
}

@inproceedings{10.1145/2445196.2445373,
author = {Kafai, Yasmin B. and Burke, Quinn},
title = {The social turn in K-12 programming: moving from computational thinking to computational participation},
year = {2013},
isbn = {9781450318686},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2445196.2445373},
doi = {10.1145/2445196.2445373},
abstract = {In this conceptual paper, we argue that recent developments in K-12 programming education are suggestive of what can be called a "social turn", a shift in the field in which learning to code has shifted from being a predominantly individualistic and tool-oriented approach to now one that is decidedly sociologically and culturally grounded in the creation and sharing of digital media. We discuss in detail three dimensions of this social turn (1) from writing code to creating applications, (2) from composing "from scratch" to remixing the work of others, and (3) from designing tools to facilitating communities. These three shifts illustrate how the development of artifacts, tools, and communities of programming lead us to move from computational thinking to computational participation. We draw from examples of past and current research, both inside and outside of school, and situate these developments in the context of current discussions around computational thinking, which has become a driving force in revitalizing programming in K-12 curricula and altogether broadening participation in computing.},
booktitle = {Proceeding of the 44th ACM Technical Symposium on Computer Science Education},
pages = {603–608},
numpages = {6},
keywords = {networked commons, novice programming, tools},
location = {Denver, Colorado, USA},
series = {SIGCSE '13}
}

@inproceedings{10.1145/2930674.2930724,
author = {Guo, Yu and Wagh, Aditi and Brady, Corey and Levy, Sharona T. and Horn, Michael S. and Wilensky, Uri},
title = {Frogs to Think with: Improving Students' Computational Thinking and Understanding of Evolution in A Code-First Learning Environment},
year = {2016},
isbn = {9781450343138},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2930674.2930724},
doi = {10.1145/2930674.2930724},
abstract = {This paper presents Frog Pond, an interactive code-first learning environment about biological evolution. We deployed Frog Pond as part of a six-day curricular unit on natural selection implemented in six 7th grade science classes. Here we describe a case study of two students, Charlie and Aaron who participated in the unit. Comparing pre- and post- interviews in which they were asked to design a program for a hypothetical simulation of evolution, we found that both students shifted from an event-based programming approach to a rule-based approach. Both students also drew upon their experience with Frog Pond to explain an evolutionary phenomenon. However, the level of sophistication of the two students' explanations varied along with the aspects of Frog Pond they drew upon. These findings have implications for design improvement to better support students' understanding of evolution.},
booktitle = {Proceedings of the The 15th International Conference on Interaction Design and Children},
pages = {246–254},
numpages = {9},
keywords = {agent-based modeling, code-first learning environment, computational thinking, evolution},
location = {Manchester, United Kingdom},
series = {IDC '16}
}

@inproceedings{10.1145/2676723.2678304,
author = {Franklin, Diana and Dwyer, Hilary A.},
title = {KELP CS and LaPlaya: A Computational Thinking Curriculum and Development Environment for 4th - 6th Grade (Abstract Only)},
year = {2015},
isbn = {9781450329668},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2676723.2678304},
doi = {10.1145/2676723.2678304},
abstract = {This workshop introduces our elementary school programming curriculum, KELP-CS, and the corresponding programming environment LaPlaya. KELP-CS (Kids Engaged in Learning Programming) is an innovative, modular computational thinking curriculum for 4th-6th grade students. Off-computer activities connect computer science concepts to students' every day experiences. On-computer activities in LaPlaya develop students' computational thinking and programming skills. Finally, an engineering design project allows students to apply these new skills through an open-ended, creative project (e.g. digital storytelling in Module 1, and virtual game in Module 2). LaPlaya is a modified Scratch programming environment tailored to the developmental needs of 4th-6th grade students. In this workshop, we begin by introducing the KELP-CS curriculum; LaPlaya, the development environment used in the on-computer activities; and the resources for teachers embedded in both. Workshop participants will do sample on- and off- computer activities from Module 1 (4th grade) and discuss tips and strategies for teaching computational thinking with this age group. For the second part of the workshop, we provide additional background for participants interested in creating their own curriculum with LaPlaya. This includes how to create projects and their analysis.},
booktitle = {Proceedings of the 46th ACM Technical Symposium on Computer Science Education},
pages = {712},
numpages = {1},
keywords = {computer science education, elementary school, novice programming environments},
location = {Kansas City, Missouri, USA},
series = {SIGCSE '15}
}

@inproceedings{10.1145/2538862.2538917,
author = {Daily, Shaundra B. and Leonard, Alison E. and J\"{o}rg, Sophie and Babu, Sabarish and Gundersen, Kara},
title = {Dancing alice: exploring embodied pedagogical strategies for learning computational thinking},
year = {2014},
isbn = {9781450326056},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2538862.2538917},
doi = {10.1145/2538862.2538917},
abstract = {n this paper, we introduce an embodied pedagogical approach for learning computational concepts, utilizing computational practices, and developing computational perspectives. During a five-week pilot, a group of students spent after-school time learning the basic elements of dance and then using them to program three-dimensional characters that could perform. Throughout the pilot, we found students consistently standing up in front of their computers and using their bodies to think through the actuation of their characters. Preliminary results suggest that designing a virtual-physical dance performance is a motivating and engaging social context in which to introduce students, especially girls, to alternative applications in computing.},
booktitle = {Proceedings of the 45th ACM Technical Symposium on Computer Science Education},
pages = {91–96},
numpages = {6},
keywords = {broadening participation, embodiment, virtual environments},
location = {Atlanta, Georgia, USA},
series = {SIGCSE '14}
}

@inproceedings{10.1145/2445196.2445452,
author = {Hug, Sarah and Sandry, Josh and Vordermann, Ryan and Pontelli, Enrico and Wright, Ben},
title = {DISSECT: integrating computational thinking in the traditional K-12 curricula through collaborative teaching (abstract only)},
year = {2013},
isbn = {9781450318686},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2445196.2445452},
doi = {10.1145/2445196.2445452},
abstract = {The goal of the DISSECT program is to integrate computational thinking lessons into general education K-12 classrooms via graduate student/teacher partnerships. The idea of combining the teaching of CT with other disciplines is not new and it has taken shape in a variety of recent efforts in the formal education of youth. What is promising and innovative is the approach as it is implemented in K12 DISSECT classrooms. Through a collaborative teaching partnership, teachers gain a new perspective regarding computer science, and in cooperation with graduate students well-versed in computer science concepts, develop lessons and course modules that serve two purposes: 1.) Address K-12 content standards in core disciplines (e.g., language arts, life science) and 2.) Introduce CT concepts, such as abstraction, algorithms, data analysis and modeling. This poster describes ways computational thinking (CT) is taught in general K-12 classrooms in New Mexico through cooperative teaching. Along with their potential to stimulate interest in computing, these pilot modules were viewed by K12 teachers as enhancing disciplinary course content that teachers are charged with teaching (e.g., middle school science, language arts), deemed vital for sustainability in K12 schools by participating teachers. Preliminary data indicate graduate student and teacher satisfaction with cooperative teaching of CT. Next steps for research will involve student level data collection and analysis.},
booktitle = {Proceeding of the 44th ACM Technical Symposium on Computer Science Education},
pages = {742},
numpages = {1},
keywords = {computational thinking, k12 outreach},
location = {Denver, Colorado, USA},
series = {SIGCSE '13}
}

@inproceedings{10.1145/3626253.3635477,
author = {Tian, Ruochen and Saito, Daisuke and Washizaki, Hironori and Fukazawa, Yoshiaki and Kobayashi, Hiroshi and Tsuji, Ayumi},
title = {Enhancing Programming Education through Game-Based Learning: Design and Implementation of a Puyo Puyo-Inspired Teaching Tool},
year = {2024},
isbn = {9798400704246},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3626253.3635477},
doi = {10.1145/3626253.3635477},
abstract = {Although programming is part of primary school curricula in many countries, barriers persist for elementary students learning programming such as an insufficient understanding of the underlying mathematics, complex concepts, and purpose of programming. These challenges often lead to disinterest. Herein we present an innovative game-design-based programming education tool. Students progressively enhance a classic game, Puyo Puyo, using fundamental programming concepts and selecting the appropriate code. This engaging approach improves students' computational thinking abilities as they transform code into a functional game. Here, we describe the tool's background and structure. Then we detail a workshop using the tool, including analyzing the changes in students' programming skills, computational thinking, and interest in programming. Finally, we summarize the findings and future research directions.},
booktitle = {Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1838–1839},
numpages = {2},
keywords = {block-based coding, computational thinking, game elements, k-12 education},
location = {Portland, OR, USA},
series = {SIGCSE 2024}
}

@article{10.1145/1965724.1965742,
author = {Edwards, Michael},
title = {Algorithmic composition: computational thinking in music},
year = {2011},
issue_date = {July 2011},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {54},
number = {7},
issn = {0001-0782},
url = {https://doi.org/10.1145/1965724.1965742},
doi = {10.1145/1965724.1965742},
abstract = {The composer still composes but also gets to take a programming-enabled journey of musical discovery.},
journal = {Commun. ACM},
month = jul,
pages = {58–67},
numpages = {10}
}

@inproceedings{10.1145/3641555.3705161,
author = {Coenraad, Merijke and Dunbar, Kyle M. and Rangel, Alessandra and Ahn, Wanjoo and Yadav, Aman and Jacob, Sharin},
title = {Design Principles for CT Integrated Lesson Design and Implementation},
year = {2025},
isbn = {9798400705328},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3641555.3705161},
doi = {10.1145/3641555.3705161},
abstract = {Teachers are increasingly integrating computational thinking (CT) into subject-area learning opportunities with the aim to meet both subject-area and CT learning goals. While prior work has identified CT practices synergistic to subject-area learning, less is published about pedagogical frameworks for instructional practices when integrating CT into content area teaching. This poster presents data from educators (teachers and professional developers) about what they find to be crucial factors for designing and implementing CT integrated lessons. Preliminary analysis indicates educators advocate for twenty practices including creating reflection opportunities, actively using CT vocabulary, opportunities for students to practice CT skills, meaningful real-world connections, utilizing scaffolding strategies, explicitly introducing CT practices, clear connections between CT and curricular content, using multiple modalities, and encouraging student discourse.},
booktitle = {Proceedings of the 56th ACM Technical Symposium on Computer Science Education V. 2},
pages = {1425–1426},
numpages = {2},
keywords = {K-12, computational thinking, integration, lesson design, pedagogy, teaching practices},
location = {Pittsburgh, PA, USA},
series = {SIGCSETS 2025}
}